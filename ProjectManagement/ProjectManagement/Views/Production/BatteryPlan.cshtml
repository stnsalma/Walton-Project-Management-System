@using System.Diagnostics
@using Microsoft.Ajax.Utilities
@using ProjectManagement.Models
@model ProjectManagement.ViewModels.Production.VmBatteryProduction
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<CustomBatteryProduction> plans = (List<CustomBatteryProduction>)ViewBag.GetPartialProject;
}
<link href="~/Content/icheck/skins/all.css" rel="stylesheet" />
<link href="~/Content/bootstrap-fileinput/bootstrap-fileinput.css" rel="stylesheet" />
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script src="~/Content/bootstrap-fileinput/bootstrap-fileinput.js"></script>
<script src="~/Content/icheck/icheck.min.js"></script>
<script src="~/Scripts/moment.js"></script>
<script src="~/Content/bootstrap-datetimepicker/bootstrap-datetimepicker.js"></script>
<link href="~/Content/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css" rel="stylesheet" type="text/css" />

@*datatable *@
<link href="~/assets/global/plugins/datatables/datatables.min.css" rel="stylesheet" type="text/css" />
<link href="~/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css" rel="stylesheet" type="text/css" />
<link href="~/assets/layouts/layout4/css/layout.min.css" rel="stylesheet" type="text/css" />
<link href="~/assets/layouts/layout4/css/themes/light.min.css" rel="stylesheet" type="text/css" id="style_color" />
<link href="~/assets/layouts/layout4/css/custom.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/loadingText.css" rel="stylesheet" />

<script src="~/Scripts/jquery.table2excel.js"></script>
@*NEw*@
<script src="~/Scripts/New_2019/dataTables.fixedColumns.min.js"></script>


<style>
    input[type=checkbox] {
        /* Double-sized Checkboxes */
        -ms-transform: scale(2); /* IE */
        -moz-transform: scale(2); /* FF */
        -webkit-transform: scale(2); /* Safari and Chrome */
        -o-transform: scale(2); /* Opera */
        padding: 10px;
    }

    .DTFC_LeftBodyWrapper {
        position: relative;
        top: -11px !important;
        left: 0px;
        overflow: hidden;
        height: 530px;
    }
    .selected {
        background-color: green;
    }

    .bad {
        background-color: red;
    }
    #loading {
        width: 100%;
        height: 100%;
        top: 70px;
        left: 0;
        position: fixed;
        display: block;
        opacity: 0.7;
        background-color: #fff;
        z-index: 999;
        text-align: center;
    }
</style>

<div class="note note-success">
    <p style="color: green;font-size: 20px;"> Mobile Production Plan </p>
</div>

<div class="row">
    <div class="col-md-12">

        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption" style="color: brown;">
                    <span class="caption-subject #569450 sbold uppercase"> MOBILE PRODUCTION PLAN REPORT</span>
                </div>
                @*<a id="dlink" style="display:none;"></a>
                    <button class="btn green btn-outline btn-circle btn-sm pull-right" onclick="tableToExcel('proBatteryPlanTable', 'name', 'CKD.xls')">
                        <i class="fa fa-save"></i>
                        Export as Excell
                    </button>*@
                @*<input type="button" onclick="tableToExcel('proBatteryPlanTable', 'CKDPlan', 'CKD.xls')" value="Export to Excel">*@
                @*<a class="btn btn-success" id="btnExport">Export</a>*@

                @*<a id="dlink" style="display:none;"></a>*@

                <button id="btnExport" class="btn green btn-outline btn-circle btn-sm pull-right">
                    <i class="fa fa-save"></i>
                    Export as Excell
                </button>
            </div>
            <div class="portlet box">
                <div class="portlet-title">
                    <div class="caption" style="color:brown;">
                        <i class="fa fa-cogs"></i>ALL PLAN
                    </div>
                    @*<div class="tools"> </div>*@
                    <div class="tools" style="background-color:green;">
                        <a title="" data-original-title="" href="javascript:;" class="collapse"> </a>
                        <a title="" data-original-title="" href="#portlet-config" data-toggle="modal" class="config"> </a>
                        <a title="" data-original-title="" href="javascript:;" class="reload"> </a>
                        <a title="" data-original-title="" href="javascript:;" class="remove"> </a>
                    </div>
                </div>
                <div class="portlet-body">
                    <div id="divScrollId" class="table-responsive table-scrollable divScrollId" style="overflow: auto;">
                        <table id="proBatteryPlanTable1" class="table table-striped table-bordered table-hover tbl21">
                            @*<table id="proBatteryPlanTable1" class="stripe row-border order-column" style="width:100%">*@
                            <thead class="flip-content proThd" style="background-color:  #8EA6AA;color: yellow">
                                <tr class="proThTr">
                                    <th>Production Information</th>
                                </tr>
                            </thead>
                            <tbody id="tBodyForGraph" class="tBodyForGraph">
                                <tr class="ttr1">
                                    <td class="ttd1" style="font-weight: bold">SMT-Material ReceiveDate</td>
                                </tr>
                                <tr class="ttr2">
                                    <td class="ttd2">SMT-IQC<br />CompleteDate</td>
                                </tr>
                                <tr class="ttr3">
                                    <td class="ttd3">SMT-Trial<br />ProductionDate</td>
                                </tr>
                                <tr class="ttr4">
                                    <td class="ttd4" style="font-weight: bold;color:red"> SMT-SmtMass<br /> ProductionDate</td>
                                </tr>
                                <tr class="ttr5">
                                    <td class="ttd5">SMT Line-1</td>
                                </tr>
                                <tr class="ttr6">
                                    <td class="ttd6">SMT Line-2</td>
                                </tr>

                                @*<tr class="ttr7">
                                        <td class="ttd7" style="font-weight: bold">Housing-Material<br /> ReceiveDate</td>
                                    </tr>
                                    <tr class="ttr8">
                                        <td class="ttd8">Housing-IQC<br />CompleteDate</td>
                                    </tr>
                                    <tr class="ttr9">
                                        <td class="ttd9">Housing-Trial<br />ProductionDate</td>
                                    </tr>
                                    <tr class="ttr10">
                                        <td class="ttd10">Housing-Reliability<br />TestDate</td>
                                    </tr>
                                    <tr class="ttr11">
                                        <td class="ttd11" style="font-weight: bold;color:red">Housing-Mass<br />ProductionDate</td>
                                    </tr>

                                    <tr class="ttr12">
                                        <td class="ttd12">Housing Line-1</td>
                                    </tr>
                                    <tr class="ttr121">
                                        <td class="ttd121">Housing Line-2</td>
                                    </tr>
                                    <tr class="ttr13">
                                        <td class="ttd13">Housing Line-3</td>
                                    </tr>
                                    <tr class="ttr14">
                                        <td class="ttd14">Housing Line-4</td>
                                    </tr>
                                    <tr class="ttr15">
                                        <td class="ttd15">Housing Line-5</td>
                                    </tr>
                                    <tr class="ttr16">
                                        <td class="ttd16">Housing Line-6</td>
                                    </tr>
                                    <tr class="ttr17">
                                        <td class="ttd17" style="font-weight: bold">Battery-Material<br /> ReceiveDate</td>
                                    </tr>
                                    <tr class="ttr18">
                                        <td class="ttd18">Battery-IQC<br />CompleteDate</td>
                                    </tr>
                                    <tr class="ttr19">
                                        <td class="ttd19">Battery-Trial<br />ProductionDate</td>
                                    </tr>
                                    <tr class="ttr20">
                                        <td class="ttd20">Battery-Reliability<br />TestDate</td>
                                    </tr>
                                    <tr class="ttr21">
                                        <td class="ttd21" style="font-weight: bold;color:red">Battery-Mass<br />ProductionDate</td>
                                    </tr>
                                    <tr class="ttr22">
                                        <td class="ttd22">Battery Line-1</td>
                                    </tr>
                                    <tr class="ttr23">
                                        <td class="ttd23">Battery Line-2</td>
                                    </tr>
                                    <tr class="ttr24">
                                        <td class="ttd24">Battery-Aging<br />Test</td>
                                    </tr>*@

                                <tr class="ttr25">
                                    <td class="ttd25" style="font-weight: bold">Assembly-Material<br /> ReceiveDate</td>
                                </tr>
                                <tr class="ttr26">
                                    <td class="ttd26">Assembly-IQC<br />CompleteDate</td>
                                </tr>
                                <tr class="ttr27">
                                    <td class="ttd27">Assembly-Trial<br />ProductionDate</td>
                                </tr>
                                <tr class="ttr28">
                                    <td class="ttd28">Assembly-Software<br />ConfirmationDate</td>
                                </tr>
                                <tr class="ttr29">
                                    <td class="ttd29">Assembly-R&D<br />ConfirmationDate</td>
                                </tr>
                                <tr class="ttr30">
                                    <td class="ttd30" style="font-weight: bold;color:red">Assembly-Mass<br />Production</td>
                                </tr>
                                <tr class="ttr31">
                                    <td class="ttd31">Assembly Line-1</td>
                                </tr>
                                <tr class="ttr32">
                                    <td class="ttd32">Assembly Line-2</td>
                                </tr>
                                <tr class="ttr33">
                                    <td class="ttd33">Assembly Line-3</td>
                                </tr>
                                <tr class="ttr34">
                                    <td class="ttd34">Assembly Line-4</td>
                                </tr>
                                <tr class="ttr35">
                                    <td class="ttd35">Assembly Line-5</td>
                                </tr>
                                <tr class="ttr36">
                                    <td class="ttd36" style="font-weight: bold;color:red">Packing-Mass<br />Production</td>
                                </tr>
                                <tr class="ttr37">
                                    <td class="ttd37">Packing Line-1</td>
                                </tr>
                                <tr class="ttr38">
                                    <td class="ttd38">Packing Line-2</td>
                                </tr>
                            </tbody>
                        </table>

                    </div>
                </div>

            </div>
        </div>

    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption">
                    <span class="caption-subject #569450 sbold uppercase">ALL PROJECTS</span>
                </div>
            </div>
            <div class="portlet box #E2E8E4">
                <div class="portlet-body">
                    <div class="col-lg-12">
                        <div class="col-lg-2"></div>
                        <div class="col-lg-5">
                            @Html.DropDownListFor(model => model.ProjectName, new SelectList(ViewBag.Projects, "Value", "Text"), "SELECT PROJECT", new { @class = "form-control ddChosen dropForProject1 ", id = "dropForProject", style = "text-align: center;" })
                        </div>
                        <div class="col-lg-1"></div>
                        <div class="col-lg-2">
                            <input type="button" id="btnForSearch" class="btn sbold uppercase btn-outline blue" value="Load Project" />
                        </div>
                        <div class="col-lg-2"></div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="col-lg-12">
                    <div class="caption font-dark">
                        <i class="icon-settings font-dark"></i>
                        <span class="caption-subject bold uppercase">All Planning for selected project</span>
                    </div>
                    <div class="tools"> </div>
                </div>
            </div>
            <div class="portlet-body">
                <div class="table-scrollable" style="overflow: auto;">
                    <table class="table table-bordered table-striped table-condensed flip-content tblForSelectedPro" id="tblForSelectedPro">
                        <thead>
                            <tr>
                                <th style="display:none;">proId</th>
                                <th style="display:none;">AsmPlanId</th>
                                <th style="display:none;">AsmId</th>
                                @*<th>#</th>*@
                                <th style="text-align: left;"><p style="color:blueviolet;font-weight: bold">Status</th>
                                <th style="text-align: left;"><p style="color:blueviolet;font-weight: bold">SMT</p>Material<br />Receive<br />Date</th>
                                <th style="text-align: left;"><p style="color:blueviolet;font-weight: bold">SMT</p>Material<br />End<br />Date</th>
                                <th style="text-align: left;"><p style="color:blueviolet;font-weight: bold">SMT</p>IQC<br />Start<br />Date</th>
                                <th style="text-align: left;"><p style="color:blueviolet;font-weight: bold">SMT</p>IQC<br />End<br />Date</th>
                                <th style="text-align: left;"><p style="color:blueviolet;font-weight: bold">SMT</p>Trial<br />Pro_Start<br />Date</th>
                                <th style="text-align: left;"><p style="color:blueviolet;font-weight: bold">SMT</p>Trial<br />Line</th>
                                <th style="text-align: left;"><p style="color:blueviolet;font-weight: bold">SMT</p>Trial<br />Pro_End<br />Date</th>
                                <th style="text-align: left;"><p style="color:blueviolet;font-weight: bold">SMT</p>Mass<br />Pro_Start<br />Date</th>
                                <th style="text-align: left;"><p style="color:blueviolet;font-weight: bold">SMT</p>Mass<br />Production<br />Line</th>
                                <th style="text-align: left;"><p style="color:blueviolet;font-weight: bold">SMT</p>Mass<br />Pro_End<br />Date</th>

                                <th style="text-align: left;"><p style="color: yellowgreen;font-weight: bold">Housing</p>Material<br />Receive<br />Date</th>
                                <th style="text-align: left;"><p style="color: yellowgreen;font-weight: bold">Housing</p>Material<br />End<br />Date</th>
                                <th style="text-align: left;"><p style="color: yellowgreen;font-weight: bold">Housing</p>IQC<br />Start<br />Date</th>
                                <th style="text-align: left;"><p style="color: yellowgreen;font-weight: bold">Housing</p>IQC<br />End<br />Date</th>
                                <th style="text-align: left;"><p style="color: yellowgreen;font-weight: bold">Housing</p>Trial<br />Pro_Start<br />Date</th>
                                <th style="text-align: left;"><p style="color: yellowgreen;font-weight: bold">Housing</p>Trial<br />Line</th>
                                <th style="text-align: left;"><p style="color: yellowgreen;font-weight: bold">Housing</p>Trial<br />Pro_End<br />Date</th>
                                <th style="text-align: left;"><p style="color: yellowgreen;font-weight: bold">Housing</p>Reliability<br />Start<br />Date</th>
                                <th style="text-align: left;"><p style="color: yellowgreen;font-weight: bold">Housing</p>Reliability<br />End<br />Date</th>
                                <th style="text-align: left;"><p style="color: yellowgreen;font-weight: bold">Housing</p>Mass<br />Pro_Start<br />Date</th>
                                <th style="text-align: left;"><p style="color: yellowgreen;font-weight: bold">Housing</p>Mass<br />Production<br />Line</th>
                                <th style="text-align: left;"><p style="color: yellowgreen;font-weight: bold">Housing</p>Mass<br />Pro_End<br />Date</th>

                                <th style="text-align: left;"><p style="color: grey;font-weight: bold">Battery</p>Material<br />Receive<br />Date</th>
                                <th style="text-align: left;"><p style="color: grey;font-weight: bold">Battery</p>Material<br />End<br />Date</th>
                                <th style="text-align: left;"><p style="color: grey;font-weight: bold">Battery</p>IQC<br />Start<br />Date</th>
                                <th style="text-align: left;"><p style="color: grey;font-weight: bold">Battery</p>IQC<br />End<br />Date</th>
                                <th style="text-align: left;"><p style="color: grey;font-weight: bold">Battery</p>Trial<br />Pro_Start<br />Date</th>
                                <th style="text-align: left;"><p style="color: grey;font-weight: bold">Battery</p>Trial<br />Line</th>
                                <th style="text-align: left;"><p style="color: grey;font-weight: bold">Battery</p>Trial<br />Pro_End<br />Date</th>
                                <th style="text-align: left;"><p style="color: grey;font-weight: bold">Battery</p>Reliability<br />Start<br />Date</th>
                                <th style="text-align: left;"><p style="color: grey;font-weight: bold">Battery</p>Reliability<br />End<br />Date</th>
                                <th style="text-align: left;"><p style="color: grey;font-weight: bold">Battery</p>Mass<br />Pro_Start<br />Date</th>
                                <th style="text-align: left;"><p style="color: grey;font-weight: bold">Battery</p>Mass<br />Production<br />Line</th>
                                <th style="text-align: left;"><p style="color: grey;font-weight: bold">Battery</p>Mass<br />Pro_End<br />Date</th>
                                <th style="text-align: left;"><p style="color: grey;font-weight: bold">Battery</p>Aging<br />Start<br />Date</th>
                                <th style="text-align: left;"><p style="color: grey;font-weight: bold">Battery</p>Aging<br />End<br />Date</th>

                                <th style="text-align: left;"><p style="color: red;font-weight: bold">Assembly</p>Material<br />Receive<br />Date</th>
                                <th style="text-align: left;"><p style="color: red;font-weight: bold">Assembly</p>Material<br />End<br />Date</th>
                                <th style="text-align: left;"><p style="color: red;font-weight: bold">Assembly</p>IQC<br />Start<br />Date</th>
                                <th style="text-align: left;"><p style="color: red;font-weight: bold">Assembly</p>IQC<br />End<br />Date</th>
                                <th style="text-align: left;"><p style="color: red;font-weight: bold">Assembly</p>Trial<br />Pro_Start<br />Date</th>
                                <th style="text-align: left;"><p style="color: red;font-weight: bold">Assembly</p>Trial<br />Line</th>
                                <th style="text-align: left;"><p style="color: red;font-weight: bold">Assembly</p>Trial<br />Pro_End<br />Date</th>
                                <th style="text-align: left;"><p style="color: red;font-weight: bold">Assembly</p>Software<br />Start<br />Date</th>
                                <th style="text-align: left;"><p style="color: red;font-weight: bold">Assembly</p>Software<br />End<br />Date</th>
                                <th style="text-align: left;"><p style="color: red;font-weight: bold">Assembly</p>R&D_Con<br />Start<br />Date</th>
                                <th style="text-align: left;"><p style="color: red;font-weight: bold">Assembly</p>R&D_Con<br />End<br />Date</th>
                                <th style="text-align: left;"><p style="color: red;font-weight: bold">Assembly</p>Mass<br />Pro_Start<br />Date</th>
                                <th style="text-align: left;"><p style="color: red;font-weight: bold">Assembly</p>Mass<br />Production<br />Line</th>
                                <th style="text-align: left;"><p style="color: red;font-weight: bold">Assembly</p>Mass<br />Pro_End<br />Date</th>
                                <th style="text-align: left;"><p style="color: red;font-weight: bold">Packing</p>Mass<br />Pro_Start<br />Date</th>
                                <th style="text-align: left;"><p style="color: red;font-weight: bold">Packing</p>Mass<br />Production<br />Line</th>
                                <th style="text-align: left;"><p style="color: red;font-weight: bold">Packing</p>Mass<br />Pro_End<br />Date</th>
                                <th><div class="col-lg-12"> New Plan/ Edit</div></th>
                                <th><div class="col-lg-12"> InActive</div></th>
                            </tr>
                        </thead>
                        <tbody id="tBodyForGraph" class="tBodyForGraph"></tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption" style="color: brown;">
                    <span class="caption-subject #569450 sbold uppercase"> MOBILE PRODUCTION PLAN</span>
                </div>
            </div>
            <div class="portlet box">
                <div class="portlet-title">
                    <div class="caption" style="color:brown;">
                        <i class="fa fa-cogs"></i>ALL MOBILE PRODUCTION PLAN
                    </div>
                    <div class="tools" style="background-color:#75AE42;">
                        <a title="" data-original-title="" href="javascript:;" class="collapse"> </a>
                        <a title="" data-original-title="" href="#portlet-config" data-toggle="modal" class="config"> </a>
                        <a title="" data-original-title="" href="javascript:;" class="reload"> </a>
                        <a title="" data-original-title="" href="javascript:;" class="remove"> </a>
                    </div>
                </div>
                <div><button id="rfBtn" class="btn sbold uppercase btn-outline cbp-animation-unfold">Refresh If necessary</button></div>
                <div class="portlet-body">
                    <div class="table-scrollable divSearchedvalue" id="divSearchedvalue" style="overflow: auto; display: none;">
                        <table id="batteryPlanTable" class="table table-bordered table-striped table-scrollable table-bordered table-hover tbl">
                            <thead class="flip-content" style="background-color:  #75AE42;color: white">
                                <tr>
                                    <th style="text-align: center;">Type Of Work</th>
                                    <th style="text-align: center;">Start Date</th>
                                    <th style="text-align: center;">End Date</th>
                                </tr>
                            </thead>
                            <tbody id="tBodyForCharger" class="tBodyForCharger">
                                <tr style="text-align: center;" class="tr1" id="tr1">

                                    <th style="text-align: center;font-weight: bold;color:brown" class="col-lg-4">
                                        @*PROJECT NAME : @Request.QueryString["projectName"]<br /> PROCESS : SMT*@
                                        <div class="col-lg-2">
                                            <input type="checkbox" id="smtChkId" class="smtChkId" name="smt" value="smt_CheckBx">
                                        </div>
                                        <div class="col-lg-8">
                                            <input id="smtProName" class="form-control" type="text" disabled="disabled" style="text-align: center;font-weight: bold;color:brown" />

                                        </div>
                                        <div class="col-lg-2">PROCESS : SMT</div>

                                        <br />
                                    </th>
                                </tr>
                                <tr class="tr2" id="tr2">
                                    <td>Material Receiving in Inventory</td>
                                    <td>

                                        @Html.TextBoxFor(model => model.BatterySmtModel.MaterialReceiveStartDateBSmt, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker materialStartDateBSmt", id = "materialReceiveStartDateBSmt", @disabled = "disabled", onchange = "materialReceiveStartDateSmtChange()", Type = "text", placeholder = "YYYY-MM-DD", style = "text-align: center;" })
                                        <p id="smtMaterialStartPara" style="display:none;color:red">One Project is waiting for SMT Material Receiving.<br /> **Note: If you want to continue, please continue according to your necessity or change the date.</p>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatterySmtModel.MaterialReceiveEndDateBSmt, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker materialEndDateBSmt", id = "materialReceiveEndDateBSmt", @disabled = "disabled", Type = "text", placeholder = "YYYY-MM-DD", style = "text-align: center;" })
                                    </td>
                                </tr>
                                <tr class="tr3" id="tr3">
                                    <td>IQC Confirmation</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatterySmtModel.IqcCompleteStartDateBSmt, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker iqcStartDateBSmt", style = "text-align: center;", id = "iqcCompleteStartDateBSmt", @disabled = "disabled", onchange = "iqcCompleteStartDateSmtChange()", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })
                                        <p id="smtIqcStartPara" style="display:none;color:red">One Project is waiting for SMT IQC Confirmation.<br /> **Note: If you want to continue, please continue according to your necessity or change the date.</p>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatterySmtModel.IqcCompleteEndDateBSmt, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker iqcEndDateBSmt", style = "text-align: center;", @disabled = "disabled", id = "iqcCompleteEndDateBSmt", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })
                                    </td>

                                </tr>
                                <tr>
                                    <td>Trial Production</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatterySmtModel.TrialProductionStartDateBSmt, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker trialStartDateBSmt", style = "text-align: center;", @disabled = "disabled", onchange = "trialProductionStartDateSmtChange()", id = "trialProductionStartDateBSmt", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })
                                        <p id="smtTrialStartPara" style="display:none;color:red">One Project is waiting for SMT Trial Production.<br /> **Note: If you want to continue, please continue according to your necessity or change the date.</p>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatterySmtModel.TrialProductionEndDateBSmt, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker trialEndDateBSmt", style = "text-align: center;", @disabled = "disabled", id = "trialProductionEndDateBSmt", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>

                                </tr>
                                <tr>
                                    <td></td>
                                    <td>
                                        <div style="color:blue;font-weight: bold;">Select Line</div>
                                        <select id="smtTrialLine" class="smtTrialLine chosen" multiple="multiple" style="width: 66%;" onchange="smtTrialLineFunc()">
                                            <option value="0">SELECT LINE</option>
                                            <option value="Line-1">Line-1</option>
                                            <option value="Line-2">Line-2</option>
                                            @*<option value="Line-3">Line-3</option>*@

                                        </select>
                                    </td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td>SMT Mass Production</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatterySmtModel.SmtMassProductionStartDateBSmt, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker massProStartDateBSmt", style = "text-align: center;", id = "massProductionStartDateBSmt", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })
                                        <p id="smtMassProStartPara" style="display:none;color:red">One Project is waiting for SMT Mass Production.<br /> **Note: If you want to continue, please continue according to your necessity or change the date.</p>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatterySmtModel.SmtMassProductionEndDateBSmt, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker massProEndDateBSmt", @disabled = "disabled", style = "text-align: center;", id = "massProductionEndDateBSmt", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>

                                </tr>
                                <tr>
                                    <td style="width: 100px;"></td>
                                    <td>
                                        <div style="color:blue;font-weight: bold;">Total Quantity</div>
                                        <input id="batterySmt_TotalQuantity" class="form-control" type="number" min="1" style="width: 66%;" onchange="smtLineInfoFunc()" />
                                        <p id="smtTotal" style="display:none;color:red">SMT Total Quantity must be greater than SMT PerDayCapacity.</p>

                                        <div style="color:blue;font-weight: bold;">PerDayProduction</div>
                                        <input id="batterySmt_PerDayCapacity" class="form-control" type="number" min="1" style="width: 66%;" onchange="smtLineInfoFunc()" />
                                        <p id="smtPerDay" style="display:none;color:red">SMT Per Day Production is Blank. Please fill up this.</p>

                                        <div style="color:blue;font-weight: bold;">Select Line</div>
                                        <select id="smtMassLineInfo" class="smtMassLineInfo chosen" multiple="multiple" style="width: 66%;" onchange="smtLineInfoFunc()">
                                            <option value="0">SELECT LINE</option>

                                        </select>
                                        <div style="color:blue;font-weight: bold;">
                                            <table id="smtAvailableLineInformation" class="table table-bordered table-striped table-condensed table-scrollable flip-content smtAvailableLineInformation">
                                                <thead class="flip-content" style="background-color:lightslategray;color: white">
                                                    <tr>
                                                        <th style="text-align: center;">Date_Booked</th>
                                                        <th style="text-align: center;">Line<br />Number  </th>
                                                        <th style="text-align: center;">Available<br />Line<br />Capacity </th>
                                                        <th style="text-align: center;">Warning</th>
                                                    </tr>
                                                </thead>
                                                <tbody class="smAvailableLineTBody" id="smAvailableLineTBody"></tbody>
                                            </table>

                                        </div>
                                    </td>

                                    <td style="color:blue;font-weight: bold;">

                                        <table id="smtAllLineInformation" class="table table-bordered table-striped table-condensed table-scrollable flip-content smtAllLineInformation">
                                            <thead class="flip-content" style="background-color:lightslategray;color: white">
                                                <tr>
                                                    <th style="text-align: center;">Date_Booked</th>
                                                    <th style="text-align: center;">Line<br />Number  </th>
                                                    <th style="text-align: center;">Line<br />Capacity  </th>
                                                    <th style="text-align: center;">Project <br />Type  </th>
                                                    <th style="text-align: center;">Total <br />Booked<br />PerDay<br />Production  </th>
                                                    <th style="text-align: center;">Available<br />Line<br />Capacity <br />For PerDay</th>
                                                </tr>
                                            </thead>
                                            <tbody class="smAllLineTBody" id="smAllLineTBody"></tbody>
                                        </table>

                                    </td>
                                </tr>

                                <tr style="text-align: center;">
                                    <th style="text-align: center;font-weight: bold;color:brown" class="col-lg-4">
                                        @*PROJECT NAME : @Request.QueryString["projectName"]*@
                                        <div class="col-lg-2">

                                            <input type="checkbox" id="housingChkId" class="housingChkId" name="housing" value="housing_CheckBx">
                                        </div>
                                        <div class="col-lg-8">
                                            <input id="housingProName" class="form-control" type="text" disabled="disabled" style="text-align: center;font-weight: bold;color:brown" />

                                        </div>
                                        <div class="col-lg-2">PROCESS : HOUSING</div>

                                        <br />
                                    </th>
                                </tr>
                                <tr>
                                    <td>Material Receiving in Inventory</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryHousingModel.MaterialReceiveStartDateBHousing, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker materialStartDateHousing", id = "materialReceiveStartDateHousing", onchange = "materialReceiveStartDateHousingChange()", @disabled = "disabled", Type = "text", placeholder = "YYYY-MM-DD", style = "text-align: center;" })
                                        <p id="housingMaterialStartPara" style="display:none;color:red">One Project is waiting for Housing Material Receiving.<br /> **Note: If you want to continue, please continue according to your necessity or change the date.</p>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryHousingModel.MaterialReceiveEndDateBHousing, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker materialEndDateHousing", id = "materialReceiveEndDateHousing", @disabled = "disabled", Type = "text", placeholder = "YYYY-MM-DD", style = "text-align: center;" })
                                    </td>

                                </tr>
                                <tr>
                                    <td>IQC Confirmation</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryHousingModel.IqcCompleteStartDateBHousing, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker iqcStartDateHousing", style = "text-align: center;", id = "iqcCompleteStartDateHousing", onchange = "iqcCompleteStartDateHousingChange()", @disabled = "disabled", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })
                                        <p id="housingIqcStartPara" style="display:none;color:red">One Project is waiting for Housing IQC Confirmation.<br /> **Note: If you want to continue, please continue according to your necessity or change the date.</p>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryHousingModel.IqcCompleteEndDateBHousing, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker iqcEndDateHousing", style = "text-align: center;", id = "iqcCompleteEndDateHousing", @disabled = "disabled", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>Trial Production</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryHousingModel.TrialProductionStartDateBHousing, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker trialStartDateHousing", style = "text-align: center;", id = "trialProductionStartDateHousing", onchange = "trialProductionStartDateHousingChange()", @disabled = "disabled", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })
                                        <p id="housingTrialStartPara" style="display:none;color:red">One Project is waiting for Housing Trial Production.<br /> **Note: If you want to continue, please continue according to your necessity or change the date.</p>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryHousingModel.TrialProductionEndDateBHousing, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker trialEndDateHousing", style = "text-align: center;", id = "trialProductionEndDateHousing", @disabled = "disabled", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>

                                </tr>
                                <tr>
                                    <td></td>
                                    <td>
                                        <div style="color:blue;font-weight: bold;">Select Line</div>
                                        <select id="housingTrialLine" class="housingTrialLine chosen" multiple="multiple" style="width: 66%;" onchange="housingTrialLineFunc()">
                                            <option value="0">SELECT LINE</option>
                                            <option value="Line-1">Line-1</option>
                                            <option value="Line-2">Line-2</option>
                                            <option value="Line-3">Line-3</option>
                                            <option value="Line-4">Line-4</option>
                                            <option value="Line-5">Line-5</option>
                                            <option value="Line-6">Line-6</option>
                                        </select>
                                    </td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td>Housing Reliability Test</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryHousingModel.HousingReliabilityTestStartDateBHousing, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker housingStartDateHousing", style = "text-align: center;", @disabled = "disabled", id = "housingReliabilityStartDateHousing", onchange = "reliabilityStartDateHousingChange()", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryHousingModel.HousingReliabilityTestEndDateBHousing, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker housingEndDateHousing", style = "text-align: center;", @disabled = "disabled", id = "housingReliabilityEndtDateHousing", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>
                                </tr>
                                <tr>
                                    <td>Housing Mass Production</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryHousingModel.HousingMassProductionStartDateBHousing, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker housingMassStartDateHousing", style = "text-align: center;", id = "housingMassProStartDateHousing", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })
                                        <p id="housingMassProStartPara" style="display:none;color:red">One Project is waiting for Housing Mass Production.<br /> **Note: If you want to continue, please continue according to your necessity or change the date.</p>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryHousingModel.HousingMassProductionEndDateBHousing, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker housingMassEndDateHousing", @disabled = "disabled", style = "text-align: center;", id = "housingMassProEndtDateHousing", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>
                                </tr>
                                <tr>
                                    <td style="width: 100px;"></td>
                                    <td>
                                        <div style="color:blue;font-weight: bold;">Total Quantity</div>
                                        <input id="batteryHousing_TotalQuantity" class="form-control" type="number" min="1" style="width: 66%;" onchange="housingLineInfoFunc()" />
                                        <p id="housingTotal" style="display:none;color:red">Housing Total Quantity must be greater than Housing PerDayCapacity.</p>

                                        <div style="color:blue;font-weight: bold;">PerDayProduction</div>
                                        <input id="batteryHousing_PerDayCapacity" class="form-control" type="number" min="1" style="width: 66%;" onchange="housingLineInfoFunc()" />
                                        <p id="housingPerDay" style="display:none;color:red">Housing Per Day Capacity is Blank. Please fill up this.</p>

                                        <div style="color:blue;font-weight: bold;">Select Line</div>
                                        <select id="housingMassLineInfo" class="housingMassLineInfo chosen" multiple="multiple" style="width: 66%;" onchange="housingLineInfoFunc()">
                                            <option value="0">SELECT LINE</option>
                                        </select>
                                        <div style="color:blue;font-weight: bold;">

                                            <table id="housingAvailableLineInformation" class="table table-bordered table-striped table-condensed table-scrollable flip-content housingAvailableLineInformation">
                                                <thead class="flip-content" style="background-color:lightslategray;color: white">
                                                    <tr>
                                                        <th style="text-align: center;">Date_Booked</th>
                                                        <th style="text-align: center;">Line<br />Number  </th>
                                                        @*<th style="text-align: center;">Line<br />Capacity  </th>
                                                            <th style="text-align: center;">Booked<br />PerDay<br />Capacity  </th>*@
                                                        <th style="text-align: center;">Available<br />Line<br />Capacity </th>
                                                        <th style="text-align: center;">Warning</th>
                                                    </tr>
                                                </thead>
                                                <tbody class="housingAvailableLineTBody" id="housingAvailableLineTBody"></tbody>
                                            </table>

                                        </div>
                                    </td>
                                    <td style="color:blue;font-weight: bold;">

                                        <table id="housingAllLineInformation" class="table table-bordered table-striped table-condensed table-scrollable flip-content housingAllLineInformation">
                                            <thead class="flip-content" style="background-color:lightslategray;color: white">
                                                <tr>
                                                    @*<th style="text-align: center;">Date_Booked</th>
                                                        <th style="text-align: center;">Line<br />Number  </th>
                                                        <th style="text-align: center;">Line<br />Capacity  </th>
                                                        <th style="text-align: center;">Booked<br />PerDay<br />Capacity  </th>
                                                        <th style="text-align: center;">Available<br />Line<br />Capacity </th>*@
                                                    <th style="text-align: center;">Date_Booked</th>
                                                    <th style="text-align: center;">Line<br />Number  </th>
                                                    <th style="text-align: center;">Line<br />Capacity  </th>
                                                    <th style="text-align: center;">Project <br />Type  </th>
                                                    <th style="text-align: center;">Total <br />Booked<br />PerDay<br />Production  </th>
                                                    <th style="text-align: center;">Available<br />Line<br />Capacity <br />For PerDay</th>
                                                </tr>
                                            </thead>
                                            <tbody class="housingAllLineTBody" id="housingAllLineTBody"></tbody>
                                        </table>

                                    </td>
                                </tr>
                                @*------------------------------------------*@
                                <tr style="text-align: center;">
                                    <th style="text-align: center;font-weight: bold;color:brown" class="col-lg-4">
                                        <div class="col-lg-2">

                                            <input type="checkbox" id="batteryChkId" class="batteryChkId" name="housing" value="battery_CheckBx">
                                        </div>
                                        <div class="col-lg-8">
                                            <input id="batteryProName" class="form-control" type="text" disabled="disabled" style="text-align: center;font-weight: bold;color:brown" />
                                        </div>
                                        <div class="col-lg-2">PROCESS : BATTERY</div>
                                        <br />
                                    </th>
                                </tr>
                                <tr>
                                    <td>Material Receiving in Inventory</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryModel.MaterialReceiveStartDateBattery, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker materialStartDateBattery", id = "materialReceiveStartDateBattery", onchange = "materialReceiveStartDateBatteryChange()", @disabled = "disabled", Type = "text", placeholder = "YYYY-MM-DD", style = "text-align: center;" })
                                        <p id="batteryMaterialStartPara" style="display:none;color:red">One Project is waiting for Battery Material Receiving.<br /> **Note: If you want to continue, please continue according to your necessity or change the date.</p>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryModel.MaterialReceiveEndDateBattery, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker materialEndDateBattery", id = "materialReceiveEndDateBattery", @disabled = "disabled", Type = "text", placeholder = "YYYY-MM-DD", style = "text-align: center;" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>IQC Confirmation</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryModel.IqcCompleteStartDateBattery, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker iqcStartDateBattery", style = "text-align: center;", id = "iqcCompleteStartDateBattery", onchange = "iqcCompleteStartDateBatteryChange()", @disabled = "disabled", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })
                                        <p id="batteryIqcStartPara" style="display:none;color:red">One Project is waiting for Battery IQC Confirmation.<br /> **Note: If you want to continue, please continue according to your necessity or change the date.</p>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryModel.IqcCompleteEndDateBattery, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker iqcEndDateBattery", style = "text-align: center;", id = "iqcCompleteEndDateBattery", @disabled = "disabled", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>Trial Production</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryModel.TrialProductionStartDateBattery, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker trialStartDateBattery", style = "text-align: center;", id = "trialProductionStartDateBattery", onchange = "trialProductionStartDateBatteryChange()", @disabled = "disabled", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })
                                        <p id="batteryTrialStartPara" style="display:none;color:red">One Project is waiting for Battery Trial Confirmation.<br /> **Note: If you want to continue, please continue according to your necessity or change the date.</p>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryModel.TrialProductionEndDateBattery, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker trialEndDateBattery", style = "text-align: center;", id = "trialProductionEndDateBattery", @disabled = "disabled", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>

                                </tr>
                                <tr>
                                    <td></td>
                                    <td>
                                        <div style="color:blue;font-weight: bold;">Select Line</div>
                                        <select id="batteryTrialLine" class="batteryTrialLine chosen" multiple="multiple" style="width: 66%;" onchange="batteryTrialLineFunc()">
                                            <option value="0">SELECT LINE</option>
                                            <option value="Line-1">Line-1</option>
                                            <option value="Line-2">Line-2</option>
                                            @*<option value="Line-3">Line-3</option>*@
                                        </select>
                                    </td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td>Battery Reliability Test</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryModel.BatteryReliabilityTestStartDate, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker batteryReliabilityTestStart", style = "text-align: center;", @disabled = "disabled", onchange = "reliabilityTestStartDateBatteryChange()", id = "batteryReliabilityTestStartDate", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryModel.BatteryReliabilityTestEndDate, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker batteryReliabilityTestEnd", style = "text-align: center;", @disabled = "disabled", id = "batteryReliabilityTestEndDate", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>
                                </tr>
                                <tr>
                                    <td>Battery Mass Production</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryModel.BatteryMassProductionStartDate, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker batteryMassProductionStart", style = "text-align: center;", id = "batteryMassProductionStartDate", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })
                                        <p id="batteryMassProStartPara" style="display:none;color:red">One Project is waiting for Battery Mass Production.<br /> **Note: If you want to continue, please continue according to your necessity or change the date.</p>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryModel.BatteryMassProductionEndDate, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker batteryMassProductionEnd", @disabled = "disabled", style = "text-align: center;", id = "batteryMassProductionEndDate", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>
                                </tr>
                                <tr>
                                    <td style="width: 100px;"></td>
                                    <td>
                                        <div style="color:blue;font-weight: bold;">Total Quantity</div>
                                        <input id="battery_TotalQuantity" class="form-control" type="number" min="1" style="width: 66%;" onchange="batteryLineInfoFunc()" />
                                        <p id="batteryTotal" style="display:none;color:red">Battery Total Quantity must be greater than Battery PerDayCapacity.</p>

                                        <div style="color:blue;font-weight: bold;">PerDayProduction</div>
                                        <input id="battery_PerDayCapacity" class="form-control" type="number" min="1" style="width: 66%;" onchange="batteryLineInfoFunc()" />
                                        <p id="batteryPerDay" style="display:none;color:red">Battery Per Day Capacity is Blank. Please fill up this.</p>

                                        <div style="color:blue;font-weight: bold;">Select Line</div>
                                        <select id="batteryMassLineInfo" class="batteryMassLineInfo chosen" multiple="multiple" style="width: 66%;" onchange="batteryLineInfoFunc()">
                                            <option value="0">SELECT LINE</option>

                                        </select>

                                        <div style="color:blue;font-weight: bold;">

                                            <table id="batteryAvailableLineInformation" class="table table-bordered table-striped table-condensed table-scrollable flip-content batteryAvailableLineInformation">
                                                <thead class="flip-content" style="background-color:lightslategray;color: white">
                                                    <tr>
                                                        <th style="text-align: center;">Date_Booked</th>
                                                        <th style="text-align: center;">Line<br />Number  </th>
                                                        @*<th style="text-align: center;">Line<br />Capacity  </th>
                                                            <th style="text-align: center;">Booked<br />PerDay<br />Capacity  </th>*@
                                                        <th style="text-align: center;">Available<br />Line<br />Capacity </th>
                                                        <th style="text-align: center;">Warning</th>
                                                    </tr>
                                                </thead>
                                                <tbody class="batteryAvailableLineTBody" id="batteryAvailableLineTBody"></tbody>
                                            </table>

                                        </div>

                                    </td>
                                    <td style="color:blue;font-weight: bold;">

                                        <table id="batteryAllLineInformation" class="table table-bordered table-striped table-condensed table-scrollable flip-content batteryAllLineInformation">
                                            <thead class="flip-content" style="background-color:lightslategray;color: white">
                                                <tr>
                                                    @*<th style="text-align: center;">Date_Booked</th>
                                                        <th style="text-align: center;">Line<br />Number  </th>
                                                        <th style="text-align: center;">Line<br />Capacity  </th>
                                                        <th style="text-align: center;">Booked<br />PerDay<br />Capacity  </th>
                                                        <th style="text-align: center;">Available<br />Line<br />Capacity </th>*@
                                                    <th style="text-align: center;">Date_Booked</th>
                                                    <th style="text-align: center;">Line<br />Number  </th>
                                                    <th style="text-align: center;">Line<br />Capacity  </th>
                                                    <th style="text-align: center;">Project <br />Type  </th>
                                                    <th style="text-align: center;">Total <br />Booked<br />PerDay<br />Production  </th>
                                                    <th style="text-align: center;">Available<br />Line<br />Capacity <br />For PerDay</th>
                                                </tr>
                                            </thead>
                                            <tbody class="batteryAllLineTBody" id="batteryAllLineTBody"></tbody>
                                        </table>

                                    </td>
                                </tr>
                                <tr>
                                    <td>Battery Aging Test</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryModel.BatteryAgingTestStartDate, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker batteryAgingTestStart", @disabled = "disabled", style = "text-align: center;", id = "batteryAgingTestStartDate", onchange = "agingTestStartDateBatteryChange()", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryModel.BatteryAgingTestEndDate, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker batteryAgingTestEnd", @disabled = "disabled", style = "text-align: center;", id = "batteryAgingTestEndDate", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>
                                </tr>
                                @*--------------------------------------------*@
                                <tr style="text-align: center;">
                                    <th style="text-align: center;font-weight: bold;color:brown" class="col-lg-4">
                                        <div class="col-lg-2">
                                            <input type="checkbox" id="assemblyChkId" class="assemblyChkId" name="assembly" value="assembly_CheckBx">
                                        </div>
                                        <div class="col-lg-8">
                                            <input id="assemblyProName" class="form-control" type="text" disabled="disabled" style="text-align: center;font-weight: bold;color:brown" />
                                        </div>
                                        <div class="col-lg-2">PROCESS : ASSEMBLY</div>

                                        <br />

                                    </th>
                                </tr>

                                <tr>
                                    <td>Material Receiving in Inventory</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryAssemblyAndPackingModel.MaterialReceiveStartDateBAssembly, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker materialStartBAssembly", id = "materialStartDateBAssembly", onchange = "materialReceiveAssemblyFunc()", Type = "text", placeholder = "YYYY-MM-DD", style = "text-align: center;" })

                                        <p id="materialAssemblyStartPara" style="display:none;color:red">One Project is waiting for Assembly Material Receiving.<br /> **Note: If you want to continue, please continue according to your necessity or change the date.</p>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryAssemblyAndPackingModel.MaterialReceiveEndDateBAssembly, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker materialEndBAssembly", id = "materialReceiveEndDateBAssembly", @disabled = "disabled", Type = "text", placeholder = "YYYY-MM-DD", style = "text-align: center;" })
                                        @*@Html.TextBoxFor(model => model.MaterialReceiveEndDate, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker materialEndDateAssembly", id = "materialReceiveEndDateAssembly", onchange = "materialReceiveDateAssembly()", @disabled = "disabled", Type = "text", placeholder = "YYYY-MM-DD", style = "text-align: center;" })*@
                                    </td>
                                </tr>

                                <tr>
                                    <td>IQC Confirmation</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryAssemblyAndPackingModel.IqcCompleteStartDateBAssembly, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker iqcStartDateBAssembly", style = "text-align: center;", id = "iqcCompleteStartDateBAssembly", @disabled = "disabled", Size = "66", Type = "text", placeholder = "YYYY-MM-DD", onchange = "iqcCompleteStartDateBAssemblyChange()" })
                                        <p id="iqcAssemblyStartPara" style="display:none;color:red">One Project is waiting for Assembly IQC Confirmation.<br /> **Note: If you want to continue, please continue according to your necessity or change the date.</p>
                                    </td>
                                    <td>
                                        @*@Html.TextBoxFor(model => model.IqcCompleteEndDate, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker iqcEndDateAssembly", style = "text-align: center;", id = "iqcCompleteEndDateAssembly", onchange = "iqcCompleteDateAssembly()", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })*@

                                        @Html.TextBoxFor(model => model.BatteryAssemblyAndPackingModel.IqcCompleteEndDateBAssembly, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker iqcEndDateBAssembly", style = "text-align: center;", id = "iqcCompleteEndDateBAssembly", @disabled = "disabled", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>
                                </tr>
                                <tr>
                                    <td>Trial Production</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryAssemblyAndPackingModel.TrialProductionStartDateBAssembly, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker trialStartDateBAssembly", @disabled = "disabled", style = "text-align: center;", id = "trialProductionStartDateBAssembly", onchange = "trialProductionStartDateBAssemblyChange()", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })
                                        <p id="trialAssemblyStartPara" style="display:none;color:red">One Project is waiting for Assembly Trial Confirmation.<br /> **Note: If you want to continue, please continue according to your necessity or change the date.</p>
                                    </td>
                                    <td>
                                        @*@Html.TextBoxFor(model => model.TrialProductionEndDate, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker trialEndDateAssembly", style = "text-align: center;", id = "trialProductionEndDateAssembly", onchange = "trialProductionDateAssembly()", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })*@
                                        @Html.TextBoxFor(model => model.BatteryAssemblyAndPackingModel.TrialProductionEndDateBAssembly, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker trialEndDateBAssembly", @disabled = "disabled", style = "text-align: center;", id = "trialProductionEndDateBAssembly", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <td>
                                        <div style="color:blue;font-weight: bold;">Select Line</div>
                                        <select id="assemblyTrialLine" class="assemblyTrialLine chosen" multiple="multiple" style="width: 66%;" onchange="assemblyTrialLineFunc()">
                                            <option value="0">SELECT LINE</option>
                                            <option value="Line-1">Line-1</option>
                                            <option value="Line-2">Line-2</option>
                                            <option value="Line-3">Line-3</option>
                                            <option value="Line-4">Line-4</option>
                                            <option value="Line-5">Line-5</option>

                                        </select>
                                    </td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td>Software Confirmation</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryAssemblyAndPackingModel.SoftwareConfirmationStartDateBAssembly, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker softwareStartDate", @disabled = "disabled", style = "text-align: center;", id = "softwareConfirmationStartDate", onchange = "softwareConfirmationStartDateBAssemblyChange()", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>
                                    <td>
                                        @*@Html.TextBoxFor(model => model.RandDConfirmationEndDate, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker rnDEndDateAssembly", @disabled = "disabled", style = "text-align: center;", id = "rnDConfirmEndDateAssembly", onchange = "rnDConfirmDateAssembly()", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })*@
                                        @Html.TextBoxFor(model => model.BatteryAssemblyAndPackingModel.SoftwareConfirmationEndDateBAssembly, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker softwareEndDate", @disabled = "disabled", style = "text-align: center;", id = "softwareConfirmationEndDate", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })


                                    </td>
                                </tr>
                                <tr>
                                    <td>R&D Confirmation</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryAssemblyAndPackingModel.RandDConfirmationStartDateBAssembly, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker rnDStartDateBAssembly", @disabled = "disabled", style = "text-align: center;", id = "rnDConfirmStartDateBAssembly", onchange = "rnDConfirmationStartDateBAssemblyChange()", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>
                                    <td>
                                        @*@Html.TextBoxFor(model => model.RandDConfirmationEndDate, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker rnDEndDateAssembly", @disabled = "disabled", style = "text-align: center;", id = "rnDConfirmEndDateAssembly", onchange = "rnDConfirmDateAssembly()", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })*@
                                        @Html.TextBoxFor(model => model.BatteryAssemblyAndPackingModel.RandDConfirmationEndDateBAssembly, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker rnDEndDateBAssembly", @disabled = "disabled", style = "text-align: center;", id = "rnDConfirmEndDateBAssembly", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>
                                </tr>
                                <tr>
                                    <td>Assembly Mass Production</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryAssemblyAndPackingModel.AssemblyMassProductionStartDateBAssembly, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker assemStartBAssembly", style = "text-align: center;", id = "assembStartDateBAssembly", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })
                                        <p id="assemblyMassProStartPara" style="display:none;color:red">One Project is waiting for Assembly Mass Production.<br /> **Note: If you want to continue, please continue according to your necessity or change the date.</p>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryAssemblyAndPackingModel.AssemblyMassProductionEndDateBAssembly, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker assemEndBAssembly", @disabled = "disabled", style = "text-align: center;", id = "assembEndDateBAssembly", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>
                                </tr>
                                <tr>
                                    <td style="width: 100px;"></td>
                                    <td>
                                        <div style="color:blue;font-weight: bold;">Total Quantity</div>
                                        <input id="batteryAssembly_TotalQuantity" class="form-control" type="number" min="1" style="width: 66%;" onchange="assebmlyLineInfoFunc()" />
                                        <p id="assemblyTotal" style="display:none;color:red">Assembly Total Quantity must be greater than Assembly PerDayCapacity.</p>

                                        <div style="color:blue;font-weight: bold;">PerDayProduction</div>
                                        <input id="batteryAssembly_PerDayCapacity" class="form-control" type="number" min="1" style="width: 66%;" onchange="assebmlyLineInfoFunc()" />
                                        <p id="assemblyPerDay" style="display:none;color:red">Assembly Per Day Capacity is Blank. Please fill up this.</p>

                                        <div style="color:blue;font-weight: bold;">Select Line</div>
                                        <select id="assemblyMassLineInfo" class="assemblyMassLineInfo chosen" multiple="multiple" style="width: 66%;" onchange="assebmlyLineInfoFunc()">
                                            <option value="0">SELECT LINE</option>

                                        </select>

                                        <div style="color:blue;font-weight: bold;">
                                            <table id="assemblyAvailableLineInformation" class="table table-bordered table-striped table-condensed table-scrollable flip-content assemblyAvailableLineInformation">
                                                <thead class="flip-content" style="background-color:lightslategray;color: white">
                                                    <tr>
                                                        <th style="text-align: center;">Date_Booked</th>
                                                        <th style="text-align: center;">Line<br />Number  </th>
                                                        @*<th style="text-align: center;">Line<br />Capacity  </th>
                                                            <th style="text-align: center;">Booked<br />Capacity  </th>*@
                                                        <th style="text-align: center;">Available<br />Line<br />Capacity </th>
                                                        @*<th style="text-align: center;">Production</th>*@
                                                        <th style="text-align: center;">Warning</th>
                                                    </tr>
                                                </thead>
                                                <tbody class="assemblyAvailableLineTBody" id="assemblyAvailableLineTBody"></tbody>
                                            </table>

                                        </div>
                                    </td>
                                    <td style="color:blue;font-weight: bold;">

                                        <table id="assemblyAllLineInformation" class="table table-bordered table-striped table-condensed table-scrollable flip-content assemblyAllLineInformation">
                                            <thead class="flip-content" style="background-color:lightslategray;color: white">
                                                <tr>
                                                    @*<th style="text-align: center;">Date_Booked</th>
                                                        <th style="text-align: center;">Line<br />Number  </th>
                                                        <th style="text-align: center;">Line<br />Capacity  </th>
                                                        <th style="text-align: center;">Booked<br />PerDay<br />Capacity  </th>
                                                        <th style="text-align: center;">Available<br />Line<br />Capacity </th>*@
                                                    <th style="text-align: center;">Date_Booked</th>
                                                    <th style="text-align: center;">Line<br />Number  </th>
                                                    <th style="text-align: center;">Line<br />Capacity  </th>
                                                    <th style="text-align: center;">Total <br />Booked<br />PerDay<br />Production  </th>
                                                    <th style="text-align: center;">Available<br />Line<br />Capacity <br />For PerDay</th>
                                                    @*<th style="text-align: center;">Production</th>*@
                                                </tr>
                                            </thead>
                                            <tbody class="assemblyAllLineTBody" id="assemblyAllLineTBody"></tbody>
                                        </table>


                                    </td>
                                </tr>
                                <tr>
                                    <td>Packing Mass Production</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryAssemblyAndPackingModel.PackingMassProductionStartDateBAssembly, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker packingMassProductionStartBAssembly", style = "text-align: center;", id = "packingMassProductionStartDateBAssembly", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })
                                        <p id="packingMassProStartPara" style="display:none;color:red">One Project is waiting for Packing Mass Production.<br /> **Note: If you want to continue, please continue according to your necessity or change the date.</p>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.BatteryAssemblyAndPackingModel.PackingMassProductionEndDateBAssembly, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker packingMassProductionEndBAssembly", @disabled = "disabled", style = "text-align: center;", id = "packingMassProductionEndDateBAssembly", Size = "66", Type = "text", placeholder = "YYYY-MM-DD" })

                                    </td>
                                </tr>
                                <tr>
                                    <td style="width: 100px;"></td>
                                    <td>
                                        <div style="color:blue;font-weight: bold;">Total Quantity</div>
                                        <input id="batteryPacking_TotalQuantity" class="form-control" type="number" min="1" style="width: 66%;" onchange="packingLineInfoFunc()" />
                                        <p id="packingTotal" style="display:none;color:red">Packing Total Quantity must be greater than Packing PerDayCapacity.</p>

                                        <div style="color:blue;font-weight: bold;">PerDayProduction</div>
                                        <input id="batteryPacking_PerDayCapacity" class="form-control" type="number" min="1" style="width: 66%;" onchange="packingLineInfoFunc()" />
                                        <p id="packingPerDay" style="display:none;color:red">Packing Per Day Capacity is Blank. Please fill up this.</p>

                                        <div style="color:blue;font-weight: bold;">Select Line</div>
                                        <select id="packingMassLineInfo" class="packingMassLineInfo chosen" multiple="multiple" style="width: 66%;" onchange="packingLineInfoFunc()">
                                            <option value="0">SELECT LINE</option>

                                        </select>
                                        <div style="color:blue;font-weight: bold;">
                                            <table id="packingAvailableLineInformation" class="table table-bordered table-striped table-condensed table-scrollable flip-content packingAvailableLineInformation">
                                                <thead class="flip-content" style="background-color:lightslategray;color: white">
                                                    <tr>
                                                        <th style="text-align: center;">Date_Booked</th>
                                                        <th style="text-align: center;">Line<br />Number  </th>
                                                        @* <th style="text-align: center;">Line<br />Capacity  </th>
                                                            <th style="text-align: center;">Booked<br />PerDay<br />Capacity  </th>*@
                                                        <th style="text-align: center;">Available<br />Line<br />Capacity </th>
                                                        <th style="text-align: center;">Warning</th>
                                                    </tr>
                                                </thead>
                                                <tbody class="packingAvailableLineTBody" id="packingAvailableLineTBody"></tbody>
                                            </table>
                                        </div>
                                    </td>
                                    <td style="color:blue;font-weight: bold;">

                                        <table id="packingAllLineInformation" class="table table-bordered table-striped table-condensed table-scrollable flip-content packingAllLineInformation">
                                            <thead class="flip-content" style="background-color:lightslategray;color: white">
                                                <tr>
                                                    @*<th style="text-align: center;">Date_Booked</th>
                                                        <th style="text-align: center;">Line<br />Number  </th>
                                                        <th style="text-align: center;">Line<br />Capacity  </th>
                                                        <th style="text-align: center;">Booked<br />PerDay<br />Capacity  </th>
                                                        <th style="text-align: center;">Available<br />Line<br />Capacity </th>*@
                                                    <th style="text-align: center;">Date_Booked</th>
                                                    <th style="text-align: center;">Line<br />Number  </th>
                                                    <th style="text-align: center;">Line<br />Capacity  </th>
                                                    <th style="text-align: center;">Project <br />Type  </th>
                                                    <th style="text-align: center;">Total <br />Booked<br />PerDay<br />Production  </th>
                                                    <th style="text-align: center;">Available<br />Line<br />Capacity <br />For PerDay</th>
                                                </tr>
                                            </thead>
                                            <tbody class="packingAllLineTBody" id="packingAllLineTBody"></tbody>
                                        </table>

                                    </td>
                                </tr>

                            </tbody>
                        </table>

                    </div>
                </div>
            </div>
            <br />

            <div class="form-actions">
                <div class="row">
                    <div class="col-md-2"></div>
                    <div class="col-md-4" style="text-align: center;">
                        <input class="btn sbold uppercase btn-outline blue" type="submit" id="btnSave" value="Save New Plan" />
                    </div>

                    <div class="col-md-4" style="text-align: center;">
                        @*<input class="btn sbold uppercase btn-outline red" type="submit" id="btnEdit" value="Edit" />*@
                    </div>
                    <div class="col-md-2"></div>
                </div>

            </div>
        </div>
    </div>
</div>

<div id="loading" style="display: none;text-align: center;">
    <img src="~/img/loading-spinner-grey.gif" />
</div>

<script type="text/javaScript">

    ////
    var smtChk = false;
    var houseChk = false;
    var batteryChk = false;
    var assemblyChk = false;
    var arrList = [];
    var arrList1 = [];
    var arrList2 = [];
    var arrListForBatterySmt = [];
    var arrListForBatteryHousing = [];
    var arrListForBattery = [];
    var arrListForBatteryAssembly = [];
    var arrListForBatteryPacking = [];
    //$('.jquery-excell-export').click(function () {

    //    var table = document.getElementById('table2excel');
    //    var html = table.outerHTML;
    //    window.open('data:application/vnd.ms-excel,' + encodeURIComponent(html));

    //});
    ////////////Battery Report/////////////

    var today = new Date();
    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + '01';
    var date2 = today.getFullYear() + '-' + (today.getMonth() + 2) + '-' + '31';

    //var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + '16';
    //var date2 = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + '17';

    //var date = today.getFullYear() + '-' + (today.getMonth() ) + '-' + '29';
    //var date2 = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + '05';

    //Start comment
    //var startDate = moment(date).add({ days: 7, months: 1 }); //YYYY-MM-DD
    //var endDate = moment(date).add({ days: 7, months: 1 }); //YYYY-MM-DD
    //var startDate = moment(date).add(-15, 'days'); //YYYY-MM-DD
    //var endDate = moment(date).add(20, 'days'); //YYYY-MM-DD
    //End Comment
    var startDate = moment(date);
    var endDate = moment(date2);


    //var startDate = date;
    //var endDate = date2;

    var getDateArray = function (startDate, endDate) {
        var arr = new Array();
        var dt = new Date(startDate);

        while (dt <= endDate) {
            arr.push(new Date(dt));
            dt.setDate(dt.getDate() + 1);
        }
        return arr;
    };

    var dateArr = getDateArray(startDate, endDate);



    var dateArr1 = [];
    for (var i = 0; i < dateArr.length; i++) {

        dateArr1.push(moment(dateArr[i]).format('YYYY-MM-DD'));

    }
    var dateArr2 = JSON.stringify(dateArr1);

    function removeDuplicate(arr) {
        var c;
        var len = arr.length;
        var result = [];
        var obj = {};
        for (c = 0; c < len; c++) {
            obj[arr[c]] = 0;
        }
        for (c in obj) {
            result.push(c.trim());
        }
        return result;
    }

    $.ajax({
        url: '@Url.Action("GetCkdGrandChartData", "Production")',//'/ProjectManager/GetProject',
        type: "GET",
        dataType: "JSON",
        data: { dateArr2: dateArr2 },
        success: function (data) {

            console.log(data);
            var ll = data.length;
            console.log(ll);
            var dataList = [];

            for (var x in data) {
                dataList = data[x];
            }
            var l = dataList.length;

            for (var ii = 0; ii < l; ii++) {
                var productionDate = moment(dataList[ii].ProductionDate).format('YYYY-MM-DD');
                var tr = document.getElementById('proBatteryPlanTable1').tHead.children[0],
                th = document.createElement('th');
                th.innerHTML = productionDate;
                th.width = "80px";
                tr.appendChild(th);
                //ttr1

                if (dataList[ii].MetarialReceiveBSmt == null) {
                    dataList[ii].MetarialReceiveBSmt = "";
                    var body1 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr1").append(body1);

                }
                else if (dataList[ii].MetarialReceiveBSmt != null) {

                    var names13 = dataList[ii].MetarialReceiveBSmt;
                    var temp13 = names13.split(",").map(function (item) {
                        return item.trim();
                    });

                    var body11 = '<td>' + '<p style="background-color:#F9B071;color:black;font-weight:bold;width:150px">' + removeDuplicate(temp13) + '</p>' + '</td>';
                    $("#proBatteryPlanTable1 tr.ttr1").append(body11);
                    th.width = "150px";
                }

                if (dataList[ii].IqcCompleteBSmt == null) {
                    dataList[ii].IqcCompleteBSmt = "";
                    var body2 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr2").append(body2);

                }
                else if (dataList[ii].IqcCompleteBSmt != null) {

                    var names14 = dataList[ii].IqcCompleteBSmt;
                    var temp14 = names14.split(",").map(function (item) {
                        return item.trim();
                    });

                    var body22 = '<td>' + '<p style="background-color:#FCF506;color:black;font-weight:bold;width:150px">' + removeDuplicate(temp14) + '</p>' + '</td>';

                    $("#proBatteryPlanTable1 tr.ttr2").append(body22);
                    th.width = "150px";
                }

                if (dataList[ii].TrialProductionBSmt == null) {
                    dataList[ii].TrialProductionBSmt = "";
                    var body3 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr3").append(body3);

                }
                else if (dataList[ii].TrialProductionBSmt != null) {
                    var names15 = dataList[ii].TrialProductionBSmt;
                    var temp15 = names15.split(",").map(function (item) {
                        return item.trim();
                    });
                    var body33 = '<td>' + '<p style="background-color:#DCDDD5;color:black;font-weight:bold;width:150px">' + removeDuplicate(temp15) + '</p>' + '</td>';

                    $("#proBatteryPlanTable1 tr.ttr3").append(body33);
                    th.width = "150px";
                }
                var body4 = '<td>--</td>';
                $("#proBatteryPlanTable1 tr.ttr4").append(body4);

                if (dataList[ii].SmtLineOne == null) {
                    dataList[ii].SmtLineOne = "";
                    var body5 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr5").append(body5);

                }
                else if (dataList[ii].SmtLineOne != null) {
                    var names16 = dataList[ii].SmtLineOne;
                    var temp16 = names16.split(",").map(function (item) {
                        return item.trim();
                    });

                    var body55 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;width:150px">' + removeDuplicate(temp16) + '</p>' + '</td>';

                    $("#proBatteryPlanTable1 tr.ttr5").append(body55);
                    th.width = "150px";
                }

                if (dataList[ii].SmtLineTwo == null) {
                    dataList[ii].SmtLineTwo = "";
                    var body6 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr6").append(body6);

                }
                else if (dataList[ii].SmtLineTwo != null) {

                    var names17 = dataList[ii].SmtLineTwo;
                    var temp17 = names17.split(",").map(function (item) {
                        return item.trim();
                    });
                    var body66 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;width:150px">' + removeDuplicate(temp17) + '</p>' + '</td>';

                    $("#proBatteryPlanTable1 tr.ttr6").append(body66);
                    th.width = "150px";
                }

                //Housing
                //if (dataList[ii].MetarialReceiveBHousing == null) {
                //    dataList[ii].MetarialReceiveBHousing = "";
                //    var body7 = '<td>--</td>';
                //    $("#proBatteryPlanTable1 tr.ttr7").append(body7);

                //}
                //else if (dataList[ii].MetarialReceiveBHousing != null) {

                //    var body77 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].MetarialReceiveBHousing + '</p>' + '</td>';

                //    $("#proBatteryPlanTable1 tr.ttr7").append(body77);

                //}

                //if (dataList[ii].IqcCompleteBHousing == null) {
                //    dataList[ii].IqcCompleteBHousing = "";
                //    var body8 = '<td>--</td>';
                //    $("#proBatteryPlanTable1 tr.ttr8").append(body8);

                //}
                //else if (dataList[ii].IqcCompleteBHousing != null) {

                //    var body88 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].IqcCompleteBHousing + '</p>' + '</td>';

                //    $("#proBatteryPlanTable1 tr.ttr8").append(body88);

                //}
                //if (dataList[ii].TrialProductionBHousing == null) {
                //    dataList[ii].TrialProductionBHousing = "";
                //    var body9 = '<td>--</td>';
                //    $("#proBatteryPlanTable1 tr.ttr9").append(body9);

                //}
                //else if (dataList[ii].TrialProductionBHousing != null) {

                //    var body99 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].TrialProductionBHousing + '</p>' + '</td>';

                //    $("#proBatteryPlanTable1 tr.ttr9").append(body99);

                //}

                //if (dataList[ii].HousingBReliability == null) {
                //    dataList[ii].HousingBReliability = "";
                //    var body10 = '<td>--</td>';
                //    $("#proBatteryPlanTable1 tr.ttr10").append(body10);

                //}
                //else if (dataList[ii].HousingBReliability != null) {

                //    var body101 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].HousingBReliability + '</p>' + '</td>';

                //    $("#proBatteryPlanTable1 tr.ttr10").append(body101);

                //}
                //var body102 = '<td>--</td>';
                //$("#proBatteryPlanTable1 tr.ttr11").append(body102);

                //if (dataList[ii].HousingLineOne == null) {
                //    dataList[ii].HousingLineOne = "";
                //    var body12 = '<td>--</td>';
                //    $("#proBatteryPlanTable1 tr.ttr12").append(body12);

                //}
                //else if (dataList[ii].HousingLineOne != null) {

                //    var body1211 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].HousingLineOne + '</p>' + '</td>';

                //    $("#proBatteryPlanTable1 tr.ttr12").append(body1211);

                //}
                //if (dataList[ii].HousingLineTwo == null) {
                //    dataList[ii].HousingLineTwo = "";
                //    var body122 = '<td>--</td>';
                //    $("#proBatteryPlanTable1 tr.ttr121").append(body122);

                //}
                //else if (dataList[ii].HousingLineTwo != null) {

                //    var body13 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].HousingLineTwo + '</p>' + '</td>';

                //    $("#proBatteryPlanTable1 tr.ttr13").append(body13);

                //}

                //if (dataList[ii].HousingLineThree == null) {
                //    dataList[ii].HousingLineThree = "";
                //    var body103 = '<td>--</td>';
                //    $("#proBatteryPlanTable1 tr.ttr13").append(body103);

                //}
                //else if (dataList[ii].HousingLineThree != null) {

                //    var body131 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].HousingLineThree + '</p>' + '</td>';

                //    $("#proBatteryPlanTable1 tr.ttr13").append(body131);

                //}

                //if (dataList[ii].HousingLineFour == null) {
                //    dataList[ii].HousingLineFour = "";
                //    var body14 = '<td>--</td>';
                //    $("#proBatteryPlanTable1 tr.ttr14").append(body14);

                //}
                //else if (dataList[ii].HousingLineFour != null) {

                //    var body141 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].HousingLineFour + '</p>' + '</td>';

                //    $("#proBatteryPlanTable1 tr.ttr14").append(body141);

                //}

                //if (dataList[ii].HousingLineFive == null) {
                //    dataList[ii].HousingLineFive = "";
                //    var body15 = '<td>--</td>';
                //    $("#proBatteryPlanTable1 tr.ttr15").append(body15);

                //}
                //else if (dataList[ii].HousingLineFive != null) {

                //    var body151 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].HousingLineFive + '</p>' + '</td>';

                //    $("#proBatteryPlanTable1 tr.ttr15").append(body151);

                //}

                //if (dataList[ii].HousingLineSix == null) {
                //    dataList[ii].HousingLineSix = "";
                //    var body16 = '<td>--</td>';
                //    $("#proBatteryPlanTable1 tr.ttr16").append(body16);

                //}
                //else if (dataList[ii].HousingLineSix != null) {

                //    var body161 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].HousingLineSix + '</p>' + '</td>';

                //    $("#proBatteryPlanTable1 tr.ttr16").append(body161);

                //}


                //if (dataList[ii].BatteryMetarialReceive == null) {
                //    dataList[ii].BatteryMetarialReceive = "";
                //    var body17 = '<td>--</td>';
                //    $("#proBatteryPlanTable1 tr.ttr17").append(body17);

                //}
                //else if (dataList[ii].BatteryMetarialReceive != null) {

                //    var body171 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].BatteryMetarialReceive + '</p>' + '</td>';

                //    $("#proBatteryPlanTable1 tr.ttr17").append(body171);

                //}

                //if (dataList[ii].BatteryIqcComplete == null) {
                //    dataList[ii].BatteryIqcComplete = "";
                //    var body18 = '<td>--</td>';
                //    $("#proBatteryPlanTable1 tr.ttr18").append(body18);

                //}
                //else if (dataList[ii].BatteryIqcComplete != null) {

                //    var body181 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].BatteryIqcComplete + '</p>' + '</td>';

                //    $("#proBatteryPlanTable1 tr.ttr18").append(body181);

                //}
                //if (dataList[ii].BatteryTrialProduction == null) {
                //    dataList[ii].BatteryTrialProduction = "";
                //    var body19 = '<td>--</td>';
                //    $("#proBatteryPlanTable1 tr.ttr19").append(body19);

                //}
                //else if (dataList[ii].BatteryTrialProduction != null) {

                //    var body191 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].BatteryTrialProduction + '</p>' + '</td>';

                //    $("#proBatteryPlanTable1 tr.ttr19").append(body191);

                //}

                //if (dataList[ii].BatteryReliability == null) {
                //    dataList[ii].BatteryReliability = "";
                //    var body20 = '<td>--</td>';
                //    $("#proBatteryPlanTable1 tr.ttr20").append(body20);

                //}
                //else if (dataList[ii].BatteryReliability != null) {

                //    var body120 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].BatteryReliability + '</p>' + '</td>';

                //    $("#proBatteryPlanTable1 tr.ttr20").append(body120);

                //}

                //var body21 = '<td>--</td>';
                //$("#proBatteryPlanTable1 tr.ttr21").append(body21);

                //if (dataList[ii].BatteryLineOne == null) {
                //    dataList[ii].BatteryLineOne = "";
                //    var body221 = '<td>--</td>';
                //    $("#proBatteryPlanTable1 tr.ttr22").append(body221);

                //}
                //else if (dataList[ii].BatteryLineOne != null) {

                //    var body121 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].BatteryLineOne + '</p>' + '</td>';

                //    $("#proBatteryPlanTable1 tr.ttr22").append(body121);

                //}
                //if (dataList[ii].BatteryLineTwo == null) {
                //    dataList[ii].BatteryLineTwo = "";
                //    var body222 = '<td>--</td>';
                //    $("#proBatteryPlanTable1 tr.ttr23").append(body222);

                //}
                //else if (dataList[ii].BatteryLineTwo != null) {

                //    var body1222 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].BatteryLineTwo + '</p>' + '</td>';

                //    $("#proBatteryPlanTable1 tr.ttr23").append(body1222);

                //}

                //if (dataList[ii].BatteryAging == null) {
                //    dataList[ii].BatteryAging = "";
                //    var body24 = '<td>--</td>';
                //    $("#proBatteryPlanTable1 tr.ttr24").append(body24);

                //}
                //else if (dataList[ii].BatteryAging != null) {

                //    var body242 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].BatteryAging + '</p>' + '</td>';
                //    $("#proBatteryPlanTable1 tr.ttr24").append(body242);

                //}

                if (dataList[ii].MetarialReceiveAssembly == null) {
                    dataList[ii].MetarialReceiveAssembly = "";
                    var body25 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr25").append(body25);

                }
                else if (dataList[ii].MetarialReceiveAssembly != null) {

                    var names = dataList[ii].MetarialReceiveAssembly;
                    var temp = names.split(",").map(function (item) {
                        return item.trim();
                    });

                    var body252 = '<td>' + '<p style="background-color:#F9B071;color:black;font-weight:bold;width:150px">' + removeDuplicate(temp) + '</p>' + '</td>';
                    $("#proBatteryPlanTable1 tr.ttr25").append(body252);
                    th.width = "150px";
                }

                if (dataList[ii].IqcCompleteAssembly == null) {
                    dataList[ii].IqcCompleteAssembly = "";
                    var body26 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr26").append(body26);

                }
                else if (dataList[ii].IqcCompleteAssembly != null) {
                    var names1 = dataList[ii].IqcCompleteAssembly;
                    var temp1 = names1.split(",").map(function (item) {
                        return item.trim();
                    });
                    var body262 = '<td>' + '<p style="background-color:#FCF506;color:black;font-weight:bold;width:150px;">' + removeDuplicate(temp1) + '</p>' + '</td>';
                    $("#proBatteryPlanTable1 tr.ttr26").append(body262);
                    th.width = "150px";
                }
                if (dataList[ii].TrialProductionAssembly == null) {
                    dataList[ii].TrialProductionAssembly = "";
                    var body27 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr27").append(body27);

                }
                else if (dataList[ii].TrialProductionAssembly != null) {

                    var names2 = dataList[ii].TrialProductionAssembly;
                    var temp2 = names2.split(",").map(function (item) {
                        return item.trim();
                    });
                    var body272 = '<td>' + '<p style="background-color:#DCDDD5;color:black;font-weight:bold;width:150px">' + removeDuplicate(temp2) + '</p>' + '</td>';
                    $("#proBatteryPlanTable1 tr.ttr27").append(body272);
                    th.width = "150px";
                }

                if (dataList[ii].SoftwareConfirmationAssembly == null) {
                    dataList[ii].SoftwareConfirmationAssembly = "";
                    var body28 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr28").append(body28);

                }
                else if (dataList[ii].SoftwareConfirmationAssembly != null) {

                    var names3 = dataList[ii].SoftwareConfirmationAssembly;
                    var temp3 = names3.split(",").map(function (item) {
                        return item.trim();
                    });
                    var body282 = '<td>' + '<p style="background-color:#C2E3EB;color:black;font-weight:bold;width:150px">' + removeDuplicate(temp3) + '</p>' + '</td>';
                    $("#proBatteryPlanTable1 tr.ttr28").append(body282);
                    th.width = "150px";
                }

                if (dataList[ii].RnDConfirmAssembly == null) {
                    dataList[ii].RnDConfirmAssembly = "";
                    var body29 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr29").append(body29);

                }
                else if (dataList[ii].RnDConfirmAssembly != null) {

                    var names4 = dataList[ii].RnDConfirmAssembly;
                    var temp4 = names4.split(",").map(function (item) {
                        return item.trim();
                    });
                    var body292 = '<td>' + '<p style="background-color:#CDECB3;color:black;font-weight:bold;width:150px">' + removeDuplicate(temp4) + '</p>' + '</td>';
                    $("#proBatteryPlanTable1 tr.ttr29").append(body292);
                    th.width = "150px";
                }

                var body30 = '<td>--</td>';
                $("#proBatteryPlanTable1 tr.ttr30").append(body30);
                //
                if (dataList[ii].AssemblyLineOne == null) {
                    dataList[ii].AssemblyLineOne = "";
                    var body31 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr31").append(body31);
                }
                else if (dataList[ii].AssemblyLineOne != null) {

                    var names5 = dataList[ii].AssemblyLineOne;
                    var temp5 = names5.split(",").map(function (item) {
                        return item.trim();
                    });
                    var body313 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;width:150px">' + removeDuplicate(temp5) + '</p>' + '</td>';
                    $("#proBatteryPlanTable1 tr.ttr31").append(body313);
                    th.width = "150px";
                }

                if (dataList[ii].AssemblyLineTwo == null) {
                    dataList[ii].AssemblyLineTwo = "";
                    var body32 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr32").append(body32);
                }
                else if (dataList[ii].AssemblyLineTwo != null) {
                    var names6 = dataList[ii].AssemblyLineTwo;
                    var temp6 = names6.split(",").map(function (item) {
                        return item.trim();
                    });
                    var body322 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;width:150px">' + removeDuplicate(temp6) + '</p>' + '</td>';
                    $("#proBatteryPlanTable1 tr.ttr32").append(body322);
                    th.width = "150px";
                }

                if (dataList[ii].AssemblyLineThree == null) {
                    dataList[ii].AssemblyLineThree = "";
                    var body331 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr33").append(body331);
                }
                else if (dataList[ii].AssemblyLineThree != null) {
                    var names7 = dataList[ii].AssemblyLineThree;
                    var temp7 = names7.split(",").map(function (item) {
                        return item.trim();
                    });
                    var body332 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;width:150px">' + removeDuplicate(temp7) + '</p>' + '</td>';
                    $("#proBatteryPlanTable1 tr.ttr33").append(body332);
                    th.width = "150px";
                }

                if (dataList[ii].AssemblyLineFour == null) {
                    dataList[ii].AssemblyLineFour = "";
                    var body34 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr34").append(body34);
                }
                else if (dataList[ii].AssemblyLineFour != null) {
                    var names8 = dataList[ii].AssemblyLineFour;
                    var temp8 = names8.split(",").map(function (item) {
                        return item.trim();
                    });
                    var body341 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;width:150px">' + removeDuplicate(temp8) + '</p>' + '</td>';
                    $("#proBatteryPlanTable1 tr.ttr34").append(body341);
                    th.width = "150px";
                }

                if (dataList[ii].AssemblyLineFive == null) {
                    dataList[ii].AssemblyLineFive = "";
                    var body35 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr35").append(body35);
                }
                else if (dataList[ii].AssemblyLineFive != null) {

                    var names9 = dataList[ii].AssemblyLineFive;
                    var temp9 = names9.split(",").map(function (item) {
                        return item.trim();
                    });

                    var body351 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;width:150px">' + removeDuplicate(temp9) + '</p>' + '</td>';
                    $("#proBatteryPlanTable1 tr.ttr35").append(body351);
                    th.width = "150px";
                }

                var body36 = '<td>--</td>';
                $("#proBatteryPlanTable1 tr.ttr36").append(body36);

                if (dataList[ii].PackingLine1 == null) {
                    dataList[ii].PackingLine1 = "";
                    var body37 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr37").append(body37);
                }
                else if (dataList[ii].PackingLine1 != null) {
                    var names10 = dataList[ii].PackingLine1;
                    var temp10 = names10.split(",").map(function (item) {
                        return item.trim();
                    });

                    var body371 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;width:150px">' + removeDuplicate(temp10) + '</p>' + '</td>';
                    $("#proBatteryPlanTable1 tr.ttr37").append(body371);
                    th.width = "150px";
                }

                if (dataList[ii].PackingLine2 == null) {
                    dataList[ii].PackingLine2 = "";
                    var body38 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr38").append(body38);
                }
                else if (dataList[ii].PackingLine2 != null) {

                    var names11 = dataList[ii].PackingLine2;
                    var temp11 = names11.split(",").map(function (item) {
                        return item.trim();
                    });

                    var body381 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;width:150px">' + removeDuplicate(temp11) + '</p>' + '</td>';
                    $("#proBatteryPlanTable1 tr.ttr38").append(body381);
                    th.width = "150px";
                }
            }

            $('#proBatteryPlanTable1').DataTable({
                "scrollX": true,
                "scrollY": 550,
                "paging": false,
                "scrollCollapse": true,
                "sorting": false,
                "autoWidth": false,
                fixedColumns: {
                    leftColumns: 1,
                    // rightColumns: 1
                }
            });
        }

    });




    @*$.ajax({
        url: '@Url.Action("GetCkdGrandChartData", "Production")',//'/ProjectManager/GetProject',
        type: "GET",
        dataType: "JSON",
        data: { dateArr2: dateArr2 },
        success: function (data) {

            console.log(data);
            var ll = data.length;
            console.log(ll);
            var dataList = [];

            for (var x in data) {
                dataList = data[x];
            }
            var l = dataList.length;

            for (var ii = 0; ii < l; ii++) {
                var productionDate = moment(dataList[ii].ProductionDate).format('YYYY-MM-DD');
                var tr = document.getElementById('proBatteryPlanTable12').tHead.children[0],
                th = document.createElement('th');
                th.innerHTML = productionDate;
                th.width = "80px";
                tr.appendChild(th);
                //ttr1

                if (dataList[ii].MetarialReceiveBSmt == null) {
                    dataList[ii].MetarialReceiveBSmt = "";
                    var body1 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr1").append(body1);

                }
                else if (dataList[ii].MetarialReceiveBSmt != null) {

                    var body11 = '<td>' + '<p style="background-color:#F9B071;color:black;font-weight:bold;">' + dataList[ii].MetarialReceiveBSmt + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr1").append(body11);

                }

                if (dataList[ii].IqcCompleteBSmt == null) {
                    dataList[ii].IqcCompleteBSmt = "";
                    var body2 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr2").append(body2);

                }
                else if (dataList[ii].IqcCompleteBSmt != null) {

                    var body22 = '<td>' + '<p style="background-color:#FCF506;color:black;font-weight:bold;">' + dataList[ii].IqcCompleteBSmt + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr2").append(body22);

                }

                if (dataList[ii].TrialProductionBSmt == null) {
                    dataList[ii].TrialProductionBSmt = "";
                    var body3 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr3").append(body3);

                }
                else if (dataList[ii].TrialProductionBSmt != null) {

                    var body33 = '<td>' + '<p style="background-color:#DCDDD5;color:black;font-weight:bold;">' + dataList[ii].TrialProductionBSmt + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr3").append(body33);

                }
                var body4 = '<td>--</td>';
                $("#proBatteryPlanTable12 tr.ttr4").append(body4);

                if (dataList[ii].SmtLineOne == null) {
                    dataList[ii].SmtLineOne = "";
                    var body5 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr5").append(body5);

                }
                else if (dataList[ii].SmtLineOne != null) {

                    var body55 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].SmtLineOne + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr5").append(body55);

                }

                if (dataList[ii].SmtLineTwo == null) {
                    dataList[ii].SmtLineTwo = "";
                    var body6 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr6").append(body6);

                }
                else if (dataList[ii].SmtLineTwo != null) {

                    var body66 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].SmtLineTwo + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr6").append(body66);

                }

                //Housing
                if (dataList[ii].MetarialReceiveBHousing == null) {
                    dataList[ii].MetarialReceiveBHousing = "";
                    var body7 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr7").append(body7);

                }
                else if (dataList[ii].MetarialReceiveBHousing != null) {

                    var body77 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].MetarialReceiveBHousing + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr7").append(body77);

                }

                if (dataList[ii].IqcCompleteBHousing == null) {
                    dataList[ii].IqcCompleteBHousing = "";
                    var body8 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr8").append(body8);

                }
                else if (dataList[ii].IqcCompleteBHousing != null) {

                    var body88 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].IqcCompleteBHousing + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr8").append(body88);

                }
                if (dataList[ii].TrialProductionBHousing == null) {
                    dataList[ii].TrialProductionBHousing = "";
                    var body9 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr9").append(body9);

                }
                else if (dataList[ii].TrialProductionBHousing != null) {

                    var body99 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].TrialProductionBHousing + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr9").append(body99);

                }

                if (dataList[ii].HousingBReliability == null) {
                    dataList[ii].HousingBReliability = "";
                    var body10 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr10").append(body10);

                }
                else if (dataList[ii].HousingBReliability != null) {

                    var body101 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].HousingBReliability + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr10").append(body101);

                }
                var body102 = '<td>--</td>';
                $("#proBatteryPlanTable12 tr.ttr11").append(body102);

                if (dataList[ii].HousingLineOne == null) {
                    dataList[ii].HousingLineOne = "";
                    var body12 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr12").append(body12);

                }
                else if (dataList[ii].HousingLineOne != null) {

                    var body1211 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].HousingLineOne + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr12").append(body1211);

                }
                if (dataList[ii].HousingLineTwo == null) {
                    dataList[ii].HousingLineTwo = "";
                    var body122 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr121").append(body122);

                }
                else if (dataList[ii].HousingLineTwo != null) {

                    var body13 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].HousingLineTwo + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr13").append(body13);

                }

                if (dataList[ii].HousingLineThree == null) {
                    dataList[ii].HousingLineThree = "";
                    var body103 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr13").append(body103);

                }
                else if (dataList[ii].HousingLineThree != null) {

                    var body131 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].HousingLineThree + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr13").append(body131);

                }

                if (dataList[ii].HousingLineFour == null) {
                    dataList[ii].HousingLineFour = "";
                    var body14 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr14").append(body14);

                }
                else if (dataList[ii].HousingLineFour != null) {

                    var body141 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].HousingLineFour + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr14").append(body141);

                }

                if (dataList[ii].HousingLineFive == null) {
                    dataList[ii].HousingLineFive = "";
                    var body15 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr15").append(body15);

                }
                else if (dataList[ii].HousingLineFive != null) {

                    var body151 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].HousingLineFive + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr15").append(body151);

                }

                if (dataList[ii].HousingLineSix == null) {
                    dataList[ii].HousingLineSix = "";
                    var body16 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr16").append(body16);

                }
                else if (dataList[ii].HousingLineSix != null) {

                    var body161 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].HousingLineSix + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr16").append(body161);

                }


                if (dataList[ii].BatteryMetarialReceive == null) {
                    dataList[ii].BatteryMetarialReceive = "";
                    var body17 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr17").append(body17);

                }
                else if (dataList[ii].BatteryMetarialReceive != null) {

                    var body171 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].BatteryMetarialReceive + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr17").append(body171);

                }

                if (dataList[ii].BatteryIqcComplete == null) {
                    dataList[ii].BatteryIqcComplete = "";
                    var body18 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr18").append(body18);

                }
                else if (dataList[ii].BatteryIqcComplete != null) {

                    var body181 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].BatteryIqcComplete + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr18").append(body181);

                }
                if (dataList[ii].BatteryTrialProduction == null) {
                    dataList[ii].BatteryTrialProduction = "";
                    var body19 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr19").append(body19);

                }
                else if (dataList[ii].BatteryTrialProduction != null) {

                    var body191 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].BatteryTrialProduction + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr19").append(body191);

                }

                if (dataList[ii].BatteryReliability == null) {
                    dataList[ii].BatteryReliability = "";
                    var body20 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr20").append(body20);

                }
                else if (dataList[ii].BatteryReliability != null) {

                    var body120 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].BatteryReliability + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr20").append(body120);

                }

                var body21 = '<td>--</td>';
                $("#proBatteryPlanTable12 tr.ttr21").append(body21);

                if (dataList[ii].BatteryLineOne == null) {
                    dataList[ii].BatteryLineOne = "";
                    var body221 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr22").append(body221);

                }
                else if (dataList[ii].BatteryLineOne != null) {

                    var body121 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].BatteryLineOne + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr22").append(body121);

                }
                if (dataList[ii].BatteryLineTwo == null) {
                    dataList[ii].BatteryLineTwo = "";
                    var body222 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr23").append(body222);

                }
                else if (dataList[ii].BatteryLineTwo != null) {

                    var body1222 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].BatteryLineTwo + '</p>' + '</td>';

                    $("#proBatteryPlanTable12 tr.ttr23").append(body1222);

                }

                if (dataList[ii].BatteryAging == null) {
                    dataList[ii].BatteryAging = "";
                    var body24 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr24").append(body24);

                }
                else if (dataList[ii].BatteryAging != null) {

                    var body242 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].BatteryAging + '</p>' + '</td>';
                    $("#proBatteryPlanTable12 tr.ttr24").append(body242);

                }

                if (dataList[ii].MetarialReceiveAssembly == null) {
                    dataList[ii].MetarialReceiveAssembly = "";
                    var body25 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr25").append(body25);

                }
                else if (dataList[ii].MetarialReceiveAssembly != null) {

                    var body252 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].MetarialReceiveAssembly + '</p>' + '</td>';
                    $("#proBatteryPlanTable12 tr.ttr25").append(body252);

                }

                if (dataList[ii].IqcCompleteAssembly == null) {
                    dataList[ii].IqcCompleteAssembly = "";
                    var body26 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr26").append(body26);

                }
                else if (dataList[ii].IqcCompleteAssembly != null) {

                    var body262 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].IqcCompleteAssembly + '</p>' + '</td>';
                    $("#proBatteryPlanTable12 tr.ttr26").append(body262);

                }
                if (dataList[ii].TrialProductionAssembly == null) {
                    dataList[ii].TrialProductionAssembly = "";
                    var body27 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr27").append(body27);

                }
                else if (dataList[ii].TrialProductionAssembly != null) {

                    var body272 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].TrialProductionAssembly + '</p>' + '</td>';
                    $("#proBatteryPlanTable12 tr.ttr27").append(body272);

                }

                if (dataList[ii].SoftwareConfirmationAssembly == null) {
                    dataList[ii].SoftwareConfirmationAssembly = "";
                    var body28 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr28").append(body28);

                }
                else if (dataList[ii].SoftwareConfirmationAssembly != null) {

                    var body282 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].SoftwareConfirmationAssembly + '</p>' + '</td>';
                    $("#proBatteryPlanTable12 tr.ttr28").append(body282);

                }

                if (dataList[ii].RnDConfirmAssembly == null) {
                    dataList[ii].RnDConfirmAssembly = "";
                    var body29 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr29").append(body29);

                }
                else if (dataList[ii].RnDConfirmAssembly != null) {

                    var body292 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].RnDConfirmAssembly + '</p>' + '</td>';
                    $("#proBatteryPlanTable12 tr.ttr29").append(body292);

                }

                var body30 = '<td>--</td>';
                $("#proBatteryPlanTable12 tr.ttr30").append(body30);
                //
                if (dataList[ii].AssemblyLineOne == null) {
                    dataList[ii].AssemblyLineOne = "";
                    var body31 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr31").append(body31);
                }
                else if (dataList[ii].AssemblyLineOne != null) {

                    var body313 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].AssemblyLineOne + '</p>' + '</td>';
                    $("#proBatteryPlanTable12 tr.ttr31").append(body313);

                }

                if (dataList[ii].AssemblyLineTwo == null) {
                    dataList[ii].AssemblyLineTwo = "";
                    var body32 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr32").append(body32);
                }
                else if (dataList[ii].AssemblyLineTwo != null) {

                    var body322 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].AssemblyLineTwo + '</p>' + '</td>';
                    $("#proBatteryPlanTable12 tr.ttr32").append(body322);

                }

                if (dataList[ii].AssemblyLineThree == null) {
                    dataList[ii].AssemblyLineThree = "";
                    var body331 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr33").append(body331);
                }
                else if (dataList[ii].AssemblyLineThree != null) {

                    var body332 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].AssemblyLineThree + '</p>' + '</td>';
                    $("#proBatteryPlanTable12 tr.ttr33").append(body332);

                }

                if (dataList[ii].AssemblyLineFour == null) {
                    dataList[ii].AssemblyLineFour = "";
                    var body34 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr34").append(body34);
                }
                else if (dataList[ii].AssemblyLineFour != null) {

                    var body341 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].AssemblyLineFour + '</p>' + '</td>';
                    $("#proBatteryPlanTable12 tr.ttr34").append(body341);

                }

                if (dataList[ii].AssemblyLineFive == null) {
                    dataList[ii].AssemblyLineFive = "";
                    var body35 = '<td>--</td>';
                    $("#proBatteryPlanTable1 tr.ttr35").append(body35);
                }
                else if (dataList[ii].AssemblyLineFive != null) {

                    var body351 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].AssemblyLineFive + '</p>' + '</td>';
                    $("#proBatteryPlanTable12 tr.ttr35").append(body351);

                }

                var body36 = '<td>--</td>';
                $("#proBatteryPlanTable12 tr.ttr36").append(body36);

                if (dataList[ii].PackingLine1 == null) {
                    dataList[ii].PackingLine1 = "";
                    var body37 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr37").append(body37);
                }
                else if (dataList[ii].PackingLine1 != null) {

                    var body371 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].PackingLine1 + '</p>' + '</td>';
                    $("#proBatteryPlanTable12 tr.ttr37").append(body371);

                }

                if (dataList[ii].PackingLine2 == null) {
                    dataList[ii].PackingLine2 = "";
                    var body38 = '<td>--</td>';
                    $("#proBatteryPlanTable12 tr.ttr38").append(body38);
                }
                else if (dataList[ii].PackingLine2 != null) {

                    var body381 = '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].PackingLine2 + '</p>' + '</td>';
                    $("#proBatteryPlanTable12 tr.ttr38").append(body381);

                }
            }

            $('#proBatteryPlanTable12').DataTable({
                "scrollX": true,
                "scrollY": 550,
                "paging": false,
                "sorting": false,

            });
        }

    });*@

    @*$.ajax({
        url: '@Url.Action("GetBatteryGrandChartData", "Production")',//'/ProjectManager/GetProject',
        type: "GET",
        dataType: "JSON",
        data: { dateArr2: dateArr2 },
        success: function (data) {

            console.log(data);
            var ll = data.length;
            console.log(ll);
            var dataList = [];

            for (var x in data) {
                dataList = data[x];
            }

            var l = dataList.length;

            for (var ii = 0; ii < l; ii++) {
                // var productionDate = moment(dataList[ii].ProductionDate).format('DD-MMM-YYYY');
                var productionDate = moment(dataList[ii].ProductionDate).format('YYYY-MM-DD');

                if (dataList[ii].MetarialReceiveBSmt == null) {
                    dataList[ii].MetarialReceiveBSmt = "";
                }
                if (dataList[ii].IqcCompleteBSmt == null) {
                    dataList[ii].IqcCompleteBSmt = "";
                }
                if (dataList[ii].TrialProductionBSmt == null) {
                    dataList[ii].TrialProductionBSmt = "";
                }

                if (dataList[ii].BSmtMassProduction == null) {
                    dataList[ii].BSmtMassProduction = "";
                }

                if (dataList[ii].MetarialReceiveBHousing == null) {
                    dataList[ii].MetarialReceiveBHousing = "";
                }

                if (dataList[ii].IqcCompleteBHousing == null) {
                    dataList[ii].IqcCompleteBHousing = "";
                }

                if (dataList[ii].TrialProductionBHousing == null) {
                    dataList[ii].TrialProductionBHousing = "";
                }

                if (dataList[ii].HousingBReliability == null) {
                    dataList[ii].HousingBReliability = "";
                }

                if (dataList[ii].HousingBMassProduction == null) {
                    dataList[ii].HousingBMassProduction = "";
                }
                //////
                if (dataList[ii].BatteryMetarialReceive == null) {
                    dataList[ii].BatteryMetarialReceive = "";
                }
                if (dataList[ii].BatteryIqcComplete == null) {
                    dataList[ii].BatteryIqcComplete = "";
                }
                if (dataList[ii].BatteryTrialProduction == null) {
                    dataList[ii].BatteryTrialProduction = "";
                }

                if (dataList[ii].BatteryReliability == null) {
                    dataList[ii].BatteryReliability = "";
                }
                if (dataList[ii].BatteryMassProduction == null) {
                    dataList[ii].BatteryMassProduction = "";
                }
                if (dataList[ii].BatteryAging == null) {
                    dataList[ii].BatteryAging = "";
                }
                /////
                if (dataList[ii].MetarialReceiveAssembly == null) {
                    dataList[ii].MetarialReceiveAssembly = "";
                }

                if (dataList[ii].IqcCompleteAssembly == null) {
                    dataList[ii].IqcCompleteAssembly = "";
                }

                if (dataList[ii].TrialProductionAssembly == null) {
                    dataList[ii].TrialProductionAssembly = "";
                }

                if (dataList[ii].SoftwareConfirmationAssembly == null) {
                    dataList[ii].SoftwareConfirmationAssembly = "";
                }

                if (dataList[ii].RnDConfirmAssembly == null) {
                    dataList[ii].RnDConfirmAssembly = "";
                }

                if (dataList[ii].AssemblyMassProduction == null) {
                    dataList[ii].AssemblyMassProduction = "";
                }
                if (dataList[ii].AssemblyLineOne == null) {
                    dataList[ii].AssemblyLineOne = "";
                }
                if (dataList[ii].AssemblyLineTwo == null) {
                    dataList[ii].AssemblyLineTwo = "";
                }
                if (dataList[ii].AssemblyLineThree == null) {
                    dataList[ii].AssemblyLineThree = "";
                }
                if (dataList[ii].AssemblyLineFour == null) {
                    dataList[ii].AssemblyLineFour = "";
                }
                if (dataList[ii].AssemblyLineFive == null) {
                    dataList[ii].AssemblyLineFive = "";
                }
                if (dataList[ii].PackingLine1 == null) {
                    dataList[ii].PackingLine1 = "";
                }
                if (dataList[ii].PackingLine2 == null) {
                    dataList[ii].PackingLine2 = "";
                }
                if (dataList[ii].ProductionRemarks == null) {
                    dataList[ii].ProductionRemarks = "";
                }
                var body = '<tr>';
                body += '<td class="proDates"><span>' + productionDate + '</span></td>';

                body += '<td>' + '<p style="background-color:#F9B071;color:black;font-weight:bold;">' + dataList[ii].MetarialReceiveBSmt + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#FCF506;color:black;font-weight:bold;">' + dataList[ii].IqcCompleteBSmt + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#DCDDD5;color:black;font-weight:bold;">' + dataList[ii].TrialProductionBSmt + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].BSmtMassProduction + '</p>' + '</td>';
                ////
                body += '<td>' + '<p style="background-color:#F9B071;color:black;font-weight:bold;">' + dataList[ii].MetarialReceiveBHousing + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#FCF506;color:black;font-weight:bold;">' + dataList[ii].IqcCompleteBHousing + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#DCDDD5;color:black;font-weight:bold;">' + dataList[ii].TrialProductionBHousing + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#CDECB3;color:black;font-weight:bold;">' + dataList[ii].HousingBReliability + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].HousingBMassProduction + '</p>' + '</td>';
                ////
                body += '<td>' + '<p style="background-color:#F9B071;color:black;font-weight:bold;">' + dataList[ii].BatteryMetarialReceive + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#FCF506;color:black;font-weight:bold;">' + dataList[ii].BatteryIqcComplete + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#DCDDD5;color:black;font-weight:bold;">' + dataList[ii].BatteryTrialProduction + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#CDECB3;color:black;font-weight:bold;">' + dataList[ii].BatteryReliability + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].BatteryMassProduction + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].BatteryAging + '</p>' + '</td>';
                ////
                body += '<td>' + '<p style="background-color:#F9B071;color:black;font-weight:bold;">' + dataList[ii].MetarialReceiveAssembly + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#FCF506;color:black;font-weight:bold;">' + dataList[ii].IqcCompleteAssembly + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#DCDDD5;color:black;font-weight:bold;">' + dataList[ii].TrialProductionAssembly + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#C2E3EB;color:black;font-weight:bold;">' + dataList[ii].SoftwareConfirmationAssembly + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#CDECB3;color:black;font-weight:bold;">' + dataList[ii].RnDConfirmAssembly + '</p>' + '</td>';
                //body += '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].AssemblyMassProduction + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].AssemblyLineOne + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].AssemblyLineTwo + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].AssemblyLineThree + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].AssemblyLineFour + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].AssemblyLineFive + '</p>' + '</td>';

                body += '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].PackingLine1 + '</p>' + '</td>';
                body += '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].PackingLine2 + '</p>' + '</td>';

                //body += '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].PackingMassProduction + '</p>' + '</td>';
                body += '<td class="proRemarks" style="color:#FF6600;"><span>' + dataList[ii].ProductionRemarks + '</span><input type="text" class="form-control remarks form-control" id="remarks" value="' + dataList[ii].ProductionRemarks + '" style="display:none;" /></td>';
                body += '<td> <input type="button" class="btn btn-danger btn-sm mt-ladda-btn ladda-button btn-circle saveBtnForPro" id="saveBtnForPro" value="SAVE" /><br/><br/><input type="button" class="btn btn-success btn-sm mt-ladda-btn ladda-button btn-circle editBtnForPro" id="editBtnForPro" value="EDIT" /></td>';
                body += '</tr>';

                $("#proBatteryPlanTable tbody").append(body);

            }
            //  $("#proBatteryPlanTable").DataTable();


            $('#proBatteryPlanTable').DataTable({
                "scrollX": true,
                "scrollY": 550,
                "paging": false,

            });
        }

    });*@



    ////////////////edit & save for production plan //////
    $("body").on("click", "#proBatteryPlanTable .editBtnForPro", function () {
        var row = $(this).closest("tr");
        $("td", row).each(function () {
            if ($(this).find("input").length > 0) {
                $(this).find("input").show();
                $(this).find("span").hide();

                var span = $(this).find("span");
                var input = $(this).find("input");
                span.html(input.val());
            }
        });

    });
    $("body").on("click", "#proBatteryPlanTable .saveBtnForPro", function () {
        var row = $(this).closest("tr");
        $("td", row).each(function () {
            if ($(this).find("input").length > 0) {
                var span = $(this).find("span");
                var input = $(this).find("input");
                span.html(input.val());
                span.show();
                input.hide();
            }
        });
        row.find(".saveBtnForPro").show();
        row.find(".editBtnForPro").show();

        var productionRemarksData = {};
        productionRemarksData.ProductionRemarksDate = row.find(".proDates").find("span").html();
        productionRemarksData.Remarks = row.find(".proRemarks").find("span").html();
        productionRemarksData.IsCkd = true;
        productionRemarksData.IsCharger = false;
        $.ajax({
            type: "POST",
            url: '@Url.Action("InsertProductionRemark", "Production")',
            data: '{productionRemarksData:' + JSON.stringify(productionRemarksData) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json"
        });
    });
    ////////////////end edit & save for production plan //////
    function isFloat(n) {
        return Number(n) === n && n % 1 !== 0;
    }

    function isHoliday(materialReceiveDate) {
        var holidayDate = null;
        var arrLists = [];
        var l = arrList.length;
        for (var ii = 0; ii < l; ii++) {
            holidayDate = moment(arrList[ii].HolidayDate).format('YYYY-MM-DD');
            arrLists.push(holidayDate);
        }

        if (l > 0) {
            var selectedDate = arrLists.find(function (element) {
                return element === materialReceiveDate;
            });
            while (typeof selectedDate !== "undefined") {
                materialReceiveDate = moment(materialReceiveDate).add(1, 'days').format("YYYY-MM-DD");
                selectedDate = arrLists.find(function (element) {
                    return element === materialReceiveDate;
                });
                if (typeof selectedDate !== "undefined") {
                    materialReceiveDate = selectedDate;
                }
                continue;
            }
        }
        return materialReceiveDate;

    }

    function isHolidayCheck(materialReceiveDate) {
        var holidayDate = null;
        var arrLists = arrList;
        var l = arrLists.length;
        var res = false;
        for (var ii = 0; ii < l; ii++) {
            holidayDate = moment(arrLists[ii].HolidayDate).format('YYYY-MM-DD');

            if (materialReceiveDate == holidayDate) {
                res = true;
                break;
            } else
                continue;
        }
        return res;

    }
    function getHolidayCount(startDate, endDate) {
        var holidayDate = null;
        var formattedHolidayList = [];
        var l = arrList.length;
        var cnt = 0;
        for (var ii = 0; ii < l; ii++) {
            holidayDate = moment(arrList[ii].HolidayDate).format('YYYY-MM-DD');
            formattedHolidayList.push(holidayDate);
        }
        for (var day = startDate; day <= endDate; day = (moment(day).add(1, 'days').format('YYYY-MM-DD'))) {
            for (var indx = 0; indx < formattedHolidayList.length; indx++) {
                if (day === formattedHolidayList[indx]) {
                    cnt++;
                }
            }
        }
        return cnt;
    }

    function refresh() {
        $.blockUI({ message: '<h1><img src="~/img/loading-spinner-grey.gif" /> LOADING..</h1>' });
        setTimeout(function () {
            window.location.reload();

        }, 1000);
    }
    function isHolidayPreviousDate(materialReceiveDate) {
        var holidayDate = null;
        var arrLists = [];
        var l = arrList.length;
        for (var ii = 0; ii < l; ii++) {
            holidayDate = moment(arrList[ii].HolidayDate).format('YYYY-MM-DD');
            arrLists.push(holidayDate);
        }

        if (l > 0) {
            var selectedDate = arrLists.find(function (element) {
                return element === materialReceiveDate;
            });
            while (typeof selectedDate !== "undefined") {
                materialReceiveDate = moment(materialReceiveDate).add(-1, 'days').format("YYYY-MM-DD");
                selectedDate = arrLists.find(function (element) {
                    return element === materialReceiveDate;
                });
                if (typeof selectedDate !== "undefined") {
                    materialReceiveDate = selectedDate;
                }
                continue;
            }
        }
        return materialReceiveDate;

    }

    function show1() {
        var x = document.getElementById("snackbar");
        x.className = "show";
    }

    function hide1() {
        var x = document.getElementById("snackbar");
        x.className = "hide";
    }

    ///////trials///
    function smtTrialLineFunc() {

    }
    function housingTrialLineFunc() {

    }
    function batteryTrialLineFunc() {

    }
    function assemblyTrialLineFunc() {

    }
    //////////////onChange for all_date///////////

    /////materialReceiveStartDateSmtChange///
    function materialReceiveStartDateSmtChange() {
        var materialReceiveStartDateBSmt = $('#materialReceiveStartDateBSmt').val();

        if (materialReceiveStartDateBSmt != "") {
            var iqcStart1 = isHolidayCheck(materialReceiveStartDateBSmt);
            var materialReceiveEndDateBSmt;
            if (iqcStart1 == true) {
                alertify.confirm("WOW!!! It's Holiday.", "Do you want to proceed it?",
                    function () {
                        alertify.success('Ok');

                        materialReceiveEndDateBSmt = $.trim($('#materialReceiveEndDateBSmt').val(moment(materialReceiveStartDateBSmt).add(1, 'days').format("YYYY-MM-DD")));
                        materialReceiveEndDateBSmt = $.trim($('#materialReceiveEndDateBSmt').val());

                        ////////////////
                        var iqcStart2 = isHoliday(materialReceiveEndDateBSmt);
                        materialReceiveEndDateBSmt = $.trim($('#materialReceiveEndDateBSmt').val(iqcStart2));
                        materialReceiveEndDateBSmt = $.trim($('#materialReceiveEndDateBSmt').val());

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetMaterialReceiveDateBSmt", "Production")',
                            data: "{ materialReceiveStartDateBSmt: '" + materialReceiveStartDateBSmt
                                + "', materialReceiveEndDateBSmt: '" + materialReceiveEndDateBSmt
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {

                                    $("#smtMaterialStartPara").show();
                                    $('#materialReceiveStartDateBSmt').attr("disabled", false);

                                } else {
                                    $('#materialReceiveStartDateBSmt').attr("disabled", false);
                                    $("#smtMaterialStartPara").hide();
                                }
                            }
                        });

                    }, function () {
                        alertify.error('Cancelled');

                        $('#materialReceiveStartDateBSmt').val("");
                        $('#materialReceiveEndDateBSmt').val("");
                    });
            }


            materialReceiveEndDateBSmt = $.trim($('#materialReceiveEndDateBSmt').val(moment(materialReceiveStartDateBSmt).add(1, 'days').format("YYYY-MM-DD")));
            materialReceiveEndDateBSmt = $.trim($('#materialReceiveEndDateBSmt').val());

            /////////Add extra days for holiday///////////
            var dCount2 = getHolidayCount(materialReceiveStartDateBSmt, materialReceiveEndDateBSmt);

            materialReceiveEndDateBSmt = $.trim($('#materialReceiveEndDateBSmt').val(moment(materialReceiveEndDateBSmt).add(dCount2, 'days').format("YYYY-MM-DD")));
            materialReceiveEndDateBSmt = $.trim($('#materialReceiveEndDateBSmt').val());
            ///////////////////

            var iqcIsHol2 = isHoliday(materialReceiveEndDateBSmt);
            materialReceiveEndDateBSmt = $.trim($('#materialReceiveEndDateBSmt').val(iqcIsHol2));
            materialReceiveEndDateBSmt = $.trim($('#materialReceiveEndDateBSmt').val());

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetMaterialReceiveDateBSmt", "Production")',
                data: "{ materialReceiveStartDateBSmt: '" + materialReceiveStartDateBSmt
                    + "', materialReceiveEndDateBSmt: '" + materialReceiveEndDateBSmt
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);

                    if (dataList == "YES") {

                        $("#smtMaterialStartPara").show();
                        $('#materialReceiveStartDateBSmt').attr("disabled", false);

                    } else {
                        $('#materialReceiveStartDateBSmt').attr("disabled", false);
                        $("#smtMaterialStartPara").hide();
                    }
                }
            });
        }
    }
    //////iqcCompleteStartDateSmtChange/////

    function iqcCompleteStartDateSmtChange() {
        var iqcCompleteStartDateBSmt = $('#iqcCompleteStartDateBSmt').val();

        if (iqcCompleteStartDateBSmt != "") {
            var iqcStart1 = isHolidayCheck(iqcCompleteStartDateBSmt);
            var iqcCompleteEndDateBSmt;
            if (iqcStart1 == true) {
                alertify.confirm("WOW!!! It's Holiday.", "Do you want to proceed it?",
                    function () {
                        alertify.success('Ok');

                        iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val(moment(iqcCompleteStartDateBSmt).add(1, 'days').format("YYYY-MM-DD")));
                        iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val());

                        ////////////////
                        var iqcStart2 = isHoliday(iqcCompleteEndDateBSmt);
                        iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val(iqcStart2));
                        iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val());

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetIqcCompleteDateBSmt", "Production")',
                            data: "{ iqcCompleteStartDateBSmt: '" + iqcCompleteStartDateBSmt
                                + "', iqcCompleteEndDateBSmt: '" + iqcCompleteEndDateBSmt
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {

                                    $("#smtIqcStartPara").show();
                                    $('#iqcCompleteStartDateBSmt').attr("disabled", false);

                                } else {
                                    $('#iqcCompleteStartDateBSmt').attr("disabled", false);
                                    $("#smtIqcStartPara").hide();
                                }
                            }
                        });

                    }, function () {
                        alertify.error('Cancelled');

                        $('#iqcCompleteStartDateBSmt').val("");
                        $('#iqcCompleteEndDateBSmt').val("");
                    });
            }


            iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val(moment(iqcCompleteStartDateBSmt).add(1, 'days').format("YYYY-MM-DD")));
            iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val());

            /////////Add extra days for holiday///////////
            var dCount2 = getHolidayCount(iqcCompleteStartDateBSmt, iqcCompleteEndDateBSmt);

            iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val(moment(iqcCompleteEndDateBSmt).add(dCount2, 'days').format("YYYY-MM-DD")));
            iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val());
            ///////////////////

            var iqcIsHol2 = isHoliday(iqcCompleteEndDateBSmt);
            iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val(iqcIsHol2));
            iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val());

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetIqcCompleteDateBSmt", "Production")',
                data: "{ iqcCompleteStartDateBSmt: '" + iqcCompleteStartDateBSmt
                    + "', iqcCompleteEndDateBSmt: '" + iqcCompleteEndDateBSmt
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);

                    if (dataList == "YES") {

                        $("#smtIqcStartPara").show();
                        $('#iqcCompleteStartDateBSmt').attr("disabled", false);

                    } else {
                        $('#iqcCompleteStartDateBSmt').attr("disabled", false);
                        $("#smtIqcStartPara").hide();
                    }
                }
            });
        }
    }
    //////trialProductionStartDateSmtChange///
    function trialProductionStartDateSmtChange() {
        var trialProductionStartDateBSmt = $('#trialProductionStartDateBSmt').val();

        if (trialProductionStartDateBSmt != "") {
            var iqcStart1 = isHolidayCheck(trialProductionStartDateBSmt);
            var trialProductionEndDateBSmt;
            if (iqcStart1 == true) {
                alertify.confirm("WOW!!! It's Holiday.", "Do you want to proceed it?",
                    function () {
                        alertify.success('Ok');

                        trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val(moment(trialProductionStartDateBSmt).add(1, 'days').format("YYYY-MM-DD")));
                        trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val());

                        ////////////////
                        var iqcStart2 = isHoliday(trialProductionEndDateBSmt);
                        trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val(iqcStart2));
                        trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val());

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetTrialProductionDateBSmt", "Production")',
                            data: "{ trialProductionStartDateBSmt: '" + trialProductionStartDateBSmt
                                + "', trialProductionEndDateBSmt: '" + trialProductionEndDateBSmt
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {

                                    $("#smtTrialStartPara").show();
                                    $('#trialProductionStartDateBSmt').attr("disabled", false);

                                } else {
                                    $('#trialProductionStartDateBSmt').attr("disabled", false);
                                    $("#smtTrialStartPara").hide();
                                }
                            }
                        });

                    }, function () {
                        alertify.error('Cancelled');

                        $('#trialProductionStartDateBSmt').val("");
                        $('#trialProductionEndDateBSmt').val("");
                    });
            }


            trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val(moment(trialProductionStartDateBSmt).add(1, 'days').format("YYYY-MM-DD")));
            trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val());

            /////////Add extra days for holiday///////////
            var dCount2 = getHolidayCount(trialProductionStartDateBSmt, trialProductionEndDateBSmt);

            trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val(moment(trialProductionEndDateBSmt).add(dCount2, 'days').format("YYYY-MM-DD")));
            trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val());
            ///////////////////

            var iqcIsHol2 = isHoliday(trialProductionEndDateBSmt);
            trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val(iqcIsHol2));
            trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val());


            $.ajax({
                type: "POST",
                url: '@Url.Action("GetTrialProductionDateBSmt", "Production")',
                data: "{ trialProductionStartDateBSmt: '" + trialProductionStartDateBSmt
                    + "', trialProductionEndDateBSmt: '" + trialProductionEndDateBSmt
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);

                    if (dataList == "YES") {

                        $("#smtTrialStartPara").show();
                        $('#trialProductionStartDateBSmt').attr("disabled", false);

                    } else {
                        $('#trialProductionStartDateBSmt').attr("disabled", false);
                        $("#smtTrialStartPara").hide();
                    }
                }
            });
        }
    }
    ///materialReceiveStartDateHousingChange//
    function materialReceiveStartDateHousingChange() {
        var materialReceiveStartDateHousing = $('#materialReceiveStartDateHousing').val();

        if (materialReceiveStartDateHousing != "") {
            var iqcStart1 = isHolidayCheck(materialReceiveStartDateHousing);
            var materialReceiveEndDateHousing;
            if (iqcStart1 == true) {
                alertify.confirm("WOW!!! It's Holiday.", "Do you want to proceed it?",
                    function () {
                        alertify.success('Ok');

                        materialReceiveEndDateHousing = $.trim($('#materialReceiveEndDateHousing').val(materialReceiveStartDateHousing));
                        materialReceiveEndDateHousing = $.trim($('#materialReceiveEndDateHousing').val());

                        ////////////////
                        //var iqcStart2 = isHoliday(materialReceiveEndDateHousing);
                        //materialReceiveEndDateHousing = $.trim($('#materialReceiveEndDateHousing').val(iqcStart2));
                        //materialReceiveEndDateHousing = $.trim($('#materialReceiveEndDateHousing').val());

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetMaterialReceiveDateBHousing", "Production")',
                            data: "{ materialReceiveStartDateHousing: '" + materialReceiveStartDateHousing
                                + "', materialReceiveEndDateHousing: '" + materialReceiveEndDateHousing
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {

                                    $("#housingMaterialStartPara").show();
                                    $('#materialReceiveStartDateHousing').attr("disabled", false);

                                } else {
                                    $('#materialReceiveStartDateHousing').attr("disabled", false);
                                    $("#housingMaterialStartPara").hide();
                                }
                            }
                        });

                    }, function () {
                        alertify.error('Cancelled');

                        $('#materialReceiveStartDateHousing').val("");
                        $('#materialReceiveEndDateHousing').val("");
                    });
            }


            materialReceiveEndDateHousing = $.trim($('#materialReceiveEndDateHousing').val(materialReceiveStartDateHousing));
            materialReceiveEndDateHousing = $.trim($('#materialReceiveEndDateHousing').val());

            /////////Add extra days for holiday///////////
            //var dCount2 = getHolidayCount(materialReceiveStartDateHousing, materialReceiveEndDateHousing);

            //materialReceiveEndDateHousing = $.trim($('#materialReceiveEndDateHousing').val(moment(materialReceiveEndDateHousing).add(dCount2, 'days').format("YYYY-MM-DD")));
            //materialReceiveEndDateHousing = $.trim($('#materialReceiveEndDateHousing').val());
            ///////////////////
            var iqcIsHol2 = isHoliday(materialReceiveEndDateHousing);
            materialReceiveEndDateHousing = $.trim($('#materialReceiveEndDateHousing').val(iqcIsHol2));
            materialReceiveEndDateHousing = $.trim($('#materialReceiveEndDateHousing').val());

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetMaterialReceiveDateBHousing", "Production")',
                data: "{ materialReceiveStartDateHousing: '" + materialReceiveStartDateHousing
                    + "', materialReceiveEndDateHousing: '" + materialReceiveEndDateHousing
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);

                    if (dataList == "YES") {

                        $("#housingMaterialStartPara").show();
                        $('#materialReceiveStartDateHousing').attr("disabled", false);

                    } else {
                        $('#materialReceiveStartDateHousing').attr("disabled", false);
                        $("#housingMaterialStartPara").hide();
                    }
                }
            });
        }
    }
    ///iqcCompleteStartDateHousingChange///
    function iqcCompleteStartDateHousingChange() {
        var iqcCompleteStartDateHousing = $('#iqcCompleteStartDateHousing').val();

        if (iqcCompleteStartDateHousing != "") {
            var iqcStart1 = isHolidayCheck(iqcCompleteStartDateHousing);
            var iqcCompleteEndDateHousing;
            if (iqcStart1 == true) {
                alertify.confirm("WOW!!! It's Holiday.", "Do you want to proceed it?",
                    function () {
                        alertify.success('Ok');

                        iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val(moment(iqcCompleteStartDateHousing).add(1, 'days').format("YYYY-MM-DD")));
                        iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val());

                        ////////////////
                        var iqcStart2 = isHoliday(iqcCompleteEndDateHousing);
                        iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val(iqcStart2));
                        iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val());

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetIqcCompleteDateBHousing", "Production")',
                            data: "{ iqcCompleteStartDateHousing: '" + iqcCompleteStartDateHousing
                                + "', iqcCompleteEndDateHousing: '" + iqcCompleteEndDateHousing
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {

                                    $("#housingIqcStartPara").show();
                                    $('#iqcCompleteStartDateHousing').attr("disabled", false);

                                } else {
                                    $('#iqcCompleteStartDateHousing').attr("disabled", false);
                                    $("#housingIqcStartPara").hide();
                                }
                            }
                        });

                    }, function () {
                        alertify.error('Cancelled');

                        $('#iqcCompleteStartDateHousing').val("");
                        $('#iqcCompleteEndDateHousing').val("");
                    });
            }


            iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val(moment(iqcCompleteStartDateHousing).add(1, 'days').format("YYYY-MM-DD")));
            iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val());

            /////////Add extra days for holiday///////////
            var dCount2 = getHolidayCount(iqcCompleteStartDateHousing, iqcCompleteEndDateHousing);

            iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val(moment(iqcCompleteEndDateHousing).add(dCount2, 'days').format("YYYY-MM-DD")));
            iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val());
            ///////////////////

            var iqcIsHol2 = isHoliday(iqcCompleteEndDateHousing);
            iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val(iqcIsHol2));
            iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val());

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetIqcCompleteDateBHousing", "Production")',
                data: "{ iqcCompleteStartDateHousing: '" + iqcCompleteStartDateHousing
                    + "', iqcCompleteEndDateHousing: '" + iqcCompleteEndDateHousing
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);

                    if (dataList == "YES") {

                        $("#housingIqcStartPara").show();
                        $('#iqcCompleteStartDateHousing').attr("disabled", false);

                    } else {
                        $('#iqcCompleteStartDateHousing').attr("disabled", false);
                        $("#housingIqcStartPara").hide();
                    }
                }
            });
        }
    }
    ///trialProductionStartDateHousingChange//
    function trialProductionStartDateHousingChange() {
        var trialProductionStartDateHousing = $('#trialProductionStartDateHousing').val();

        if (trialProductionStartDateHousing != "") {
            var iqcStart1 = isHolidayCheck(trialProductionStartDateHousing);
            var trialProductionEndDateHousing;
            if (iqcStart1 == true) {
                alertify.confirm("WOW!!! It's Holiday.", "Do you want to proceed it?",
                    function () {
                        alertify.success('Ok');

                        trialProductionEndDateHousing = $.trim($('#trialProductionEndDateHousing').val(trialProductionStartDateHousing));
                        trialProductionEndDateHousing = $.trim($('#trialProductionEndDateHousing').val());

                        ////////////////
                        //var iqcStart2 = isHoliday(trialProductionEndDateHousing);
                        //trialProductionEndDateHousing = $.trim($('#trialProductionEndDateHousing').val(iqcStart2));
                        //trialProductionEndDateHousing = $.trim($('#trialProductionEndDateHousing').val());

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetTrialBProduction", "Production")',
                            data: "{ trialProductionStartDateHousing: '" + trialProductionStartDateHousing
                                + "', trialProductionEndDateHousing: '" + trialProductionEndDateHousing
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {

                                    $("#housingTrialStartPara").show();
                                    $('#trialProductionStartDateHousing').attr("disabled", false);

                                } else {
                                    $('#trialProductionStartDateHousing').attr("disabled", false);
                                    $("#housingTrialStartPara").hide();
                                }
                            }
                        });

                    }, function () {
                        alertify.error('Cancelled');

                        $('#trialProductionStartDateHousing').val("");
                        $('#trialProductionEndDateHousing').val("");
                    });
            }


            trialProductionEndDateHousing = $.trim($('#trialProductionEndDateHousing').val(trialProductionStartDateHousing));
            trialProductionEndDateHousing = $.trim($('#trialProductionEndDateHousing').val());

            /////////Add extra days for holiday///////////
            //var dCount2 = getHolidayCount(trialProductionStartDateHousing, trialProductionEndDateHousing);

            //trialProductionEndDateHousing = $.trim($('#trialProductionEndDateHousing').val(moment(trialProductionEndDateHousing).add(dCount2, 'days').format("YYYY-MM-DD")));
            //trialProductionEndDateHousing = $.trim($('#trialProductionEndDateHousing').val());
            ///////////////////

            var iqcIsHol2 = isHoliday(trialProductionEndDateHousing);
            trialProductionEndDateHousing = $.trim($('#trialProductionEndDateHousing').val(iqcIsHol2));
            trialProductionEndDateHousing = $.trim($('#trialProductionEndDateHousing').val());

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetTrialBProduction", "Production")',
                data: "{ trialProductionStartDateHousing: '" + trialProductionStartDateHousing
                    + "', trialProductionEndDateHousing: '" + trialProductionEndDateHousing
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);

                    if (dataList == "YES") {

                        $("#housingTrialStartPara").show();
                        $('#trialProductionStartDateHousing').attr("disabled", false);

                    } else {
                        $('#trialProductionStartDateHousing').attr("disabled", false);
                        $("#housingTrialStartPara").hide();
                    }
                }
            });
        }
    }
    ////reliabilityStartDateHousingChange///
    function reliabilityStartDateHousingChange() {
        var housingReliabilityStartDateHousing = $('#housingReliabilityStartDateHousing').val();

        if (housingReliabilityStartDateHousing != "") {
            var iqcStart1 = isHolidayCheck(housingReliabilityStartDateHousing);
            var housingReliabilityEndtDateHousing;
            if (iqcStart1 == true) {
                alertify.confirm("WOW!!! It's Holiday.", "Do you want to proceed it?",
                    function () {
                        alertify.success('Ok');

                        housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val(moment(housingReliabilityStartDateHousing).add(1, 'days').format("YYYY-MM-DD")));
                        housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val());

                        ////////////////
                        var iqcStart2 = isHoliday(housingReliabilityEndtDateHousing);
                        housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val(iqcStart2));
                        housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val());


                    }, function () {
                        alertify.error('Cancelled');

                        $('#housingReliabilityStartDateHousing').val("");
                        $('#housingReliabilityEndtDateHousing').val("");
                    });
            }


            housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val(moment(housingReliabilityStartDateHousing).add(1, 'days').format("YYYY-MM-DD")));
            housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val());

            /////////Add extra days for holiday///////////
            var dCount2 = getHolidayCount(housingReliabilityStartDateHousing, housingReliabilityEndtDateHousing);

            housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val(moment(housingReliabilityEndtDateHousing).add(dCount2, 'days').format("YYYY-MM-DD")));
            housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val());
            ///////////////////

            var iqcIsHol2 = isHoliday(housingReliabilityEndtDateHousing);
            housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val(iqcIsHol2));
            housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val());

        }
    }
    ////materialReceiveStartDateBatteryChange/////
    function materialReceiveStartDateBatteryChange() {
        var materialReceiveStartDateBattery = $('#materialReceiveStartDateBattery').val();

        if (materialReceiveStartDateBattery != "") {
            var iqcStart1 = isHolidayCheck(materialReceiveStartDateBattery);
            var materialReceiveEndDateBattery;
            if (iqcStart1 == true) {
                alertify.confirm("WOW!!! It's Holiday.", "Do you want to proceed it?",
                    function () {
                        alertify.success('Ok');

                        materialReceiveEndDateBattery = $.trim($('#materialReceiveEndDateBattery').val(materialReceiveStartDateBattery));
                        materialReceiveEndDateBattery = $.trim($('#materialReceiveEndDateBattery').val());

                        ////////////////
                        //var iqcStart2 = isHoliday(materialReceiveEndDateBattery);
                        //materialReceiveEndDateBattery = $.trim($('#materialReceiveEndDateBattery').val(iqcStart2));
                        //materialReceiveEndDateBattery = $.trim($('#materialReceiveEndDateBattery').val());

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetMaterialReceiveDateBattery", "Production")',
                            data: "{ materialReceiveStartDateBattery: '" + materialReceiveStartDateBattery
                                + "', materialReceiveEndDateBattery: '" + materialReceiveEndDateBattery
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {

                                    $("#batteryMaterialStartPara").show();
                                    $('#materialReceiveStartDateBattery').attr("disabled", false);

                                } else {
                                    $('#materialReceiveStartDateBattery').attr("disabled", false);
                                    $("#batteryMaterialStartPara").hide();
                                }
                            }
                        });

                    }, function () {
                        alertify.error('Cancelled');

                        $('#materialReceiveStartDateBattery').val("");
                        $('#materialReceiveEndDateBattery').val("");
                    });
            }


            materialReceiveEndDateBattery = $.trim($('#materialReceiveEndDateBattery').val(materialReceiveStartDateBattery));
            materialReceiveEndDateBattery = $.trim($('#materialReceiveEndDateBattery').val());

            /////////Add extra days for holiday///////////
            //var dCount2 = getHolidayCount(materialReceiveStartDateBattery, materialReceiveEndDateBattery);

            //materialReceiveEndDateBattery = $.trim($('#materialReceiveEndDateBattery').val(moment(materialReceiveEndDateBattery).add(dCount2, 'days').format("YYYY-MM-DD")));
            //materialReceiveEndDateBattery = $.trim($('#materialReceiveEndDateBattery').val());
            ///////////////////
            var iqcIsHol2 = isHoliday(materialReceiveEndDateBattery);
            materialReceiveEndDateBattery = $.trim($('#materialReceiveEndDateBattery').val(iqcIsHol2));
            materialReceiveEndDateBattery = $.trim($('#materialReceiveEndDateBattery').val());

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetMaterialReceiveDateBattery", "Production")',
                data: "{ materialReceiveStartDateBattery: '" + materialReceiveStartDateBattery
                    + "', materialReceiveEndDateBattery: '" + materialReceiveEndDateBattery
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);

                    if (dataList == "YES") {

                        $("#batteryMaterialStartPara").show();
                        $('#materialReceiveStartDateBattery').attr("disabled", false);

                    } else {
                        $('#materialReceiveStartDateBattery').attr("disabled", false);
                        $("#batteryMaterialStartPara").hide();
                    }
                }
            });
        }
    }
    /////iqcCompleteStartDateBatteryChange/////
    function iqcCompleteStartDateBatteryChange() {
        var iqcCompleteStartDateBattery = $('#iqcCompleteStartDateBattery').val();

        if (iqcCompleteStartDateBattery != "") {
            var iqcStart1 = isHolidayCheck(iqcCompleteStartDateBattery);
            var iqcCompleteEndDateBattery;
            if (iqcStart1 == true) {
                alertify.confirm("WOW!!! It's Holiday.", "Do you want to proceed it?",
                    function () {
                        alertify.success('Ok');

                        iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val(moment(iqcCompleteStartDateBattery).add(1, 'days').format("YYYY-MM-DD")));
                        iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val());

                        ////////////////
                        var iqcStart2 = isHoliday(iqcCompleteEndDateBattery);
                        iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val(iqcStart2));
                        iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val());

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetIqcCompleteDateBattery", "Production")',
                            data: "{ iqcCompleteStartDateBattery: '" + iqcCompleteStartDateBattery
                                + "', iqcCompleteEndDateBattery: '" + iqcCompleteEndDateBattery
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {

                                    $("#batteryIqcStartPara").show();
                                    $('#iqcCompleteStartDateBattery').attr("disabled", false);

                                } else {
                                    $('#iqcCompleteStartDateBattery').attr("disabled", false);
                                    $("#batteryIqcStartPara").hide();
                                }
                            }
                        });

                    }, function () {
                        alertify.error('Cancelled');

                        $('#iqcCompleteStartDateBattery').val("");
                        $('#iqcCompleteEndDateBattery').val("");
                    });
            }


            iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val(moment(iqcCompleteStartDateBattery).add(1, 'days').format("YYYY-MM-DD")));
            iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val());

            /////////Add extra days for holiday///////////
            var dCount2 = getHolidayCount(iqcCompleteStartDateBattery, iqcCompleteEndDateBattery);

            iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val(moment(iqcCompleteEndDateBattery).add(dCount2, 'days').format("YYYY-MM-DD")));
            iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val());
            ///////////////////

            var iqcIsHol2 = isHoliday(iqcCompleteEndDateBattery);
            iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val(iqcIsHol2));
            iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val());

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetIqcCompleteDateBattery", "Production")',
                data: "{ iqcCompleteStartDateBattery: '" + iqcCompleteStartDateBattery
                    + "', iqcCompleteEndDateBattery: '" + iqcCompleteEndDateBattery
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);

                    if (dataList == "YES") {

                        $("#batteryIqcStartPara").show();
                        $('#iqcCompleteStartDateBattery').attr("disabled", false);

                    } else {
                        $('#iqcCompleteStartDateBattery').attr("disabled", false);
                        $("#batteryIqcStartPara").hide();
                    }
                }
            });
        }
    }
    ////trialProductionStartDateBatteryChange/////
    function trialProductionStartDateBatteryChange() {
        var trialProductionStartDateBattery = $('#trialProductionStartDateBattery').val();

        if (trialProductionStartDateBattery != "") {
            var iqcStart1 = isHolidayCheck(trialProductionStartDateBattery);
            var trialProductionEndDateBattery;
            if (iqcStart1 == true) {
                alertify.confirm("WOW!!! It's Holiday.", "Do you want to proceed it?",
                    function () {
                        alertify.success('Ok');

                        trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val(trialProductionStartDateBattery));
                        trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val());

                        ////////////////
                        //var iqcStart2 = isHoliday(trialProductionEndDateBattery);
                        //trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val(iqcStart2));
                        //trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val());

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetTrialProductionDateBattery", "Production")',
                            data: "{ trialProductionStartDateBattery: '" + trialProductionStartDateBattery
                                + "', trialProductionEndDateBattery: '" + trialProductionEndDateBattery
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {

                                    $("#batteryTrialStartPara").show();
                                    $('#trialProductionStartDateBattery').attr("disabled", false);

                                } else {
                                    $('#trialProductionStartDateBattery').attr("disabled", false);
                                    $("#batteryTrialStartPara").hide();
                                }
                            }
                        });

                    }, function () {
                        alertify.error('Cancelled');

                        $('#trialProductionStartDateBattery').val("");
                        $('#trialProductionEndDateBattery').val("");
                    });
            }


            trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val(trialProductionStartDateBattery));
            trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val());

            /////////Add extra days for holiday///////////
            //var dCount2 = getHolidayCount(trialProductionStartDateBattery, trialProductionEndDateBattery);

            //trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val(moment(trialProductionEndDateBattery).add(dCount2, 'days').format("YYYY-MM-DD")));
            //trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val());
            ///////////////////

            var iqcIsHol2 = isHoliday(trialProductionEndDateBattery);
            trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val(iqcIsHol2));
            trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val());

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetTrialProductionDateBattery", "Production")',
                data: "{ trialProductionStartDateBattery: '" + trialProductionStartDateBattery
                    + "', trialProductionEndDateBattery: '" + trialProductionEndDateBattery
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);

                    if (dataList == "YES") {

                        $("#batteryTrialStartPara").show();
                        $('#trialProductionStartDateBattery').attr("disabled", false);

                    } else {
                        $('#trialProductionStartDateBattery').attr("disabled", false);
                        $("#batteryTrialStartPara").hide();
                    }
                }
            });
        }
    }
    /////reliabilityTestStartDateBatteryChange////
    function reliabilityTestStartDateBatteryChange() {
        var batteryReliabilityTestStartDate = $('#batteryReliabilityTestStartDate').val();

        if (batteryReliabilityTestStartDate != "") {
            var iqcStart1 = isHolidayCheck(batteryReliabilityTestStartDate);
            var batteryReliabilityTestEndDate;
            if (iqcStart1 == true) {
                alertify.confirm("WOW!!! It's Holiday.", "Do you want to proceed it?",
                    function () {
                        alertify.success('Ok');

                        batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val(moment(batteryReliabilityTestStartDate).add(2, 'days').format("YYYY-MM-DD")));
                        batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val());

                        ////////////////
                        var iqcStart2 = isHoliday(batteryReliabilityTestEndDate);
                        batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val(iqcStart2));
                        batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val());

                    }, function () {
                        alertify.error('Cancelled');

                        $('#batteryReliabilityTestStartDate').val("");
                        $('#batteryReliabilityTestEndDate').val("");
                    });
            }


            batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val(moment(batteryReliabilityTestStartDate).add(2, 'days').format("YYYY-MM-DD")));
            batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val());

            /////////Add extra days for holiday///////////
            var dCount2 = getHolidayCount(batteryReliabilityTestStartDate, batteryReliabilityTestEndDate);

            batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val(moment(batteryReliabilityTestEndDate).add(dCount2, 'days').format("YYYY-MM-DD")));
            batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val());
            ///////////////////

            var iqcIsHol2 = isHoliday(batteryReliabilityTestEndDate);
            batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val(iqcIsHol2));
            batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val());
        }
    }
    ///agingTestStartDateBatteryChange ////
    function agingTestStartDateBatteryChange() {
        var batteryAgingTestStartDate = $('#batteryAgingTestStartDate').val();

        if (batteryAgingTestStartDate != "") {
            var iqcStart11 = isHolidayCheck(batteryAgingTestStartDate);
            var batteryAgingTestEndDate;
            if (iqcStart11 == true) {
                alertify.confirm("WOW!!! It's Holiday.", "Do you want to proceed it?",
                    function () {
                        alertify.success('Ok');

                        batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val(moment(batteryAgingTestStartDate).add(3, 'days').format("YYYY-MM-DD")));
                        batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val());

                        ////////////////
                        var iqcStart2 = isHoliday(batteryAgingTestEndDate);
                        batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val(iqcStart2));
                        batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val());

                    }, function () {
                        alertify.error('Cancelled');

                        $('#batteryAgingTestStartDate').val("");
                        $('#batteryAgingTestEndDate').val("");
                    });
            }


            batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val(moment(batteryAgingTestStartDate).add(3, 'days').format("YYYY-MM-DD")));
            batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val());

            /////////Add extra days for holiday///////////
            var dCount21 = getHolidayCount(batteryAgingTestStartDate, batteryAgingTestEndDate);

            batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val(moment(batteryAgingTestEndDate).add(dCount21, 'days').format("YYYY-MM-DD")));
            batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val());
            ///////////////////

            var iqcIsHol21 = isHoliday(batteryAgingTestEndDate);
            batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val(iqcIsHol21));
            batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val());

        }
    }
    ///rnDConfirmationStartDateBAssemblyChange////
    function rnDConfirmationStartDateBAssemblyChange() {
        var rnDConfirmStartDateBAssembly = $('#rnDConfirmStartDateBAssembly').val();

        if (rnDConfirmStartDateBAssembly != "") {
            var iqcStart11 = isHolidayCheck(rnDConfirmStartDateBAssembly);
            var rnDConfirmEndDateBAssembly;
            if (iqcStart11 == true) {
                alertify.confirm("WOW!!! It's Holiday.", "Do you want to proceed it?",
                    function () {
                        alertify.success('Ok');

                        rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val(moment(rnDConfirmStartDateBAssembly).add(3, 'days').format("YYYY-MM-DD")));
                        rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val());

                        ////////////////
                        var iqcStart2 = isHoliday(rnDConfirmEndDateBAssembly);
                        rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val(iqcStart2));
                        rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val());

                    }, function () {
                        alertify.error('Cancelled');

                        $('#rnDConfirmStartDateBAssembly').val("");
                        $('#rnDConfirmEndDateBAssembly').val("");
                    });
            }


            rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val(moment(rnDConfirmStartDateBAssembly).add(3, 'days').format("YYYY-MM-DD")));
            rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val());

            /////////Add extra days for holiday///////////
            var dCount21 = getHolidayCount(rnDConfirmStartDateBAssembly, rnDConfirmEndDateBAssembly);

            rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val(moment(rnDConfirmEndDateBAssembly).add(dCount21, 'days').format("YYYY-MM-DD")));
            rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val());
            ///////////////////

            var iqcIsHol21 = isHoliday(rnDConfirmEndDateBAssembly);
            rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val(iqcIsHol21));
            rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val());

        }
    }

    ///softwareConfirmationStartDateBAssemblyChange////
    function softwareConfirmationStartDateBAssemblyChange() {
        var softwareConfirmationStartDate = $('#softwareConfirmationStartDate').val();

        if (softwareConfirmationStartDate != "") {
            var iqcStart11 = isHolidayCheck(softwareConfirmationStartDate);
            var softwareConfirmationEndDate;
            if (iqcStart11 == true) {
                alertify.confirm("WOW!!! It's Holiday.", "Do you want to proceed it?",
                    function () {
                        alertify.success('Ok');

                        softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val(moment(softwareConfirmationStartDate).add(1, 'days').format("YYYY-MM-DD")));
                        softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val());

                        ////////////////
                        var iqcStart2 = isHoliday(softwareConfirmationEndDate);
                        softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val(iqcStart2));
                        softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val());

                    }, function () {
                        alertify.error('Cancelled');

                        $('#softwareConfirmationStartDate').val("");
                        $('#softwareConfirmationEndDate').val("");
                    });
            }


            softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val(moment(softwareConfirmationStartDate).add(1, 'days').format("YYYY-MM-DD")));
            softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val());

            /////////Add extra days for holiday///////////
            var dCount21 = getHolidayCount(softwareConfirmationStartDate, softwareConfirmationEndDate);

            softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val(moment(softwareConfirmationEndDate).add(dCount21, 'days').format("YYYY-MM-DD")));
            softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val());
            ///////////////////

            var iqcIsHol21 = isHoliday(softwareConfirmationEndDate);
            softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val(iqcIsHol21));
            softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val());

        }
    }
    /////trialProductionStartDateBAssemblyChange/////
    function trialProductionStartDateBAssemblyChange() {
        var trialProductionStartDateBAssembly = $('#trialProductionStartDateBAssembly').val();

        if (trialProductionStartDateBAssembly != "") {
            var iqcStart11 = isHolidayCheck(trialProductionStartDateBAssembly);
            var trialProductionEndDateBAssembly;
            if (iqcStart11 == true) {
                alertify.confirm("WOW!!! It's Holiday.", "Do you want to proceed it?",
                    function () {
                        alertify.success('Ok');

                        trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val(trialProductionStartDateBAssembly));
                        trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val());

                        ////////////////
                        //var iqcStart2 = isHoliday(trialProductionEndDateBAssembly);
                        //trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val(iqcStart2));
                        //trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val());

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetTrialProductionDateBAssembly", "Production")',
                            data: "{ trialProductionStartDateBAssembly: '" + trialProductionStartDateBAssembly
                                + "', trialProductionEndDateBAssembly: '" + trialProductionEndDateBAssembly
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {

                                    $("#trialAssemblyStartPara").show();
                                    $('#trialProductionStartDateBAssembly').attr("disabled", false);

                                } else {
                                    $("#trialAssemblyStartPara").hide();
                                }
                            }
                        });

                    }, function () {
                        alertify.error('Cancelled');

                        $('#trialProductionStartDateBAssembly').val("");
                        $('#trialProductionEndDateBAssembly').val("");
                    });
            }


            trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val(trialProductionStartDateBAssembly));
            trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val());

            /////////Add extra days for holiday///////////
            //var dCount21 = getHolidayCount(trialProductionStartDateBAssembly, trialProductionEndDateBAssembly);

            //trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val(moment(trialProductionEndDateBAssembly).add(dCount21, 'days').format("YYYY-MM-DD")));
            //trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val());
            ///////////////////

            var iqcIsHol21 = isHoliday(trialProductionEndDateBAssembly);
            trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val(iqcIsHol21));
            trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val());

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetTrialProductionDateBAssembly", "Production")',
                data: "{ trialProductionStartDateBAssembly: '" + trialProductionStartDateBAssembly
                    + "', trialProductionEndDateBAssembly: '" + trialProductionEndDateBAssembly
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);

                    if (dataList == "YES") {
                        $("#trialAssemblyStartPara").show();
                        $('#trialProductionStartDateBAssembly').attr("disabled", false);

                    } else {
                        $("#trialAssemblyStartPara").hide();
                    }
                }
            });
        }
    }

    ///iqcCompleteStartDateBAssemblyChange///
    function iqcCompleteStartDateBAssemblyChange() {
        var iqcCompleteStartDateBAssembly = $('#iqcCompleteStartDateBAssembly').val();

        if (iqcCompleteStartDateBAssembly != "") {
            var iqcStart11 = isHolidayCheck(iqcCompleteStartDateBAssembly);
            var iqcCompleteEndDateBAssembly;
            if (iqcStart11 == true) {
                alertify.confirm("WOW!!! It's Holiday.", "Do you want to proceed it?",
                    function () {
                        alertify.success('Ok');

                        iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val(moment(iqcCompleteStartDateBAssembly).add(1, 'days').format("YYYY-MM-DD")));
                        iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val());

                        ////////////////
                        var iqcStart2 = isHoliday(iqcCompleteEndDateBAssembly);
                        iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val(iqcStart2));
                        iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val());

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetIqcCompleteDateBAssembly", "Production")',
                            data: "{ iqcCompleteStartDateBAssembly: '" + iqcCompleteStartDateBAssembly
                                + "', iqcCompleteEndDateBAssembly: '" + iqcCompleteEndDateBAssembly
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {

                                    $("#iqcAssemblyStartPara").show();
                                    $('#iqcCompleteStartDateBAssembly').attr("disabled", false);

                                } else {
                                    $("#iqcAssemblyStartPara").hide();
                                }
                            }
                        });

                    }, function () {
                        alertify.error('Cancelled');

                        $('#iqcCompleteStartDateBAssembly').val("");
                        $('#iqcCompleteEndDateBAssembly').val("");
                    });
            }


            iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val(moment(iqcCompleteStartDateBAssembly).add(1, 'days').format("YYYY-MM-DD")));
            iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val());

            /////////Add extra days for holiday///////////
            var dCount21 = getHolidayCount(iqcCompleteStartDateBAssembly, iqcCompleteEndDateBAssembly);

            iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val(moment(iqcCompleteEndDateBAssembly).add(dCount21, 'days').format("YYYY-MM-DD")));
            iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val());
            ///////////////////

            var iqcIsHol21 = isHoliday(iqcCompleteEndDateBAssembly);
            iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val(iqcIsHol21));
            iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val());

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetIqcCompleteDateBAssembly", "Production")',
                data: "{ iqcCompleteStartDateBAssembly: '" + iqcCompleteStartDateBAssembly
                    + "', iqcCompleteEndDateBAssembly: '" + iqcCompleteEndDateBAssembly
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);

                    if (dataList == "YES") {
                        $("#iqcAssemblyStartPara").show();
                        $('#iqcCompleteStartDateBAssembly').attr("disabled", false);

                    } else {
                        $("#iqcAssemblyStartPara").hide();
                    }
                }
            });
        }
    }
    ////////////Battery Report/////////////
    ////Total quantity check///////
    function batterySmtTotalQuantityCheck() {
        var massProductionStartDateBSmt = $('#massProductionStartDateBSmt').val();

        if (massProductionStartDateBSmt == "") {
            alertify.dialog('alert').set({
                'title': '   ',
                'transition': 'zoom',
                'message': "Please must select SMT Mass Production Date 1st.",
            }).show();
            $('#batterySmt_TotalQuantity').val("");
            return false;

        }

    }
    function batteryHousingTotalQuantityCheck() {
        var housingMassProStartDateHousing = $('#housingMassProStartDateHousing').val();

        if (housingMassProStartDateHousing == "") {
            alertify.dialog('alert').set({
                'title': '   ',
                'transition': 'zoom',
                'message': "Please must select Housing Mass Production Date 1st.",
            }).show();
            $('#batteryHousing_TotalQuantity').val("");
            return false;
        }

    }

    function batteryMassTotalQuantityCheck() {
        var batteryMassProductionStartDate = $('#batteryMassProductionStartDate').val();

        if (batteryMassProductionStartDate == "") {
            alertify.dialog('alert').set({
                'title': '   ',
                'transition': 'zoom',
                'message': "Please must select Battery Mass Production Date 1st.",
            }).show();
            $('#battery_TotalQuantity').val("");
            return false;
        }

    }
    function batteryAssemblyTotalQuantityCheck() {
        var assembStartDateBAssembly = $('#assembStartDateBAssembly').val();

        if (assembStartDateBAssembly == "") {
            alertify.dialog('alert').set({
                'title': '   ',
                'transition': 'zoom',
                'message': "Please must select Assembly Production Date 1st.",
            }).show();
            $('#batteryAssembly_TotalQuantity').val("");
            return false;
        }

    }

    function batteryPackingTotalQuantityCheck() {
        var packingMassProductionStartDateBAssembly = $('#packingMassProductionStartDateBAssembly').val();

        if (packingMassProductionStartDateBAssembly == "") {
            alertify.dialog('alert').set({
                'title': '   ',
                'transition': 'zoom',
                'message': "Please must select Packing Production Date 1st.",
            }).show();
            $('#batteryPacking_TotalQuantity').val("");
            return false;
        }

    }

    function inactiveAPlan(planIdss) {
        var proSelectId = document.getElementById('dropForProject');
        console.log(proSelectId);

        var selecteddropText = proSelectId.options[proSelectId.selectedIndex].text;
        var selecteddropValue = proSelectId.options[proSelectId.selectedIndex].value;
        console.log("proname " + selecteddropText);
        console.log("proId " + selecteddropValue);

        var planIds = planIdss;

        if (selecteddropValue != 0) {

            $.ajax({
                url: '@Url.Action("InActiveAPlan", "Production")',
                type: "POST",
                data: "{ projectId: '" + selecteddropValue
                     + "', projectName: '" + selecteddropText
                  + "', planIds: '" + planIds
                     + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {
                    console.log(data);
                    if (data.data == "ok") {
                        alertify.dialog('alert').set({
                            'title': '   ',
                            'transition': 'zoom',
                            'message': "InActive Successful.",
                        }).show();
                        window.location.reload();
                    }
                   
                }
            });

        }

    }

    function editAPlan(planIdss) {
        var proSelectId = document.getElementById('dropForProject');
        console.log(proSelectId);

        var selecteddropText = proSelectId.options[proSelectId.selectedIndex].text;
        var selecteddropValue = proSelectId.options[proSelectId.selectedIndex].value;
        console.log("proname " + selecteddropText);
        console.log("proId " + selecteddropValue);

        var planIds = planIdss;

        if (selecteddropValue != 0) {
            window.open('@Url.Action("CkdEdit", "Production")' + '?projectId=' + selecteddropValue + '&projectName=' + selecteddropText + '&planId=' + planIds);
            @*$.ajax({
                url: '@Url.Action("CkdEdit", "Production")',
                type: "GET",
                //data: "{ projectId: '" + selecteddropValue + "'}",
                data: { projectId: selecteddropValue, projectName: selecteddropText },
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {
                    console.log(data);

                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }

                }
            });*@

        }

    }
    ////////////green SAVE//////////
    $("#btnSave").on('click', function (e) {
        e.preventDefault();
        $('#loading').show();
        var obj = {};
        var objArr = [];

        var projectId;
        var projectName;
        var materialReceiveStartDateBSmt;
        var materialReceiveEndDateBSmt;
        var iqcCompleteStartDateBSmt;
        var iqcCompleteEndDateBSmt;
        var trialProductionStartDateBSmt;
        var trialProductionEndDateBSmt;
        // var smtTrialLine;
        var massProductionStartDateBSmt;
        var massProductionEndDateBSmt;

        var materialReceiveStartDateHousing;
        var materialReceiveEndDateHousing;
        var iqcCompleteStartDateHousing;
        var iqcCompleteEndDateHousing;
        var trialProductionStartDateHousing;
        var trialProductionEndDateHousing;
        //var housingTrialLine;
        var housingReliabilityStartDateHousing;
        var housingReliabilityEndtDateHousing;
        var housingMassProStartDateHousing;
        var housingMassProEndtDateHousing;

        var materialReceiveStartDateBattery;
        var materialReceiveEndDateBattery;
        var iqcCompleteStartDateBattery;
        var iqcCompleteEndDateBattery;
        var trialProductionStartDateBattery;
        var trialProductionEndDateBattery;
        //var batteryTrialLine;
        var batteryReliabilityTestStartDate;
        var batteryReliabilityTestEndDate;
        var batteryMassProductionStartDate;
        var batteryMassProductionEndDate;
        var batteryAgingTestStartDate;
        var batteryAgingTestEndDate;

        var materialStartDateBAssembly;
        var materialReceiveEndDateBAssembly;
        var iqcCompleteStartDateBAssembly;
        var iqcCompleteEndDateBAssembly;
        var trialProductionStartDateBAssembly;
        var trialProductionEndDateBAssembly;
        //var assemblyTrialLine;
        var softwareConfirmationStartDate;
        var softwareConfirmationEndDate;
        var rnDConfirmStartDateBAssembly;
        var rnDConfirmEndDateBAssembly;
        var assembStartDateBAssembly;
        var assembEndDateBAssembly;
        var packingMassProductionStartDateBAssembly;
        var packingMassProductionEndDateBAssembly;

        if ($("#smtChkId").is(':checked')) {
            $("#smtChkId").attr('value', 'true');
            $("#smtChkId").prop("checked", true);
        } else {
            $("#smtChkId").attr('value', 'false');
            $("#smtChkId").prop("checked", false);
        }
        smtChk = $('#smtChkId').val();
        console.log("smtChk :" + smtChk);
        //////////////////////////////////////
        if ($("#housingChkId").is(':checked')) {
            $("#housingChkId").attr('value', 'true');
            $("#housingChkId").prop("checked", true);
        } else {
            $("#housingChkId").attr('value', 'false');
            $("#housingChkId").prop("checked", false);
        }
        houseChk = $('#housingChkId').val();
        console.log("smtChk :" + houseChk);
        ///////////////////////////////////
        if ($("#batteryChkId").is(':checked')) {
            $("#batteryChkId").attr('value', 'true');
            $("#batteryChkId").prop("checked", true);
        } else {
            $("#batteryChkId").attr('value', 'false');
            $("#batteryChkId").prop("checked", false);
        }
        batteryChk = $('#batteryChkId').val();
        console.log("batteryChk :" + batteryChk);
        ///////////////////////////////////
        if ($("#assemblyChkId").is(':checked')) {
            $("#assemblyChkId").attr('value', 'true');
            $("#assemblyChkId").prop("checked", true);
        } else {
            $("#assemblyChkId").attr('value', 'false');
            $("#assemblyChkId").prop("checked", false);
        }
        assemblyChk = $('#assemblyChkId').val();
        console.log("assemblyChk :" + assemblyChk);

        $("#batteryPlanTable").each(function () {
            obj = new Object();

            var proSelectId = document.getElementById('dropForProject');
            projectId = proSelectId.options[proSelectId.selectedIndex].value;
            projectName = proSelectId.options[proSelectId.selectedIndex].text;

            if (smtChk == "true") {
                materialReceiveStartDateBSmt = $.trim($(this).find('#materialReceiveStartDateBSmt').val());
                materialReceiveEndDateBSmt = $.trim($(this).find('#materialReceiveEndDateBSmt').val());
                iqcCompleteStartDateBSmt = $.trim($(this).find('#iqcCompleteStartDateBSmt').val());
                iqcCompleteEndDateBSmt = $.trim($(this).find('#iqcCompleteEndDateBSmt').val());
                trialProductionStartDateBSmt = $.trim($(this).find('#trialProductionStartDateBSmt').val());
                trialProductionEndDateBSmt = $.trim($(this).find('#trialProductionEndDateBSmt').val());
                massProductionStartDateBSmt = $.trim($(this).find('#massProductionStartDateBSmt').val());
                var batterySmtTotalQuantity = $.trim($('#batterySmt_TotalQuantity').val());
                var batterySmtPerDayCapacity = $.trim($('#batterySmt_PerDayCapacity').val());
                /////////////////////
                var lineArrSmtTrial = $("#smtTrialLine :selected").text();
                console.log("lineArrSmtTrial :" + lineArrSmtTrial);

                var lineArrSmtNum = $("#smtMassLineInfo :selected").text();
                console.log("lineArrSmtNum :" + lineArrSmtNum);
                ///////////////////////

                massProductionEndDateBSmt = $.trim($(this).find('#massProductionEndDateBSmt').val());

                if (massProductionStartDateBSmt == "") {
                    alertify.dialog('alert').set({
                        'title': '   ',
                        'transition': 'zoom',
                        'message': "Please Select Mass Production StartDate for SMT",
                    }).show();
                    return false;
                }
                if (massProductionEndDateBSmt == "") {
                    alertify.dialog('alert').set({
                        'title': '   ',
                        'transition': 'zoom',
                        'message': "Please Select Mass Production EndDate for SMT",
                    }).show();
                    return false;
                }
                if (massProductionEndDateBSmt < massProductionStartDateBSmt) {
                    alertify.dialog('alert').set({
                        'title': '   ',
                        'transition': 'zoom',
                        'message': "SMT Mass Production EndDate must be greater than StartDate",
                    }).show();
                    return false;
                }
            }//end of smt

            if (houseChk == "true") {
                materialReceiveStartDateHousing = $.trim($(this).find('#materialReceiveStartDateHousing').val());
                materialReceiveEndDateHousing = $.trim($(this).find('#materialReceiveEndDateHousing').val());
                iqcCompleteStartDateHousing = $.trim($(this).find('#iqcCompleteStartDateHousing').val());
                iqcCompleteEndDateHousing = $.trim($(this).find('#iqcCompleteEndDateHousing').val());
                trialProductionStartDateHousing = $.trim($(this).find('#trialProductionStartDateHousing').val());
                trialProductionEndDateHousing = $.trim($(this).find('#trialProductionEndDateHousing').val());

                housingReliabilityStartDateHousing = $.trim($(this).find('#housingReliabilityStartDateHousing').val());
                housingReliabilityEndtDateHousing = $.trim($(this).find('#housingReliabilityEndtDateHousing').val());
                housingMassProStartDateHousing = $.trim($(this).find('#housingMassProStartDateHousing').val());
                housingMassProEndtDateHousing = $.trim($(this).find('#housingMassProEndtDateHousing').val());
                var batteryHousingTotalQuantity = $.trim($('#batteryHousing_TotalQuantity').val());
                var batteryHousingPerDayCapacity = $.trim($('#batteryHousing_PerDayCapacity').val());

                var lineArrHousingTrial = $("#housingTrialLine :selected").text();
                console.log("lineArrHousingTrial :" + lineArrHousingTrial);

                var lineArrHousingNum = $("#housingMassLineInfo :selected").text();
                console.log("lineArrHousingNum :" + lineArrHousingNum);
                ///////////////////////

                if (housingMassProStartDateHousing == "") {
                    alertify.dialog('alert').set({
                        'title': '   ',
                        'transition': 'zoom',
                        'message': "Please Select Housing Mass Production StartDate for Housing",
                    }).show();
                    return false;
                }
                if (housingMassProEndtDateHousing == "") {
                    alertify.dialog('alert').set({
                        'title': '   ',
                        'transition': 'zoom',
                        'message': "Please Select Housing Mass Production EndDate for Housing",
                    }).show();
                    return false;
                }

            }//end of housing

            if (batteryChk == "true") {

                materialReceiveStartDateBattery = $.trim($(this).find('#materialReceiveStartDateBattery').val());
                materialReceiveEndDateBattery = $.trim($(this).find('#materialReceiveEndDateBattery').val());
                iqcCompleteStartDateBattery = $.trim($(this).find('#iqcCompleteStartDateBattery').val());
                iqcCompleteEndDateBattery = $.trim($(this).find('#iqcCompleteEndDateBattery').val());
                trialProductionStartDateBattery = $.trim($(this).find('#trialProductionStartDateBattery').val());
                trialProductionEndDateBattery = $.trim($(this).find('#trialProductionEndDateBattery').val());
                batteryReliabilityTestStartDate = $.trim($(this).find('#batteryReliabilityTestStartDate').val());
                batteryReliabilityTestEndDate = $.trim($(this).find('#batteryReliabilityTestEndDate').val());
                batteryMassProductionStartDate = $.trim($(this).find('#batteryMassProductionStartDate').val());
                batteryMassProductionEndDate = $.trim($(this).find('#batteryMassProductionEndDate').val());
                var batteryTotalQuantity = $.trim($('#battery_TotalQuantity').val());
                var batteryPerDayCapacity = $.trim($('#battery_PerDayCapacity').val());
                /////////////////////
                batteryAgingTestStartDate = $.trim($(this).find('#batteryAgingTestStartDate').val());
                batteryAgingTestEndDate = $.trim($(this).find('#batteryAgingTestEndDate').val());

                var lineArrBatteryTrial = $("#batteryTrialLine :selected").text();
                console.log("lineArrBatteryTrial :" + lineArrBatteryTrial);

                var lineArrBatteryNum = $("#batteryMassLineInfo :selected").text();
                console.log("lineArrBatteryNum :" + lineArrBatteryNum);
                ///////////////////////

                if (batteryMassProductionStartDate == "") {
                    alertify.dialog('alert').set({
                        'title': '   ',
                        'transition': 'zoom',
                        'message': "Please Select Battery Mass Production StartDate",
                    }).show();
                    return false;
                }
                if (batteryMassProductionEndDate == "") {
                    alertify.dialog('alert').set({
                        'title': '   ',
                        'transition': 'zoom',
                        'message': "Please Select Battery Mass Production EndDate",
                    }).show();
                    return false;
                }

            }//end of battery
            if (assemblyChk == "true") {
                materialStartDateBAssembly = $.trim($(this).find('#materialStartDateBAssembly').val());
                materialReceiveEndDateBAssembly = $.trim($(this).find('#materialReceiveEndDateBAssembly').val());
                iqcCompleteStartDateBAssembly = $.trim($(this).find('#iqcCompleteStartDateBAssembly').val());
                iqcCompleteEndDateBAssembly = $.trim($(this).find('#iqcCompleteEndDateBAssembly').val());
                trialProductionStartDateBAssembly = $.trim($(this).find('#trialProductionStartDateBAssembly').val());
                trialProductionEndDateBAssembly = $.trim($(this).find('#trialProductionEndDateBAssembly').val());
                softwareConfirmationStartDate = $.trim($(this).find('#softwareConfirmationStartDate').val());
                softwareConfirmationEndDate = $.trim($(this).find('#softwareConfirmationEndDate').val());
                rnDConfirmStartDateBAssembly = $.trim($(this).find('#rnDConfirmStartDateBAssembly').val());
                rnDConfirmEndDateBAssembly = $.trim($(this).find('#rnDConfirmEndDateBAssembly').val());
                assembStartDateBAssembly = $.trim($(this).find('#assembStartDateBAssembly').val());
                assembEndDateBAssembly = $.trim($(this).find('#assembEndDateBAssembly').val());
                packingMassProductionStartDateBAssembly = $.trim($(this).find('#packingMassProductionStartDateBAssembly').val());
                packingMassProductionEndDateBAssembly = $.trim($(this).find('#packingMassProductionEndDateBAssembly').val());

                var batteryAssemblyTotalQuantity = $.trim($('#batteryAssembly_TotalQuantity').val());
                var batteryAssemblyPerDayCapacity = $.trim($('#batteryAssembly_PerDayCapacity').val());

                var lineArrAssemblyTrial = $("#assemblyTrialLine :selected").text();
                console.log("lineArrAssemblyTrial :" + lineArrAssemblyTrial);

                var lineArrAssemblyNum = $("#assemblyMassLineInfo :selected").text();
                console.log("lineArrAssemblyNum :" + lineArrAssemblyNum);

                var batteryPackingTotalQuantity = $.trim($('#batteryPacking_TotalQuantity').val());
                var batteryPackingPerDayCapacity = $.trim($('#batteryPacking_PerDayCapacity').val());

                var lineArrPackingNum = $("#packingMassLineInfo :selected").text();
                console.log("lineArrPackingNum :" + lineArrPackingNum);
                ///////////////////////

                if (assembStartDateBAssembly == "") {
                    alertify.dialog('alert').set({
                        'title': '   ',
                        'transition': 'zoom',
                        'message': "Please Select Assembly Production StartDate",
                    }).show();
                    return false;
                }
                if (assembEndDateBAssembly == "") {
                    alertify.dialog('alert').set({
                        'title': '   ',
                        'transition': 'zoom',
                        'message': "Please Select Assembly Production EndDate",
                    }).show();
                    return false;
                }

                if (packingMassProductionStartDateBAssembly == "") {
                    alertify.dialog('alert').set({
                        'title': '   ',
                        'transition': 'zoom',
                        'message': "Please Select Packing Production StartDate",
                    }).show();
                    return false;
                }
                if (packingMassProductionEndDateBAssembly == "") {
                    alertify.dialog('alert').set({
                        'title': '   ',
                        'transition': 'zoom',
                        'message': "Please Select Packing Production EndDate",
                    }).show();
                    return false;
                }

            }//end of assembly


            obj.ProjectId = projectId;
            obj.ProjectName = projectName;

            if (smtChk == "true") {
                obj.MaterialReceiveStartDateBSmt = materialReceiveStartDateBSmt;
                obj.MaterialReceiveEndDateBSmt = materialReceiveEndDateBSmt;
                obj.IqcCompleteStartDateBSmt = iqcCompleteStartDateBSmt;
                obj.IqcCompleteEndDateBSmt = iqcCompleteEndDateBSmt;
                obj.TrialProductionStartDateBSmt = trialProductionStartDateBSmt;
                obj.TrialProductionEndDateBSmt = trialProductionEndDateBSmt;
                obj.SmtMassProductionStartDateBSmt = massProductionStartDateBSmt;
                obj.SmtMassProductionEndDateBSmt = massProductionEndDateBSmt;
                obj.BatterySmtTotalQuantity = batterySmtTotalQuantity;
                obj.BatterySmtPerDayCapacity = batterySmtPerDayCapacity;
                obj.SmtAllLineNumber = lineArrSmtNum;
                obj.SmtTrialLine = lineArrSmtTrial;
            }

            if (houseChk == "true") {
                obj.MaterialReceiveStartDateBHousing = materialReceiveStartDateHousing;
                obj.MaterialReceiveEndDateBHousing = materialReceiveEndDateHousing;
                obj.IqcCompleteStartDateBHousing = iqcCompleteStartDateHousing;
                obj.IqcCompleteEndDateBHousing = iqcCompleteEndDateHousing;
                obj.TrialProductionStartDateBHousing = trialProductionStartDateHousing;
                obj.TrialProductionEndDateBHousing = trialProductionEndDateHousing;
                obj.HousingReliabilityTestStartDateBHousing = housingReliabilityStartDateHousing;
                obj.HousingReliabilityTestEndDateBHousing = housingReliabilityEndtDateHousing;
                obj.HousingMassProductionStartDateBHousing = housingMassProStartDateHousing;
                obj.HousingMassProductionEndDateBHousing = housingMassProEndtDateHousing;
                obj.BatteryHousingTotalQuantity = batteryHousingTotalQuantity;
                obj.BatteryHousingPerDayCapacity = batteryHousingPerDayCapacity;
                obj.HousingAllLineNumber = lineArrHousingNum;
                obj.HousingTrialLine = lineArrHousingTrial;
            }
            if (batteryChk == "true") {
                obj.MaterialReceiveStartDateBattery = materialReceiveStartDateBattery;
                obj.MaterialReceiveEndDateBattery = materialReceiveEndDateBattery;
                obj.IqcCompleteStartDateBattery = iqcCompleteStartDateBattery;
                obj.IqcCompleteEndDateBattery = iqcCompleteEndDateBattery;
                obj.TrialProductionStartDateBattery = trialProductionStartDateBattery;
                obj.TrialProductionEndDateBattery = trialProductionEndDateBattery;
                obj.BatteryReliabilityTestStartDate = batteryReliabilityTestStartDate;
                obj.BatteryReliabilityTestEndDate = batteryReliabilityTestEndDate;
                obj.BatteryMassProductionStartDate = batteryMassProductionStartDate;
                obj.BatteryMassProductionEndDate = batteryMassProductionEndDate;

                obj.BatteryTotalQuantity = batteryTotalQuantity;
                obj.BatteryPerDayCapacity = batteryPerDayCapacity;
                obj.BatteryAllLineNumber = lineArrBatteryNum;

                obj.BatteryAgingTestStartDate = batteryAgingTestStartDate;
                obj.BatteryAgingTestEndDate = batteryAgingTestEndDate;

                obj.BatteryTrialLine = lineArrBatteryTrial;
            }
            if (assemblyChk == "true") {
                obj.MaterialReceiveStartDateBAssembly = materialStartDateBAssembly;
                obj.MaterialReceiveEndDateBAssembly = materialReceiveEndDateBAssembly;
                obj.IqcCompleteStartDateBAssembly = iqcCompleteStartDateBAssembly;
                obj.IqcCompleteEndDateBAssembly = iqcCompleteEndDateBAssembly;
                obj.TrialProductionStartDateBAssembly = trialProductionStartDateBAssembly;
                obj.TrialProductionEndDateBAssembly = trialProductionEndDateBAssembly;
                obj.SoftwareConfirmationStartDateBAssembly = softwareConfirmationStartDate;
                obj.SoftwareConfirmationEndDateBAssembly = softwareConfirmationEndDate;
                obj.RandDConfirmationStartDateBAssembly = rnDConfirmStartDateBAssembly;
                obj.RandDConfirmationEndDateBAssembly = rnDConfirmEndDateBAssembly;
                obj.AssemblyMassProductionStartDateBAssembly = assembStartDateBAssembly;
                obj.AssemblyMassProductionEndDateBAssembly = assembEndDateBAssembly;
                obj.PackingMassProductionStartDateBAssembly = packingMassProductionStartDateBAssembly;
                obj.PackingMassProductionEndDateBAssembly = packingMassProductionEndDateBAssembly;

                obj.BatteryAssemblyTotalQuantity = batteryAssemblyTotalQuantity;
                obj.BatteryAssemblyPerDayCapacity = batteryAssemblyPerDayCapacity;
                obj.AssemblyAllLineNumber = lineArrAssemblyNum;

                obj.BatteryPackingTotalQuantity = batteryPackingTotalQuantity;
                obj.BatteryPackingPerDayCapacity = batteryPackingPerDayCapacity;
                obj.PackingAllLineNumber = lineArrPackingNum;

                obj.AssemblyTrialLine = lineArrAssemblyTrial;

                obj.SmtChk = smtChk;
                obj.HouseChk = houseChk;
                obj.BatteryChk = batteryChk;
                obj.AssemblyChk = assemblyChk;

                objArr.push(obj);
                console.log("objArr---->" + objArr);
            }//end of assembly
           // refresh();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("BatteryPlanAllData", "Production")',
                data: "{objArr:'" + JSON.stringify(objArr) + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {
                    $('#loading').hide();
                    if (!data.success) {
                        if (data.errors.name) {
                            $('.throw_error').fadeIn(1000).html(data.errors.name);
                        }
                    }
                    else {
                        $('#success').fadeIn(1000).append('<p>' + data.posted + '</p>');
                    }
                }
            });
            window.location = '@Url.Action("BatteryPlan", "Production")';

        });//end of the table
    });
    ////////////SAVE//////////

    function smtLineInfoEditFunc() {


        $("#tblForEdit tr.tableTrCls1").each(function () {
            var batterySmtTotalQuantity = $.trim($(this).find('#totalQuantityBSmt22').val());//$('#totalQuantityBSmt22').val();
            var batterySmtPerDayCapacity = $.trim($(this).find('#smtPerDayCapacity22').val());//$('#smtPerDayCapacity22').val();

            if (batterySmtTotalQuantity != "" && batterySmtPerDayCapacity != "" && +batterySmtTotalQuantity < +batterySmtPerDayCapacity) {
                alertify.dialog('alert').set({
                    'title': '   ',
                    'transition': 'zoom',
                    'message': "SMT Total Quantity must be greater than SMT PerDayCapacity ",
                }).show();

                $.trim($(this).find('#totalQuantityBSmt22').val(""));
                $.trim($(this).find('#smtPerDayCapacity22').val(""));

                //$('#totalQuantityBSmt22').val("");
                //$('#smtPerDayCapacity22').val("");

                return false;
            }

            var smtMassLineInfo = $.trim($(this).find('#smtAllLineNumber22').val());//$('#smtAllLineNumber22').val();

            console.log("smtMassLineInfo:" + smtMassLineInfo);

            var arr = smtMassLineInfo.split(",");

            ////////////
            var perDayCapacitySum = 0;

            for (var xi = 0; xi < arr.length; xi++) {

                perDayCapacitySum += +batterySmtPerDayCapacity;
            }

            console.log("perDayCapacitySum :" + perDayCapacitySum);
            ////////////

            var massProductionStartDateBSmt = $.trim($(this).find('#smtMassProductionSDateBSmt22').val());//$.trim($('#smtMassProductionSDateBSmt22').val());
            var massProductionEndDateBSmt = $.trim($(this).find('#smtMassProductionEDateBSmt22').val());//$.trim($('#smtMassProductionEDateBSmt22').val());

            if (batterySmtTotalQuantity != null && perDayCapacitySum != null && smtMassLineInfo != null) {

                var assemblyDivision = (batterySmtTotalQuantity / perDayCapacitySum);

                if (isFloat((batterySmtTotalQuantity / perDayCapacitySum))) {
                    var aa = (batterySmtTotalQuantity / perDayCapacitySum);
                    var n = (aa + "").split(".")[0];
                    var nn = +n;
                    //massProductionEndDateBSmt = $.trim($('#smtMassProductionEDateBSmt22').val(moment(massProductionStartDateBSmt).add(nn, 'days').format("YYYY-MM-DD")));
                    //massProductionEndDateBSmt = $.trim($('#smtMassProductionEDateBSmt22').val());
                    massProductionEndDateBSmt = $.trim($(this).find('#smtMassProductionEDateBSmt22').val(moment(massProductionStartDateBSmt).add(nn, 'days').format("YYYY-MM-DD")));
                    massProductionEndDateBSmt = $.trim($(this).find('#smtMassProductionEDateBSmt22').val());
                    ////////holiday count///////
                    var startDate = moment(massProductionStartDateBSmt).format("YYYY-MM-DD");
                    var endDDate = massProductionEndDateBSmt;

                    // getHolidayCount(startDate, endDDate);
                    var dCount = getHolidayCount(startDate, endDDate);

                    massProductionEndDateBSmt = $.trim($(this).find('#smtMassProductionEDateBSmt22').val(moment(massProductionEndDateBSmt).add(dCount, 'days').format("YYYY-MM-DD")));
                    massProductionEndDateBSmt = $.trim($(this).find('#smtMassProductionEDateBSmt22').val());
                    /////////////////////////////

                    //holiday check//
                    var mass11 = isHoliday(massProductionEndDateBSmt);
                    massProductionEndDateBSmt = $.trim($(this).find('#smtMassProductionEDateBSmt22').val(mass11));//$.trim($('#smtMassProductionEDateBSmt22').val(mass11));
                    massProductionEndDateBSmt = $.trim($(this).find('#smtMassProductionEDateBSmt22').val());
                    /////////////////
                } else {
                    var bb = batterySmtTotalQuantity / perDayCapacitySum;
                    massProductionEndDateBSmt = $.trim($(this).find('#smtMassProductionEDateBSmt22').val(moment(massProductionStartDateBSmt).add(bb - 1, 'days').format("YYYY-MM-DD")));
                    massProductionEndDateBSmt = $.trim($(this).find('#smtMassProductionEDateBSmt22').val());

                    ////////holiday count///////
                    var startDate1 = moment(massProductionStartDateBSmt).format("YYYY-MM-DD");
                    var endDDate1 = massProductionEndDateBSmt;

                    // getHolidayCount(startDate, endDDate);
                    var dCount1 = getHolidayCount(startDate1, endDDate1);

                    massProductionEndDateBSmt = $.trim($(this).find('#smtMassProductionEDateBSmt22').val(moment(massProductionEndDateBSmt).add(dCount1, 'days').format("YYYY-MM-DD")));
                    massProductionEndDateBSmt = $.trim($(this).find('#smtMassProductionEDateBSmt22').val());
                    /////////////////////////////

                    //holiday check//
                    var iqcAssembly12 = isHoliday(massProductionEndDateBSmt);
                    massProductionEndDateBSmt = $.trim($(this).find('#smtMassProductionEDateBSmt22').val(iqcAssembly12));
                    massProductionEndDateBSmt = $.trim($(this).find('#smtMassProductionEDateBSmt22').val());
                    /////////////////
                }
            }

            if (smtMassLineInfo == null) {
                massProductionEndDateBSmt = $.trim($(this).find('#smtMassProductionEDateBSmt22').val(""));
            }
            massProductionEndDateBSmt = $.trim($(this).find('#smtMassProductionEDateBSmt22').val());
        });

        //var batterySmtTotalQuantity = $('#totalQuantityBSmt22').val();
        //var batterySmtPerDayCapacity = $('#smtPerDayCapacity22').val();

        //if (+batterySmtTotalQuantity < +batterySmtPerDayCapacity) {
        //    alertify.dialog('alert').set({
        //        'title': '   ',
        //        'transition': 'zoom',
        //        'message': "SMT Total Quantity must be greater than SMT PerDayCapacity ",
        //    }).show();

        //    $('#totalQuantityBSmt22').val("");
        //    $('#smtPerDayCapacity22').val("");

        //    return false;
        //}

        //var smtMassLineInfo = $('#smtAllLineNumber22').val();
        //var smtAllLineCapacity22 = $('#smtAllLineCapacity22').val();

        //console.log("smtMassLineInfo:" + smtMassLineInfo);

        //var arr = smtMassLineInfo.split(",");

        //////////////
        //var perDayCapacitySum = 0;

        //for (var xi = 0; xi < arr.length; xi++) {

        //    perDayCapacitySum += +batterySmtPerDayCapacity;
        //}

        //console.log("perDayCapacitySum :" + perDayCapacitySum);
        //////////////

        //var massProductionStartDateBSmt = $.trim($('#smtMassProductionSDateBSmt22').val());
        //var massProductionEndDateBSmt = $.trim($('#smtMassProductionEDateBSmt22').val());

        //if (batterySmtTotalQuantity != null && perDayCapacitySum != null && smtMassLineInfo != null) {

        //    var assemblyDivision = (batterySmtTotalQuantity / perDayCapacitySum);

        //    if (isFloat((batterySmtTotalQuantity / perDayCapacitySum))) {
        //        var aa = (batterySmtTotalQuantity / perDayCapacitySum);
        //        var n = (aa + "").split(".")[0];
        //        var nn = +n;
        //        massProductionEndDateBSmt = $.trim($('#smtMassProductionEDateBSmt22').val(moment(massProductionStartDateBSmt).add(nn, 'days').format("YYYY-MM-DD")));
        //        massProductionEndDateBSmt = $.trim($('#smtMassProductionEDateBSmt22').val());

        //        ////////holiday count///////
        //        var startDate = moment(massProductionStartDateBSmt).format("YYYY-MM-DD");
        //        var endDDate = massProductionEndDateBSmt;

        //        // getHolidayCount(startDate, endDDate);
        //        var dCount = getHolidayCount(startDate, endDDate);

        //        massProductionEndDateBSmt = $.trim($('#smtMassProductionEDateBSmt22').val(moment(massProductionEndDateBSmt).add(dCount, 'days').format("YYYY-MM-DD")));
        //        massProductionEndDateBSmt = $.trim($('#smtMassProductionEDateBSmt22').val());
        //        /////////////////////////////

        //        //holiday check//
        //        var mass11 = isHoliday(massProductionEndDateBSmt);
        //        massProductionEndDateBSmt = $.trim($('#smtMassProductionEDateBSmt22').val(mass11));
        //        massProductionEndDateBSmt = $.trim($('#smtMassProductionEDateBSmt22').val());
        //        /////////////////
        //    } else {
        //        var bb = batterySmtTotalQuantity / perDayCapacitySum;
        //        massProductionEndDateBSmt = $.trim($('#smtMassProductionEDateBSmt22').val(moment(massProductionStartDateBSmt).add(bb - 1, 'days').format("YYYY-MM-DD")));
        //        massProductionEndDateBSmt = $.trim($('#smtMassProductionEDateBSmt22').val());

        //        ////////holiday count///////
        //        var startDate1 = moment(massProductionStartDateBSmt).format("YYYY-MM-DD");
        //        var endDDate1 = massProductionEndDateBSmt;

        //        // getHolidayCount(startDate, endDDate);
        //        var dCount1 = getHolidayCount(startDate1, endDDate1);

        //        massProductionEndDateBSmt = $.trim($('#smtMassProductionEDateBSmt22').val(moment(massProductionEndDateBSmt).add(dCount1, 'days').format("YYYY-MM-DD")));
        //        massProductionEndDateBSmt = $.trim($('#smtMassProductionEDateBSmt22').val());
        //        /////////////////////////////

        //        //holiday check//
        //        var iqcAssembly12 = isHoliday(massProductionEndDateBSmt);
        //        massProductionEndDateBSmt = $.trim($('#smtMassProductionEDateBSmt22').val(iqcAssembly12));
        //        massProductionEndDateBSmt = $.trim($('#smtMassProductionEDateBSmt22').val());
        //        /////////////////
        //    }
        //}

        //if (smtMassLineInfo == null) {
        //    massProductionEndDateBSmt = $.trim($('#smtMassProductionEDateBSmt22').val(""));
        //}
        //massProductionEndDateBSmt = $.trim($('#smtMassProductionEDateBSmt22').val());

    }//end

    function smtLineInfoFunc() {
        $("#smtAllLineInformation tbody.smAllLineTBody").empty();
        $("#smtAvailableLineInformation tbody.smAvailableLineTBody").empty();

        var batterySmtTotalQuantity = $('#batterySmt_TotalQuantity').val();
        var batterySmtPerDayCapacity = $('#batterySmt_PerDayCapacity').val();

        if (batterySmtTotalQuantity != 0 && batterySmtPerDayCapacity != 0 && +batterySmtTotalQuantity < +batterySmtPerDayCapacity) {
            //alertify.dialog('alert').set({
            //    'title': '   ',
            //    'transition': 'zoom',
            //    'message': "SMT Total Quantity must be greater than SMT PerDayCapacity ",
            //}).show();
            $("#smtTotal").show();
            $('#batterySmt_TotalQuantity').val("");
            $('#batterySmt_PerDayCapacity').val("");

            return false;
        } else {
            $("#smtTotal").hide();
        }
        if (batterySmtPerDayCapacity == 0) {
            //alertify.dialog('alert').set({
            //    'title': '   ',
            //    'transition': 'zoom',
            //    'message': "SMT Per Day Capacity is Blank. Please fill up this.",
            //}).show();
            $("#smtPerDay").show();
            return false;
        } else {
            $("#smtPerDay").hide();
        }
        var smtMassLineInfo = $('#smtMassLineInfo').val();
        var smtMassLineInfoText = $('#smtMassLineInfo').text();

        console.log("smtMassLineInfo:" + smtMassLineInfo);
        console.log("smtMassLineInfoText:" + smtMassLineInfoText);

        var lineArr = [];
        $("#smtMassLineInfo option:selected").each(function () {
            var $this = $(this);
            if ($this.length) {
                var selText = $this.text();
                console.log("selText :" + selText);
                var selValue = $this.val();
                console.log("selValue :" + selValue);
                //lineArr.push(selValue);
                lineArr.push(selText);
            }
        });
        console.log('lonearr : ' + lineArr);
        ////////////
        var perDayCapacitySum = 0;

        for (var xi = 0; xi < lineArr.length; xi++) {

            perDayCapacitySum += +batterySmtPerDayCapacity;
        }

        console.log("perDayCapacitySum :" + perDayCapacitySum);
        ////////////

        var massProductionStartDateBSmt = $.trim($('#massProductionStartDateBSmt').val());
        var massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val());

        if (massProductionEndDateBSmt == "Invalid date") {
            var massProductionEndDateBSmt11 = $.trim($('#massProductionEndDateBSmt').val(""));
        }
        massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val());

        if (batterySmtTotalQuantity != null && perDayCapacitySum != null && smtMassLineInfo != null) {

            var assemblyDivision = (batterySmtTotalQuantity / perDayCapacitySum);

            if (isFloat((batterySmtTotalQuantity / perDayCapacitySum))) {
                var aa = (batterySmtTotalQuantity / perDayCapacitySum);
                var n = (aa + "").split(".")[0];
                var nn = +n;
                massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val(moment(massProductionStartDateBSmt).add(nn, 'days').format("YYYY-MM-DD")));
                massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val());

                ////////holiday count///////
                var startDate = moment(massProductionStartDateBSmt).format("YYYY-MM-DD");
                var endDDate = massProductionEndDateBSmt;

                // getHolidayCount(startDate, endDDate);
                // var dCount = getHolidayCount(startDate, endDDate);

                //  massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val(moment(massProductionEndDateBSmt).add(dCount, 'days').format("YYYY-MM-DD")));
                massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val());
                /////////////////////////////

                //holiday check//
                //var mass11 = isHoliday(massProductionEndDateBSmt);
                //massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val(mass11));
                //massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val());
                /////////////////
            } else {
                var bb = batterySmtTotalQuantity / perDayCapacitySum;
                massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val(moment(massProductionStartDateBSmt).add(bb - 1, 'days').format("YYYY-MM-DD")));
                massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val());

                ////////holiday count///////
                var startDate1 = moment(massProductionStartDateBSmt).format("YYYY-MM-DD");
                var endDDate1 = massProductionEndDateBSmt;

                // getHolidayCount(startDate, endDDate);
                //  var dCount1 = getHolidayCount(startDate1, endDDate1);

                // massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val(moment(massProductionEndDateBSmt).add(dCount1, 'days').format("YYYY-MM-DD")));
                massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val());
                /////////////////////////////

                //holiday check//
                //var iqcAssembly12 = isHoliday(massProductionEndDateBSmt);
                //massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val(iqcAssembly12));
                //massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val());
                /////////////////
            }
        }

        if (smtMassLineInfo == null) {
            massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val(""));
        }
        massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val());

        var proSelectId = document.getElementById('dropForProject');
        var projectId = proSelectId.options[proSelectId.selectedIndex].value;
        var projectName = proSelectId.options[proSelectId.selectedIndex].text;

        if (massProductionStartDateBSmt != null && massProductionEndDateBSmt != null) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetAvailableProductionLineForBSmt", "Production")',
                data: "{ massProductionStartDateBSmt: '" + massProductionStartDateBSmt
                    + "', massProductionEndDateBSmt: '" + massProductionEndDateBSmt
                    + "', projectId: '" + projectId
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);
                    var items = $.parseJSON(dataList);
                    var isdats;
                    if (smtMassLineInfo != null) {

                        $.each(items, function (i, item) {
                            console.log("item  :" + item);

                            var body = '<tr>';
                            body += '<td>' + moment(item.WorkingDate).format("YYYY-MM-DD") + '</td>';
                            body += '<td>' + item.LineNumber + '</td>';
                            body += '<td>' + item.LineCapacity + '</td>';
                            body += '<td>' + item.ProjectType + '</td>';
                            body += '<td>' + item.PerDayCapacity + '</td>';
                            body += '<td>' + item.LineAvailableCapacity + '</p>' + '</td>';
                            body += '</tr>';

                            $("#smtAllLineInformation tbody.smAllLineTBody").append(body);

                            /////datediff/////
                            console.log(date_diff_indays(massProductionStartDateBSmt, massProductionEndDateBSmt));
                            console.log(date_diff_indays(massProductionEndDateBSmt, massProductionStartDateBSmt));
                            var datediff = date_diff_indays(massProductionStartDateBSmt, massProductionEndDateBSmt);

                            var batterySmt_PerDayCapacity = $('#batterySmt_PerDayCapacity').val();
                            for (var ii = 0; ii <= datediff; ii++) {
                                isdats = moment(massProductionStartDateBSmt).add(ii, 'days').format('YYYY-MM-DD');
                                var wrkDate = moment(item.WorkingDate).format("YYYY-MM-DD");

                                var lineArrForAvailable = [];
                                $("#smtMassLineInfo option:selected").each(function () {
                                    var $this = $(this);
                                    if ($this.length) {
                                        var selText = $this.text();
                                        console.log("selText :" + selText);

                                        lineArrForAvailable.push(selText);
                                    }
                                });
                                console.log('lineArrForAvailable : ' + lineArrForAvailable);

                                var allLine = lineArrForAvailable;

                                $.each(allLine, function (i1, iitem) {
                                    if (isdats == wrkDate && batterySmt_PerDayCapacity > item.LineAvailableCapacity && iitem == item.LineNumber) {

                                        var body2 = '<tr>';
                                        body2 += '<td>' + moment(item.WorkingDate).format("YYYY-MM-DD") + '</td>';
                                        body2 += '<td>' + iitem + '</td>';
                                        //body2 += '<td>' + item.LineCapacity + '</td>';
                                        //body2 += '<td>' + item.PerDayCapacity + '</td>';
                                        body2 += '<td style="color:red">' + item.LineAvailableCapacity + '</td>';
                                        body2 += '<td style="color:red">' + "SMT Mass Production PerDayCapacity is greater than Available Line Capacity. So, you are unable to continue this plan. If you want, you can proceed as your own responsibility." + '</p>' + '</td>';
                                        body2 += '</tr>';

                                        $("#smtAvailableLineInformation tbody.smAvailableLineTBody").append(body2);

                                        ////////
                                        //if (item.PerDayCapacity > item.LineAvailableCapacity) {

                                        //    datediff++;
                                        //    massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val(moment(massProductionEndDateBSmt).add(1, 'days').format("YYYY-MM-DD")));
                                        //    massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val());
                                        //    /////////////////////////////

                                        //    //holiday check//
                                        //    var iqcAssembly122 = isHoliday(massProductionEndDateBSmt);
                                        //    massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val(iqcAssembly122));
                                        //    massProductionEndDateBSmt = $.trim($('#massProductionEndDateBSmt').val());
                                        //    /////////////////
                                        //}
                                        ///////
                                    }
                                });
                            }
                            /////datediff/////
                        });
                    }


                }
            });
        }
    }///end of smtLineInfoFunc()

    function housingLineInfoFunc() {
        $("#housingAllLineInformation tbody.housingAllLineTBody").empty();
        $("#housingAvailableLineInformation tbody.housingAvailableLineTBody").empty();
        var batteryHousingTotalQuantity = $('#batteryHousing_TotalQuantity').val();
        var batteryHousingPerDayCapacity = $('#batteryHousing_PerDayCapacity').val();

        if (batteryHousingTotalQuantity != 0 && batteryHousingPerDayCapacity != 0 && +batteryHousingTotalQuantity < +batteryHousingPerDayCapacity) {
            //alertify.dialog('alert').set({
            //    'title': '   ',
            //    'transition': 'zoom',
            //    'message': "Housing Total Quantity must be greater than Housing PerDayCapacity ",
            //}).show();
            $('#housingTotal').show();
            $('#batteryHousing_TotalQuantity').val("");
            $('#batteryHousing_PerDayCapacity').val("");

            return false;
        } else {
            $('#housingTotal').hide();
        }
        if (batteryHousingPerDayCapacity == 0) {
            //alertify.dialog('alert').set({
            //    'title': '   ',
            //    'transition': 'zoom',
            //    'message': "Housing PerDayCapacity is Blank. Please fill up this.",
            //}).show();
            $('#housingPerDay').show();
            return false;
        } else {
            $('#housingPerDay').hide();
        }
        var housingMassLineInfo = $('#housingMassLineInfo').val();
        var housingMassLineInfoText = $('#housingMassLineInfo').text();

        console.log("housingMassLineInfo:" + housingMassLineInfo);
        console.log("housingMassLineInfoText:" + housingMassLineInfoText);

        var lineArr = [];
        $("#housingMassLineInfo option:selected").each(function () {
            var $this = $(this);
            if ($this.length) {
                var selText = $this.text();
                console.log("selText :" + selText);
                var selValue = $this.val();
                console.log("selValue :" + selValue);
                //lineArr.push(selValue);
                lineArr.push(selText);
            }
        });
        console.log('lonearr : ' + lineArr);
        ////////////
        var perDayCapacitySum = 0;

        for (var xi = 0; xi < lineArr.length; xi++) {

            perDayCapacitySum += +batteryHousingPerDayCapacity;
        }

        console.log("perDayCapacitySum :" + perDayCapacitySum);
        ////////////

        var housingMassProStartDateHousing = $.trim($('#housingMassProStartDateHousing').val());
        var housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val());

        if (housingMassProEndtDateHousing == "Invalid date") {
            var housingMassProEndtDateHousing11 = $.trim($('#housingMassProEndtDateHousing').val(""));
        }
        housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val());

        if (batteryHousingTotalQuantity != null && perDayCapacitySum != null && housingMassLineInfo != null) {

            var assemblyDivision = (batteryHousingTotalQuantity / perDayCapacitySum);

            if (isFloat((batteryHousingTotalQuantity / perDayCapacitySum))) {
                var aa = (batteryHousingTotalQuantity / perDayCapacitySum);
                var n = (aa + "").split(".")[0];
                var nn = +n;
                housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val(moment(housingMassProStartDateHousing).add(nn, 'days').format("YYYY-MM-DD")));
                housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val());

                ////////holiday count///////
                var startDate = moment(housingMassProStartDateHousing).format("YYYY-MM-DD");
                var endDDate = housingMassProEndtDateHousing;

                // getHolidayCount(startDate, endDDate);
                var dCount = getHolidayCount(startDate, endDDate);

                housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val(moment(housingMassProEndtDateHousing).add(dCount, 'days').format("YYYY-MM-DD")));
                housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val());
                /////////////////////////////

                //holiday check//
                var mass11 = isHoliday(housingMassProEndtDateHousing);
                housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val(mass11));
                housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val());
                /////////////////
            } else {
                var bb = batteryHousingTotalQuantity / perDayCapacitySum;
                housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val(moment(housingMassProStartDateHousing).add(bb - 1, 'days').format("YYYY-MM-DD")));
                housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val());


                ////////holiday count///////
                var startDate1 = moment(housingMassProStartDateHousing).format("YYYY-MM-DD");
                var endDDate1 = housingMassProEndtDateHousing;

                // getHolidayCount(startDate, endDDate);
                var dCount1 = getHolidayCount(startDate1, endDDate1);

                housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val(moment(housingMassProEndtDateHousing).add(dCount1, 'days').format("YYYY-MM-DD")));
                housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val());
                /////////////////////////////

                //holiday check//
                var iqcAssembly12 = isHoliday(housingMassProEndtDateHousing);
                housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val(iqcAssembly12));
                housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val());
                /////////////////
            }
        }

        if (housingMassLineInfo == null) {
            housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val(""));
        }
        housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val());


        if (housingMassProStartDateHousing != null && housingMassProEndtDateHousing != null) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetAvailableProductionLineForBHousing", "Production")',
                data: "{ housingMassProStartDateHousing: '" + housingMassProStartDateHousing
                    + "', housingMassProEndtDateHousing: '" + housingMassProEndtDateHousing
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);
                    var items = $.parseJSON(dataList);
                    var isdats;
                    if (housingMassLineInfo != null) {

                        $.each(items, function (i, item) {
                            console.log("item  :" + item);

                            var body = '<tr>';
                            body += '<td>' + moment(item.WorkingDate).format("YYYY-MM-DD") + '</td>';
                            body += '<td>' + item.LineNumber + '</td>';
                            body += '<td>' + item.LineCapacity + '</td>';
                            body += '<td>' + item.ProjectType + '</td>';
                            body += '<td>' + item.PerDayCapacity + '</td>';
                            body += '<td>' + item.LineAvailableCapacity + '</p>' + '</td>';
                            body += '</tr>';

                            $("#housingAllLineInformation tbody.housingAllLineTBody").append(body);

                            /////datediff/////

                            var datediff = date_diff_indays(housingMassProStartDateHousing, housingMassProEndtDateHousing);
                            var batteryHousing_PerDayCapacity = $('#batteryHousing_PerDayCapacity').val();

                            for (var ii = 0; ii <= datediff; ii++) {
                                isdats = moment(housingMassProStartDateHousing).add(ii, 'days').format('YYYY-MM-DD');
                                var wrkDate = moment(item.WorkingDate).format("YYYY-MM-DD");
                                var lineArrForAvailable = [];
                                $("#housingMassLineInfo option:selected").each(function () {
                                    var $this = $(this);
                                    if ($this.length) {
                                        var selText = $this.text();
                                        console.log("selText :" + selText);

                                        lineArrForAvailable.push(selText);
                                    }
                                });
                                console.log('lineArrForAvailable : ' + lineArrForAvailable);

                                var allLine = lineArrForAvailable;

                                $.each(allLine, function (i1, iitem) {
                                    if (isdats == wrkDate && batteryHousing_PerDayCapacity > item.LineAvailableCapacity && iitem == item.LineNumber) {
                                        var body2 = '<tr>';
                                        body2 += '<td>' + moment(item.WorkingDate).format("YYYY-MM-DD") + '</td>';
                                        body2 += '<td>' + iitem + '</td>';
                                        body2 += '<td style="color:red">' + item.LineAvailableCapacity + '</td>';
                                        body2 += '<td style="color:red">' + "Housing Mass Production PerDayCapacity is greater than Available Line Capacity. So, you are unable to continue this plan. If you want, you can proceed as your own responsibility." + '</p>' + '</td>';
                                        body2 += '</tr>';

                                        $("#housingAvailableLineInformation tbody.housingAvailableLineTBody").append(body2);


                                        ////////
                                        //if (item.PerDayCapacity > item.LineAvailableCapacity) {
                                        //    //var one1 = iitem.PerDayCapacity - iitem.LineAvailableCapacity;
                                        //    //var two2 = one1;
                                        //    datediff++;
                                        //    housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val(moment(housingMassProEndtDateHousing).add(1, 'days').format("YYYY-MM-DD")));
                                        //    housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val());
                                        //    /////////////////////////////

                                        //    //holiday check//
                                        //    var iqcAssembly122 = isHoliday(housingMassProEndtDateHousing);
                                        //    housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val(iqcAssembly122));
                                        //    housingMassProEndtDateHousing = $.trim($('#housingMassProEndtDateHousing').val());
                                        //    /////////////////
                                        //}
                                        ///////
                                    }
                                });
                            }
                            /////datediff/////
                        });
                    }
                }
            });
        }
    }///end of housingLineInfoFunc()

    function batteryLineInfoFunc() {
        $("#batteryAllLineInformation tbody.batteryAllLineTBody").empty();
        $("#batteryAvailableLineInformation tbody.batteryAvailableLineTBody").empty();
        var batteryTotalQuantity = $('#battery_TotalQuantity').val();
        var batteryPerDayCapacity = $('#battery_PerDayCapacity').val();

        if (batteryTotalQuantity != 0 && batteryPerDayCapacity != 0 && +batteryTotalQuantity < +batteryPerDayCapacity) {
            //alertify.dialog('alert').set({
            //    'title': '   ',
            //    'transition': 'zoom',
            //    'message': "Battery Total Quantity must be greater than Battery PerDayCapacity ",
            //}).show();batteryTotal
            $('#batteryTotal').show();
            $('#battery_TotalQuantity').val("");
            $('#battery_PerDayCapacity').val("");

            return false;
        } else {
            $('#batteryTotal').hide();
        }

        if (batteryPerDayCapacity == 0) {
            //alertify.dialog('alert').set({
            //    'title': '   ',
            //    'transition': 'zoom',
            //    'message': "Battery Per Day Capacity is Blank. Please fill up this.",
            //}).show();
            $('#batteryPerDay').show();
            return false;
        }
        else {
            $('#batteryPerDay').hide();
        }

        var batteryMassLineInfo = $('#batteryMassLineInfo').val();
        var batteryMassLineInfoText = $('#batteryMassLineInfo').text();

        console.log("batteryMassLineInfo:" + batteryMassLineInfo);
        console.log("batteryMassLineInfoText:" + batteryMassLineInfoText);

        var lineArr = [];
        $("#batteryMassLineInfo option:selected").each(function () {
            var $this = $(this);
            if ($this.length) {
                var selText = $this.text();
                console.log("selText :" + selText);
                var selValue = $this.val();
                console.log("selValue :" + selValue);
                ///lineArr.push(selValue);
                lineArr.push(selText);
            }
        });
        console.log('lonearr : ' + lineArr);
        ////////////
        var perDayCapacitySum = 0;

        for (var xi = 0; xi < lineArr.length; xi++) {

            perDayCapacitySum += +batteryPerDayCapacity;
        }

        console.log("perDayCapacitySum :" + perDayCapacitySum);
        ////////////

        var batteryMassProductionStartDate = $.trim($('#batteryMassProductionStartDate').val());
        var batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val());

        if (batteryMassProductionEndDate == "Invalid date") {
            var batteryMassProductionEndDate11 = $.trim($('#batteryMassProductionEndDate').val(""));
        }
        batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val());

        if (batteryTotalQuantity != null && perDayCapacitySum != null && batteryMassLineInfo != null) {

            var assemblyDivision = (batteryTotalQuantity / perDayCapacitySum);

            if (isFloat((batteryTotalQuantity / perDayCapacitySum))) {
                var aa = (batteryTotalQuantity / perDayCapacitySum);
                var n = (aa + "").split(".")[0];
                var nn = +n;
                batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val(moment(batteryMassProductionStartDate).add(nn, 'days').format("YYYY-MM-DD")));
                batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val());

                ////////holiday count///////
                var startDate = moment(batteryMassProductionStartDate).format("YYYY-MM-DD");
                var endDDate = batteryMassProductionEndDate;

                // getHolidayCount(startDate, endDDate);
                var dCount = getHolidayCount(startDate, endDDate);

                batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val(moment(batteryMassProductionEndDate).add(dCount, 'days').format("YYYY-MM-DD")));
                batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val());
                /////////////////////////////

                //holiday check//
                var mass11 = isHoliday(batteryMassProductionEndDate);
                batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val(mass11));
                batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val());
                /////////////////
            } else {
                var bb = batteryTotalQuantity / perDayCapacitySum;
                batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val(moment(batteryMassProductionStartDate).add(bb - 1, 'days').format("YYYY-MM-DD")));
                batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val());


                ////////holiday count///////
                var startDate1 = moment(batteryMassProductionStartDate).format("YYYY-MM-DD");
                var endDDate1 = batteryMassProductionEndDate;

                // getHolidayCount(startDate, endDDate);
                var dCount1 = getHolidayCount(startDate1, endDDate1);

                batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val(moment(batteryMassProductionEndDate).add(dCount1, 'days').format("YYYY-MM-DD")));
                batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val());
                /////////////////////////////

                //holiday check//
                var iqcAssembly12 = isHoliday(batteryMassProductionEndDate);
                batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val(iqcAssembly12));
                batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val());
                /////////////////
            }
        }

        if (batteryMassLineInfo == null) {
            batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val(""));
        }
        batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val());

        if (batteryMassProductionStartDate != null && batteryMassProductionEndDate != null) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetAvailableProductionLineForBattery", "Production")',
                data: "{ batteryMassProductionStartDate: '" + batteryMassProductionStartDate
                    + "', batteryMassProductionEndDate: '" + batteryMassProductionEndDate
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);
                    var items = $.parseJSON(dataList);
                    var isdats;
                    if (batteryMassLineInfo != null) {

                        $.each(items, function (i, item) {
                            console.log("item  :" + item);

                            var body = '<tr>';
                            body += '<td>' + moment(item.WorkingDate).format("YYYY-MM-DD") + '</td>';
                            body += '<td>' + item.LineNumber + '</td>';
                            body += '<td>' + item.LineCapacity + '</td>';
                            body += '<td>' + item.ProjectType + '</td>';
                            body += '<td>' + item.PerDayCapacity + '</td>';
                            body += '<td>' + item.LineAvailableCapacity + '</p>' + '</td>';
                            body += '</tr>';

                            $("#batteryAllLineInformation tbody.batteryAllLineTBody").append(body);

                            /////datediff/////

                            var datediff = date_diff_indays(batteryMassProductionStartDate, batteryMassProductionEndDate);
                            var batteryPerDayCapacity = $('#battery_PerDayCapacity').val();

                            for (var ii = 0; ii <= datediff; ii++) {
                                isdats = moment(batteryMassProductionStartDate).add(ii, 'days').format('YYYY-MM-DD');
                                var wrkDate = moment(item.WorkingDate).format("YYYY-MM-DD");
                                var lineArrForAvailable = [];
                                $("#batteryMassLineInfo option:selected").each(function () {
                                    var $this = $(this);
                                    if ($this.length) {
                                        var selText = $this.text();
                                        console.log("selText :" + selText);

                                        lineArrForAvailable.push(selText);
                                    }
                                });
                                console.log('lineArrForAvailable : ' + lineArrForAvailable);

                                var allLine = lineArrForAvailable;

                                $.each(allLine, function (i1, iitem) {

                                    if (isdats == wrkDate && batteryPerDayCapacity > item.LineAvailableCapacity && iitem == item.LineNumber) {
                                        var body2 = '<tr>';
                                        body2 += '<td>' + moment(item.WorkingDate).format("YYYY-MM-DD") + '</td>';
                                        body2 += '<td>' + iitem + '</td>';
                                        body2 += '<td style="color:red">' + item.LineAvailableCapacity + '</td>';
                                        body2 += '<td style="color:red">' + "Battery Mass Production PerDayCapacity is greater than Available Line Capacity. So, you are unable to continue this plan. If you want, you can proceed as your own responsibility." + '</p>' + '</td>';
                                        body2 += '</tr>';

                                        $("#batteryAvailableLineInformation tbody.batteryAvailableLineTBody").append(body2);

                                        //if (item.PerDayCapacity > item.LineAvailableCapacity) {
                                        //    datediff++;
                                        //    batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val(moment(batteryMassProductionEndDate).add(1, 'days').format("YYYY-MM-DD")));
                                        //    batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val());
                                        //    /////////////////////////////

                                        //    //holiday check//
                                        //    var iqcAssembly122 = isHoliday(batteryMassProductionEndDate);
                                        //    batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val(iqcAssembly122));
                                        //    batteryMassProductionEndDate = $.trim($('#batteryMassProductionEndDate').val());
                                        //    /////////////////
                                        //}
                                    }
                                });
                            }
                            /////datediff/////
                        });
                    }


                }
            });
        }
    }///end of batteryLineInfoFunc()
    function packingLineInfoFunc() {
        $("#packingAllLineInformation tbody.packingAllLineTBody").empty();
        $("#packingAvailableLineInformation tbody.packingAvailableLineTBody").empty();
        var batteryPackingTotalQuantity = $('#batteryPacking_TotalQuantity').val();
        var batteryPackingPerDayCapacity = $('#batteryPacking_PerDayCapacity').val();

        if (batteryPackingTotalQuantity != 0 && batteryPackingPerDayCapacity != 0 && +batteryPackingTotalQuantity < +batteryPackingPerDayCapacity) {
            //alertify.dialog('alert').set({
            //    'title': '   ',
            //    'transition': 'zoom',
            //    'message': "Packing Total Quantity must be greater than Battery Packing PerDayCapacity ",
            //}).show();
            $('#packingTotal').show();
            $('#batteryPacking_TotalQuantity').val("");
            $('#batteryPacking_PerDayCapacity').val("");

            return false;
        } else {
            $('#packingTotal').hide();
        }
        if (batteryPackingPerDayCapacity == 0) {
            //alertify.dialog('alert').set({
            //    'title': '   ',
            //    'transition': 'zoom',
            //    'message': "Packing PerDayCapacity is Blank. Please fill up this.",
            //}).show();
            $('#packingPerDay').show();
            return false;
        } else {
            $('#packingPerDay').hide();
        }
        var packingMassLineInfo = $('#packingMassLineInfo').val();
        var packingMassLineInfoText = $('#packingMassLineInfo').text();

        console.log("packingMassLineInfo:" + packingMassLineInfo);
        console.log("packingMassLineInfoText:" + packingMassLineInfoText);

        var lineArr = [];
        $("#packingMassLineInfo option:selected").each(function () {
            var $this = $(this);
            if ($this.length) {
                var selText = $this.text();
                console.log("selText :" + selText);
                var selValue = $this.val();
                console.log("selValue :" + selValue);
                lineArr.push(selText);

            }
        });
        console.log('lonearr : ' + lineArr);
        ////////////
        var perDayCapacitySum = 0;

        for (var xi = 0; xi < lineArr.length; xi++) {

            perDayCapacitySum += +batteryPackingPerDayCapacity;
        }

        console.log("perDayCapacitySum :" + perDayCapacitySum);
        ////////////

        var packingMassProductionStartDateBAssembly = $.trim($('#packingMassProductionStartDateBAssembly').val());
        var packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val());

        if (packingMassProductionEndDateBAssembly == "Invalid date") {
            var packingMassProductionEndDateBAssembly11 = $.trim($('#packingMassProductionEndDateBAssembly').val(""));
        }
        packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val());

        if (batteryPackingTotalQuantity != null && perDayCapacitySum != null && packingMassLineInfo != null) {

            var assemblyDivision = (batteryPackingTotalQuantity / perDayCapacitySum);

            if (isFloat((batteryPackingTotalQuantity / perDayCapacitySum))) {
                var aa = (batteryPackingTotalQuantity / perDayCapacitySum);
                var n = (aa + "").split(".")[0];
                var nn = +n;
                packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val(moment(packingMassProductionStartDateBAssembly).add(nn, 'days').format("YYYY-MM-DD")));
                packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val());

                ////////holiday count///////
                var startDate = moment(packingMassProductionStartDateBAssembly).format("YYYY-MM-DD");
                var endDDate = packingMassProductionEndDateBAssembly;

                // getHolidayCount(startDate, endDDate);
                var dCount = getHolidayCount(startDate, endDDate);

                packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val(moment(packingMassProductionEndDateBAssembly).add(dCount, 'days').format("YYYY-MM-DD")));
                packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val());
                /////////////////////////////

                //holiday check//
                var mass11 = isHoliday(packingMassProductionEndDateBAssembly);
                packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val(mass11));
                packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val());
                /////////////////
            } else {
                var bb = batteryPackingTotalQuantity / perDayCapacitySum;
                packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val(moment(packingMassProductionStartDateBAssembly).add(bb - 1, 'days').format("YYYY-MM-DD")));
                packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val());


                ////////holiday count///////
                var startDate1 = moment(packingMassProductionStartDateBAssembly).format("YYYY-MM-DD");
                var endDDate1 = packingMassProductionEndDateBAssembly;

                // getHolidayCount(startDate, endDDate);
                var dCount1 = getHolidayCount(startDate1, endDDate1);

                packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val(moment(packingMassProductionEndDateBAssembly).add(dCount1, 'days').format("YYYY-MM-DD")));
                packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val());
                /////////////////////////////

                //holiday check//
                var iqcAssembly12 = isHoliday(packingMassProductionEndDateBAssembly);
                packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val(iqcAssembly12));
                packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val());
                /////////////////
            }
        }

        if (packingMassLineInfo == null) {
            packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val(""));
        }
        packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val());


        var proSelectId = document.getElementById('dropForProject');
        var projectId = proSelectId.options[proSelectId.selectedIndex].value;
        var projectName = proSelectId.options[proSelectId.selectedIndex].text;

        if (packingMassProductionStartDateBAssembly != null && packingMassProductionEndDateBAssembly != null) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetAvailableProductionLineForBatteryPacking", "Production")',
                data: "{ packingMassProductionStartDateBAssembly: '" + packingMassProductionStartDateBAssembly
                    + "', packingMassProductionEndDateBAssembly: '" + packingMassProductionEndDateBAssembly
                    + "', projectId: '" + projectId
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);
                    var items = $.parseJSON(dataList);
                    var isdats;
                    if (packingMassLineInfo != null) {

                        $.each(items, function (i, item) {
                            console.log("item  :" + item);

                            var body = '<tr>';
                            body += '<td>' + moment(item.WorkingDate).format("YYYY-MM-DD") + '</td>';
                            body += '<td>' + item.LineNumber + '</td>';
                            body += '<td>' + item.LineCapacity + '</td>';
                            body += '<td>' + item.ProjectType + '</td>';
                            body += '<td>' + item.PerDayCapacity + '</td>';
                            body += '<td>' + item.LineAvailableCapacity + '</p>' + '</td>';
                            body += '</tr>';

                            $("#packingAllLineInformation tbody.packingAllLineTBody").append(body);

                            /////datediff/////

                            var datediff = date_diff_indays(packingMassProductionStartDateBAssembly, packingMassProductionEndDateBAssembly);

                            var batteryPackingPerDayCapacity = $('#batteryPacking_PerDayCapacity').val();
                            for (var ii = 0; ii <= datediff; ii++) {
                                isdats = moment(packingMassProductionStartDateBAssembly).add(ii, 'days').format('YYYY-MM-DD');
                                var wrkDate = moment(item.WorkingDate).format("YYYY-MM-DD");
                                var lineArrForAvailable = [];
                                $("#packingMassLineInfo option:selected").each(function () {
                                    var $this = $(this);
                                    if ($this.length) {
                                        var selText = $this.text();
                                        console.log("selText :" + selText);

                                        lineArrForAvailable.push(selText);
                                    }
                                });
                                console.log('lineArrForAvailable : ' + lineArrForAvailable);

                                var allLine = lineArrForAvailable;
                                //&& (isdats == wrkDate)
                                $.each(allLine, function (i1, iitem) {
                                    if (isdats == wrkDate && batteryPackingPerDayCapacity > item.LineAvailableCapacity && iitem == item.LineNumber) {
                                        var body2 = '<tr>';
                                        body2 += '<td>' + moment(item.WorkingDate).format("YYYY-MM-DD") + '</td>';
                                        body2 += '<td>' + iitem + '</td>';
                                        //body2 += '<td>' + item.LineCapacity + '</td>';
                                        //body2 += '<td>' + item.PerDayCapacity + '</td>';
                                        body2 += '<td style="color:red">' + item.LineAvailableCapacity + '</td>';
                                        body2 += '<td style="color:red">' + "Packing PerDayCapacity is greater than Available Line Capacity. So, you are unable to continue this plan. If you want, you can proceed as your own responsibility." + '</p>' + '</td>';
                                        body2 += '</tr>';

                                        $("#packingAvailableLineInformation tbody.packingAvailableLineTBody").append(body2);
                                        ////////
                                        //if (item.PerDayCapacity > item.LineAvailableCapacity) {

                                        //    datediff++;
                                        //    packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val(moment(packingMassProductionEndDateBAssembly).add(1, 'days').format("YYYY-MM-DD")));
                                        //    packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val());
                                        //    /////////////////////////////

                                        //    //holiday check//
                                        //    var iqcAssembly122 = isHoliday(packingMassProductionEndDateBAssembly);
                                        //    packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val(iqcAssembly122));
                                        //    packingMassProductionEndDateBAssembly = $.trim($('#packingMassProductionEndDateBAssembly').val());
                                        //    /////////////////
                                        //}
                                    }
                                });
                            }
                            /////datediff/////

                        });


                    }


                }
            });
        }
    }///end of packingLineInfoFunc()
    var date_diff_indays = function (date1, date2) {
        var dt1 = new Date(date1);
        var dt2 = new Date(date2);
        return Math.floor((Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) - Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) / (1000 * 60 * 60 * 24));
    };
    //  console.log(date_diff_indays('04/02/2014', '11/04/2014'));
    //pp

    function assebmlyLineInfoFunc() {
        $("#assemblyAllLineInformation tbody.assemblyAllLineTBody").empty();
        $("#assemblyAvailableLineInformation tbody.assemblyAvailableLineTBody").empty();

        var batteryAssemblyTotalQuantity = $('#batteryAssembly_TotalQuantity').val();
        var batteryAssemblyPerDayCapacity = $('#batteryAssembly_PerDayCapacity').val();

        if (batteryAssemblyPerDayCapacity != 0 && batteryAssemblyTotalQuantity != 0 && +batteryAssemblyTotalQuantity < +batteryAssemblyPerDayCapacity) {
            //alertify.dialog('alert').set({
            //    'title': '   ',
            //    'transition': 'zoom',
            //    'message': "Assembly Total Quantity must be greater than Assembly PerDayCapacity ",
            //}).show();
            $('#assemblyTotal').show();
            $('#batteryAssembly_TotalQuantity').val("");
            $('#batteryAssembly_PerDayCapacity').val("");

            return false;
        } else {
            $('#assemblyTotal').hide();
        }

        if (batteryAssemblyPerDayCapacity == 0) {
            //alertify.dialog('alert').set({
            //    'title': '   ',
            //    'transition': 'zoom',
            //    'message': "Assembly PerDayCapacity is Blank. Please fill up this.",
            //}).show();
            $('#assemblyPerDay').show();
            return false;
        } else {
            $('#assemblyPerDay').hide();
        }

        var assemblyMassLineInfo = $('#assemblyMassLineInfo').val();
        var assemblyMassLineInfoText = $('#assemblyMassLineInfo').text();

        console.log("assemblyMassLineInfo:" + assemblyMassLineInfo);
        console.log("assemblyMassLineInfoText:" + assemblyMassLineInfoText);

        var lineArr = [];
        $("#assemblyMassLineInfo option:selected").each(function () {
            var $this = $(this);
            if ($this.length) {
                var selText = $this.text();
                console.log("selText :" + selText);
                var selValue = $this.val();
                console.log("selValue :" + selValue);
                lineArr.push(selValue);
            }
        });
        console.log('lonearr : ' + lineArr);
        ////////////
        var perDayCapacitySum = 0;

        for (var xi = 0; xi < lineArr.length; xi++) {

            perDayCapacitySum += +batteryAssemblyPerDayCapacity;
        }

        console.log("perDayCapacitySum :" + perDayCapacitySum);
        ////////////

        var assembStartDateBAssembly = $.trim($('#assembStartDateBAssembly').val());
        var assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());

        if (assembEndDateBAssembly == "Invalid date") {
            var assembEndDateBAssembly11 = $.trim($('#assembEndDateBAssembly').val(""));
        }
        assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());

        if (batteryAssemblyTotalQuantity != null && perDayCapacitySum != null && assemblyMassLineInfo != null) {

            var assemblyDivision = (batteryAssemblyTotalQuantity / perDayCapacitySum);

            if (isFloat((batteryAssemblyTotalQuantity / perDayCapacitySum))) {
                var aa = (batteryAssemblyTotalQuantity / perDayCapacitySum);
                var n = (aa + "").split(".")[0];
                var nn = +n;
                assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(moment(assembStartDateBAssembly).add(nn, 'days').format("YYYY-MM-DD")));
                assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());

                ////////holiday count///////
                var startDate = moment(assembStartDateBAssembly).format("YYYY-MM-DD");
                var endDDate = assembEndDateBAssembly;

                // getHolidayCount(startDate, endDDate);
                var dCount = getHolidayCount(startDate, endDDate);

                assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(moment(assembEndDateBAssembly).add(dCount, 'days').format("YYYY-MM-DD")));
                assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
                /////////////////////////////

                //holiday check//
                var mass11 = isHoliday(assembEndDateBAssembly);
                assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(mass11));
                assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
                /////////////////
            }
            else {
                var bb = batteryAssemblyTotalQuantity / perDayCapacitySum;
                assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(moment(assembStartDateBAssembly).add(bb - 1, 'days').format("YYYY-MM-DD")));
                assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());

                ////////holiday count///////
                var startDate1 = moment(assembStartDateBAssembly).format("YYYY-MM-DD");
                var endDDate1 = assembEndDateBAssembly;

                // getHolidayCount(startDate, endDDate);
                var dCount1 = getHolidayCount(startDate1, endDDate1);

                assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(moment(assembEndDateBAssembly).add(dCount1, 'days').format("YYYY-MM-DD")));
                assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
                /////////////////////////////
                //holiday check//
                var iqcAssembly12 = isHoliday(assembEndDateBAssembly);
                assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(iqcAssembly12));
                assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
                /////////////////
            }
        }

        if (assemblyMassLineInfo == null) {
            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(""));
        }
        assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
        var proSelectId = document.getElementById('dropForProject');
        var projectId = proSelectId.options[proSelectId.selectedIndex].value;
        var projectName = proSelectId.options[proSelectId.selectedIndex].text;

        if (assembStartDateBAssembly != null && assembEndDateBAssembly != null) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetAvailableProductionLineForBatteryAssembly", "Production")',
                data: "{ assembStartDateBAssembly: '" + assembStartDateBAssembly
                    + "', assembEndDateBAssembly: '" + assembEndDateBAssembly
                    + "', projectId: '" + projectId
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);
                    var items = $.parseJSON(dataList);
                    var isdats;
                    if (assemblyMassLineInfo != null) {

                        $.each(items, function (i, item) {
                            console.log("item  :" + item);

                            var body = '<tr>';
                            body += '<td>' + moment(item.WorkingDate).format("YYYY-MM-DD") + '</td>';
                            body += '<td>' + item.LineNumber + '</td>';
                            body += '<td>' + item.LineCapacity + '</td>';
                            body += '<td>' + item.PerDayCapacity + '</td>';
                            body += '<td>' + item.LineAvailableCapacity + '</td>';
                            //body += '<td>' + item.Production + '</p>' + '</td>';
                            body += '</tr>';

                            $("#assemblyAllLineInformation tbody.assemblyAllLineTBody").append(body);

                            /////datediff/////
                            console.log(date_diff_indays(assembStartDateBAssembly, assembEndDateBAssembly));
                            console.log(date_diff_indays(assembEndDateBAssembly, assembStartDateBAssembly));
                            var datediff = date_diff_indays(assembStartDateBAssembly, assembEndDateBAssembly);

                            var batteryAssemblyPerDayCapacity = $('#batteryAssembly_PerDayCapacity').val();
                            for (var ii = 0; ii <= datediff; ii++) {
                                isdats = moment(assembStartDateBAssembly).add(ii, 'days').format('YYYY-MM-DD');
                                var wrkDate = moment(item.WorkingDate).format("YYYY-MM-DD");
                                var lineArrForAvailable = [];
                                $("#assemblyMassLineInfo option:selected").each(function () {
                                    var $this = $(this);
                                    if ($this.length) {
                                        var selText = $this.text();
                                        console.log("selText :" + selText);

                                        lineArrForAvailable.push(selText);
                                    }
                                });
                                console.log('lineArrForAvailable : ' + lineArrForAvailable);

                                var allLine = lineArrForAvailable;
                                // var perLine = allLine.trim();
                                $.each(allLine, function (i1, iitem) {
                                    if (isdats == wrkDate && batteryAssemblyPerDayCapacity > item.LineAvailableCapacity && iitem == item.LineNumber) {

                                        var body2 = '<tr>';
                                        body2 += '<td>' + moment(item.WorkingDate).format("YYYY-MM-DD") + '</td>';
                                        body2 += '<td>' + iitem + '</td>';
                                        //body2 += '<td>' + item.LineCapacity + '</td>';
                                        //body2 += '<td>' + item.PerDayCapacity + '</td>';
                                        body2 += '<td>' + item.LineAvailableCapacity + '</td>';
                                        //body2 += '<td>' + item.Production + '</td>';
                                        body2 += '<td style="color:red">' + "Assembly PerDayCapacity is greater than Available Line Capacity. So, you are unable to continue this plan. If you want, you can proceed as your own responsibility." + '</p>' + '</td>';
                                        body2 += '</tr>';

                                        $("#assemblyAvailableLineInformation tbody.assemblyAvailableLineTBody").append(body2);


                                        ////////
                                        //if (item.PerDayCapacity > item.LineAvailableCapacity) {
                                        //    datediff ++;
                                        //    assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(moment(assembEndDateBAssembly).add(1, 'days').format("YYYY-MM-DD")));
                                        //    assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
                                        //    ///////////////////////////////

                                        //    ////holiday check//
                                        //    var iqcAssembly122 = isHoliday(assembEndDateBAssembly);
                                        //    assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(iqcAssembly122));
                                        //    assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
                                        //    /////////////////
                                        //}
                                        ///////

                                    }
                                });



                            }
                            /////datediff/////
                        });

                    }
                }
            });
        }
    }///end of assebmlyLineInfoFunc()


    //new one in comment//
    @*function assebmlyLineInfoFunc() {
        $("#assemblyAllLineInformation tbody.assemblyAllLineTBody").empty();
        $("#assemblyAvailableLineInformation tbody.assemblyAvailableLineTBody").empty();

        var batteryAssemblyTotalQuantity = $('#batteryAssembly_TotalQuantity').val();
        var batteryAssemblyPerDayCapacity = $('#batteryAssembly_PerDayCapacity').val();

        if (batteryAssemblyPerDayCapacity != 0 && batteryAssemblyTotalQuantity != 0 && +batteryAssemblyTotalQuantity < +batteryAssemblyPerDayCapacity) {
            $('#assemblyTotal').show();
            $('#batteryAssembly_TotalQuantity').val("");
            $('#batteryAssembly_PerDayCapacity').val("");

            return false;
        } else {
            $('#assemblyTotal').hide();
        }

        if (batteryAssemblyPerDayCapacity == 0) {
            $('#assemblyPerDay').show();
            return false;
        } else {
            $('#assemblyPerDay').hide();
        }

        var assemblyMassLineInfo = $('#assemblyMassLineInfo').val();
        var assemblyMassLineInfoText = $('#assemblyMassLineInfo').text();

        console.log("assemblyMassLineInfo:" + assemblyMassLineInfo);
        console.log("assemblyMassLineInfoText:" + assemblyMassLineInfoText);

        var lineArr = [];
        $("#assemblyMassLineInfo option:selected").each(function() {
            var $this = $(this);
            if ($this.length) {
                var selText = $this.text();
                console.log("selText :" + selText);
                var selValue = $this.val();
                console.log("selValue :" + selValue);
                lineArr.push(selValue);
            }
        });
        console.log('lonearr : ' + lineArr);
        ////////////
        var perDayCapacitySum = 0;
        var lineCapcity = 0;
        for (var xi = 0; xi < lineArr.length; xi++) {

            perDayCapacitySum += +batteryAssemblyPerDayCapacity;
            lineCapcity = lineArr[0];
        }

        console.log("perDayCapacitySum :" + perDayCapacitySum);
        ////////////

        var assembStartDateBAssembly = $.trim($('#assembStartDateBAssembly').val());
        //var assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());

        //if (assembEndDateBAssembly == "Invalid date") {
        //    var assembEndDateBAssembly11 = $.trim($('#assembEndDateBAssembly').val(""));
        //}
        //assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());

        //if (batteryAssemblyTotalQuantity != null && perDayCapacitySum != null && assemblyMassLineInfo != null) {

        //    if (lineCapcity < perDayCapacitySum) {
        //        var assemblyDivision = (batteryAssemblyTotalQuantity / lineCapcity);

        //        if (isFloat((batteryAssemblyTotalQuantity / lineCapcity))) {
        //            var aa = (batteryAssemblyTotalQuantity / lineCapcity);
        //            var n = (aa + "").split(".")[0];
        //            var nn = +n;
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(moment(assembStartDateBAssembly).add(nn, 'days').format("YYYY-MM-DD")));
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());

        //            ////////holiday count///////
        //            var startDate = moment(assembStartDateBAssembly).format("YYYY-MM-DD");
        //            var endDDate = assembEndDateBAssembly;

        //            // getHolidayCount(startDate, endDDate);
        //            var dCount = getHolidayCount(startDate, endDDate);

        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(moment(assembEndDateBAssembly).add(dCount, 'days').format("YYYY-MM-DD")));
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
        //            /////////////////////////////

        //            //holiday check//
        //            var mass11 = isHoliday(assembEndDateBAssembly);
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(mass11));
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
        //            /////////////////
        //        } else {
        //            var bb = batteryAssemblyTotalQuantity / lineCapcity;
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(moment(assembStartDateBAssembly).add(bb - 1, 'days').format("YYYY-MM-DD")));
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());

        //            ////////holiday count///////
        //            var startDate1 = moment(assembStartDateBAssembly).format("YYYY-MM-DD");
        //            var endDDate1 = assembEndDateBAssembly;

        //            // getHolidayCount(startDate, endDDate);
        //            var dCount1 = getHolidayCount(startDate1, endDDate1);

        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(moment(assembEndDateBAssembly).add(dCount1, 'days').format("YYYY-MM-DD")));
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
        //            /////////////////////////////
        //            //holiday check//
        //            var iqcAssembly12 = isHoliday(assembEndDateBAssembly);
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(iqcAssembly12));
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
        //            /////////////////
        //        }
        //    } else {
        //        var assemblyDivision3 = (batteryAssemblyTotalQuantity / perDayCapacitySum);

        //        if (isFloat((batteryAssemblyTotalQuantity / perDayCapacitySum))) {
        //            var aa3 = (batteryAssemblyTotalQuantity / perDayCapacitySum);
        //            var n3 = (aa3 + "").split(".")[0];
        //            var nn3 = +n3;
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(moment(assembStartDateBAssembly).add(nn3, 'days').format("YYYY-MM-DD")));
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());

        //            ////////holiday count///////
        //            var startDate3 = moment(assembStartDateBAssembly).format("YYYY-MM-DD");
        //            var endDDate3 = assembEndDateBAssembly;

        //            // getHolidayCount(startDate, endDDate);
        //            var dCount3 = getHolidayCount(startDate3, endDDate3);

        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(moment(assembEndDateBAssembly).add(dCount3, 'days').format("YYYY-MM-DD")));
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
        //            /////////////////////////////

        //            //holiday check//
        //            var mass113 = isHoliday(assembEndDateBAssembly);
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(mass113));
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
        //            /////////////////
        //        }
        //        else {
        //            var bb3 = batteryAssemblyTotalQuantity / perDayCapacitySum;
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(moment(assembStartDateBAssembly).add(bb3 - 1, 'days').format("YYYY-MM-DD")));
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());

        //            ////////holiday count///////
        //            var startDate13 = moment(assembStartDateBAssembly).format("YYYY-MM-DD");
        //            var endDDate13 = assembEndDateBAssembly;

        //            // getHolidayCount(startDate, endDDate);
        //            var dCount13 = getHolidayCount(startDate13, endDDate13);

        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(moment(assembEndDateBAssembly).add(dCount13, 'days').format("YYYY-MM-DD")));
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
        //            /////////////////////////////
        //            //holiday check//
        //            var iqcAssembly123 = isHoliday(assembEndDateBAssembly);
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(iqcAssembly123));
        //            assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
        //            /////////////////
        //        }
        //    }

        //}

        //if (assemblyMassLineInfo == null) {
        //    assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(""));
        //}
        //assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
        var proSelectId = document.getElementById('dropForProject');
        var projectId = proSelectId.options[proSelectId.selectedIndex].value;
        var projectName = proSelectId.options[proSelectId.selectedIndex].text;

        if (assembStartDateBAssembly != null) {
            var allCut = 0;
            var tt = batteryAssemblyTotalQuantity;

            var datediff = 0;
            for (var ii = 0; ii <= datediff; ii++) {
               // assembStartDateBAssembly=

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetAvailableProductionLineForBatteryAssembly1", "Production")',
                    data: "{ assembStartDateBAssembly: '" + assembStartDateBAssembly
                        //+ "', assembEndDateBAssembly: '" + assembEndDateBAssembly
                        + "', projectId: '" + projectId
                        + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    async: false,
                    success: function (data) {

                        console.log("data :" + data);
                        var dataList = [];
                        for (var x in data) {
                            dataList = data[x];
                        }
                        console.log(dataList);
                        var items = $.parseJSON(dataList);
                        var isdats;

                        if (assemblyMassLineInfo != null && dataList.length!=0) {

                            $.each(items, function (i, item) {
                                console.log("item  :" + item);
                                var pro="";

                                if (item.Production == null) {
                                    pro = "";
                                } else {
                                    pro = item.Production;
                                }
                                var body = '<tr>';
                                body += '<td>' + moment(item.WorkingDate).format("YYYY-MM-DD") + '</td>';
                                body += '<td>' + item.LineNumber + '</td>';
                                body += '<td>' + item.LineCapacity + '</td>';
                                body += '<td>' + item.PerDayCapacity + '</td>';
                                body += '<td>' + item.LineAvailableCapacity + '</td>';
                                body += '<td>' + pro + '</p>' + '</td>';
                                body += '</tr>';

                                $("#assemblyAllLineInformation tbody.assemblyAllLineTBody").append(body);

                                /////datediff/////
                                //console.log(date_diff_indays(assembStartDateBAssembly, assembEndDateBAssembly));
                                //console.log(date_diff_indays(assembEndDateBAssembly, assembStartDateBAssembly));
                                //var datediff = date_diff_indays(assembStartDateBAssembly, assembEndDateBAssembly);

                                var batteryAssemblyPerDayCapacity = $('#batteryAssembly_PerDayCapacity').val();
                                //    for (var ii = 0; ii <= datediff; ii++) {
                                //  isdats = moment(assembStartDateBAssembly).add(ii, 'days').format('YYYY-MM-DD');
                                var wrkDate = moment(item.WorkingDate).format("YYYY-MM-DD");
                                var lineArrForAvailable = [];
                                $("#assemblyMassLineInfo option:selected").each(function () {
                                    var $this = $(this);
                                    if ($this.length) {
                                        var selText = $this.text();
                                        console.log("selText :" + selText);

                                        lineArrForAvailable.push(selText);
                                    }
                                });
                                console.log('lineArrForAvailable : ' + lineArrForAvailable);

                                var allLine = lineArrForAvailable;


                                // var perLine = allLine.trim();
                                $.each(allLine, function (i1, iitem) {
                                    if (batteryAssemblyPerDayCapacity > item.LineAvailableCapacity && iitem == item.LineNumber) {

                                        var body2 = '<tr>';
                                        body2 += '<td>' + moment(item.WorkingDate).format("YYYY-MM-DD") + '</td>';
                                        body2 += '<td>' + iitem + '</td>';
                                        body2 += '<td>' + item.LineAvailableCapacity + '</td>';
                                        body2 += '<td>' + item.Production + '</td>';
                                        body2 += '<td style="color:red">' + "Assembly PerDayCapacity is greater than Available Line Capacity. So, you are unable to continue this plan. If you want, you can proceed as your own responsibility." + '</p>' + '</td>';
                                        body2 += '</tr>';

                                        $("#assemblyAvailableLineInformation tbody.assemblyAvailableLineTBody").append(body2);


                                        var pro = +item.PerDayCapacity - +item.LineAvailableCapacity;
                                        //var alls = 0;
                                        allCut += +pro;

                                        //var lineArrForallCut = [];
                                        //lineArrForallCut.push(pro);

                                        //console.log("lineArrForallCut :" + lineArrForallCut.length);
                                        //var kk = lineArrForallCut.length;
                                        ////datediff++;

                                        //var assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
                                        //assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(moment(assembStartDateBAssembly).add(kk, 'days').format("YYYY-MM-DD")));
                                        //assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
                                        /////////////////////////////////

                                        //////holiday check//
                                        //var iqcAssembly122 = isHoliday(assembEndDateBAssembly);
                                        //assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val(iqcAssembly122));
                                        //assembEndDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
                                        ///////////////
                                        datediff++;


                                    }

                                });

                                //  }
                            });

                        }


                    }
                });

                assembStartDateBAssembly = $.trim($('#assembEndDateBAssembly').val(moment(assembStartDateBAssembly).add(1, 'days').format("YYYY-MM-DD")));
                assembStartDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
                var iqcAssembly123 = isHoliday(assembStartDateBAssembly);
                assembStartDateBAssembly = $.trim($('#assembEndDateBAssembly').val(iqcAssembly123));
                assembStartDateBAssembly = $.trim($('#assembEndDateBAssembly').val());
                //new//

                if (allCut == tt && iqcAssembly123 != true) {

                    break;
                }

            }
        }

    }///end of assebmlyLineInfoFunc()*@
    ////ass//
    function materialReceiveAssemblyFunc() {
        var materialReceiveStartDateBSmt;
        var materialReceiveEndDateBSmt;
        var iqcCompleteStartDateBSmt;
        var iqcCompleteEndDateBSmt;
        var trialProductionStartDateBSmt;
        var trialProductionEndDateBSmt;
        var massProductionStartDateBSmt;
        var massProductionEndDateBSmt;

        var materialReceiveStartDateHousing;
        var materialReceiveEndDateHousing;
        var iqcCompleteStartDateHousing;
        var iqcCompleteEndDateHousing;
        var trialProductionStartDateHousing;
        var trialProductionEndDateHousing;
        var housingReliabilityStartDateHousing;
        var housingReliabilityEndtDateHousing;
        var housingMassProStartDateHousing;
        var housingMassProEndtDateHousing;

        var materialReceiveStartDateBattery;
        var materialReceiveEndDateBattery;
        var iqcCompleteStartDateBattery;
        var iqcCompleteEndDateBattery;
        var trialProductionStartDateBattery;
        var trialProductionEndDateBattery;
        var batteryReliabilityTestStartDate;
        var batteryReliabilityTestEndDate;
        var batteryMassProductionStartDate;
        var batteryMassProductionEndDate;
        var batteryAgingTestStartDate;
        var batteryAgingTestEndDate;

        var materialStartDateBAssembly;
        var materialReceiveEndDateBAssembly;
        var iqcCompleteStartDateBAssembly;
        var iqcCompleteEndDateBAssembly;
        var trialProductionStartDateBAssembly;
        var trialProductionEndDateBAssembly;
        var softwareConfirmationStartDate;
        var softwareConfirmationEndDate;
        var rnDConfirmStartDateBAssembly;
        var rnDConfirmEndDateBAssembly;
        var assembStartDateBAssembly;
        var assembEndDateBAssembly;
        var packingMassProductionStartDateBAssembly;
        var packingMassProductionEndDateBAssembly;


        $("#assemblyChkId").prop("checked", true);
        materialStartDateBAssembly = $.trim($('#materialStartDateBAssembly').val());
        console.log("materialStartDateBAssembly :" + materialStartDateBAssembly);

        if (materialStartDateBAssembly != "") { //if for all////////

            var materialAssembly11 = isHolidayCheck(materialStartDateBAssembly);

            if (materialAssembly11 == true) {

                alertify.confirm("WOW!!! It's Holiday.", "Do you want to proceed it?", function () {
                    // show1();
                    $('#loading').show();
                    alertify.success('Ok');
                    ////////////////Holiday//////

                    //materialStartDateBAssembly = $.trim($('#materialStartDateBAssembly').val());
                    materialReceiveEndDateBAssembly = $.trim($('#materialReceiveEndDateBAssembly').val(moment(materialStartDateBAssembly).add(1, 'days').format("YYYY-MM-DD")));
                    materialReceiveEndDateBAssembly = $.trim($('#materialReceiveEndDateBAssembly').val());

                    if (materialReceiveEndDateBAssembly == "Invalid date") {
                        var materialReceiveEndDateBAssembly21 = $.trim($('#materialReceiveEndDateBAssembly').val(""));
                    }

                    materialReceiveEndDateBAssembly = $.trim($('#materialReceiveEndDateBAssembly').val());
                    /////////////////////////////
                    //var dCount1 = getHolidayCount(materialStartDateBAssembly, materialReceiveEndDateBAssembly);

                    //materialReceiveEndDateBAssembly = $.trim($('#materialReceiveEndDateBAssembly').val(moment(materialReceiveEndDateBAssembly).add(dCount1, 'days').format("YYYY-MM-DD")));
                    //materialReceiveEndDateBAssembly = $.trim($('#materialReceiveEndDateBAssembly').val());

                    ////////////////
                    var mdAssembly22 = isHoliday(materialReceiveEndDateBAssembly);
                    materialReceiveEndDateBAssembly = $.trim($('#materialReceiveEndDateBAssembly').val(mdAssembly22));
                    materialReceiveEndDateBAssembly = $.trim($('#materialReceiveEndDateBAssembly').val());
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetMaterialReceiveDateBAssembly", "Production")',
                        data: "{ materialStartDateBAssembly: '" + materialStartDateBAssembly
                            + "', materialReceiveEndDateBAssembly: '" + materialReceiveEndDateBAssembly
                            + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: 'json',
                        async: false,
                        success: function (data) {

                            console.log("data :" + data);
                            var dataList = [];
                            for (var x in data) {
                                dataList = data[x];
                            }
                            console.log(dataList);

                            if (dataList == "YES") {
                                if (dataList == "YES") {
                                    $("#materialAssemblyStartPara").show();
                                    // $('#materialStartDateBAssembly').attr("disabled", false);

                                } else {
                                    $("#materialAssemblyStartPara").hide();
                                }
                            }
                        }
                    });
                    ///////////////////Assembly IQC/////////////////
                    iqcCompleteStartDateBAssembly = $.trim($('#iqcCompleteStartDateBAssembly').val(materialReceiveEndDateBAssembly));
                    console.log("iqcCompleteStartDateBAssembly :" + iqcCompleteStartDateBAssembly);
                    iqcCompleteStartDateBAssembly = $.trim($('#iqcCompleteStartDateBAssembly').val());

                    if (iqcCompleteStartDateBAssembly == "Invalid date") {
                        var iqcCompleteStartDateBAssembly21 = $.trim($('#iqcCompleteStartDateBAssembly').val(""));
                    }
                    iqcCompleteStartDateBAssembly = $.trim($('#iqcCompleteStartDateBAssembly').val());

                    //holiday check//
                    var iqcAssembly22 = isHoliday(iqcCompleteStartDateBAssembly);
                    iqcCompleteStartDateBAssembly = $.trim($('#iqcCompleteStartDateBAssembly').val(iqcAssembly22));
                    iqcCompleteStartDateBAssembly = $.trim($('#iqcCompleteStartDateBAssembly').val());
                    /////////////////

                    iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val(moment(iqcCompleteStartDateBAssembly).add(1, 'days').format("YYYY-MM-DD")));
                    iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val());

                    if (iqcCompleteEndDateBAssembly == "Invalid date") {
                        var iqcCompleteEndDateBAssembly21 = $.trim($('#iqcCompleteEndDateBAssembly').val(""));
                    }
                    iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val());

                    /////////Add extra days for holiday///////////
                    var dCount30 = getHolidayCount(iqcCompleteStartDateBAssembly, iqcCompleteEndDateBAssembly);

                    iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val(moment(iqcCompleteEndDateBAssembly).add(dCount30, 'days').format("YYYY-MM-DD")));
                    iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val());
                    /////////////////////////////////////////////

                    /////holiday check////
                    var iqcAssembly2 = isHoliday(iqcCompleteEndDateBAssembly);
                    iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val(iqcAssembly2));
                    iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val());
                    //////////////////////

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetIqcCompleteDateBAssembly", "Production")',
                        data: "{ iqcCompleteStartDateBAssembly: '" + iqcCompleteStartDateBAssembly
                            + "', iqcCompleteEndDateBAssembly: '" + iqcCompleteEndDateBAssembly
                            + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: 'json',
                        async: false,
                        success: function (data) {

                            console.log("data :" + data);
                            var dataList = [];
                            for (var x in data) {
                                dataList = data[x];
                            }
                            console.log(dataList);

                            if (dataList == "YES") {
                                if (dataList == "YES") {

                                    $("#iqcAssemblyStartPara").show();
                                    $('#iqcCompleteStartDateBAssembly').attr("disabled", false);

                                } else {
                                    $("#iqcAssemblyStartPara").hide();
                                    $('#iqcCompleteStartDateBAssembly').attr("disabled", false);
                                }
                            }
                        }
                    });
                    ////////////////Assembly Trial///////////////
                    trialProductionStartDateBAssembly = $.trim($('#trialProductionStartDateBAssembly').val(iqcCompleteStartDateBAssembly));
                    console.log("trialProductionStartDateBAssembly :" + trialProductionStartDateBAssembly);
                    trialProductionStartDateBAssembly = $.trim($('#trialProductionStartDateBAssembly').val());

                    if (trialProductionStartDateBAssembly == "Invalid date") {
                        var trialProductionStartDateBAssembly21 = $.trim($('#trialProductionStartDateBAssembly').val(""));
                    }
                    trialProductionStartDateBAssembly = $.trim($('#trialProductionStartDateBAssembly').val());

                    /////holiday check////
                    var trialAssembly22 = isHoliday(trialProductionStartDateBAssembly);
                    trialProductionStartDateBAssembly = $.trim($('#trialProductionStartDateBAssembly').val(trialAssembly22));
                    trialProductionStartDateBAssembly = $.trim($('#trialProductionStartDateBAssembly').val());
                    //////////////////////
                    trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val(iqcCompleteStartDateBAssembly));
                    trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val());

                    if (trialProductionEndDateBAssembly == "Invalid date") {
                        var trialProductionEndDateBAssembly22 = $.trim($('#trialProductionEndDateBAssembly').val(""));
                    }
                    trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val());


                    ////////////////////////////
                    var dCount24 = getHolidayCount(trialProductionStartDateBAssembly, trialProductionEndDateBAssembly);

                    trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val(moment(trialProductionEndDateBAssembly).add(dCount24, 'days').format("YYYY-MM-DD")));
                    trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val());

                    ////////////////////////////
                    /////holiday check////
                    var trialAssembly31 = isHoliday(trialProductionEndDateBAssembly);
                    trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val(trialAssembly31));
                    trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val());
                    //////////////////////
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetTrialProductionDateBAssembly", "Production")',
                        data: "{ trialProductionStartDateBAssembly: '" + trialProductionStartDateBAssembly
                            + "', trialProductionEndDateBAssembly: '" + trialProductionEndDateBAssembly
                            + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: 'json',
                        async: false,
                        success: function (data) {

                            console.log("data :" + data);
                            var dataList = [];
                            for (var x in data) {
                                dataList = data[x];
                            }
                            console.log(dataList);

                            if (dataList == "YES") {
                                if (dataList == "YES") {

                                    $("#trialAssemblyStartPara").show();
                                    $('#trialProductionStartDateBAssembly').attr("disabled", false);

                                } else {
                                    $('#trialProductionStartDateBAssembly').attr("disabled", false);
                                    $("#trialAssemblyStartPara").hide();
                                }
                            }
                        }
                    });

                    /////////////Software///////////////
                    softwareConfirmationStartDate = $.trim($('#softwareConfirmationStartDate').val(moment(trialProductionStartDateBAssembly).add(1, 'days').format("YYYY-MM-DD")));

                    console.log("softwareConfirmationStartDate :" + softwareConfirmationStartDate);
                    softwareConfirmationStartDate = $.trim($('#softwareConfirmationStartDate').val());

                    if (softwareConfirmationStartDate == "Invalid date") {
                        var softwareConfirmationStartDate21 = $.trim($('#softwareConfirmationStartDate').val(""));
                    }
                    softwareConfirmationStartDate = $.trim($('#softwareConfirmationStartDate').val());


                    /////holiday check////
                    var software22 = isHoliday(softwareConfirmationStartDate);
                    softwareConfirmationStartDate = $.trim($('#softwareConfirmationStartDate').val(software22));
                    softwareConfirmationStartDate = $.trim($('#softwareConfirmationStartDate').val());
                    //////////////////////
                    softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val(moment(softwareConfirmationStartDate).add(1, 'days').format("YYYY-MM-DD")));
                    softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val());

                    if (softwareConfirmationEndDate == "Invalid date") {
                        var softwareConfirmationEndDate21 = $.trim($('#softwareConfirmationEndDate').val(""));
                    }
                    softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val());
                    ////////////////////////////
                    var dCount32 = getHolidayCount(softwareConfirmationStartDate, softwareConfirmationEndDate);

                    softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val(moment(softwareConfirmationEndDate).add(dCount32, 'days').format("YYYY-MM-DD")));
                    softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val());

                    ////////////////////////////

                    /////holiday check////
                    var software23 = isHoliday(softwareConfirmationEndDate);
                    softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val(software23));
                    softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val());
                    //////////////////////

                    /////////////Assembly RND///////////////
                    rnDConfirmStartDateBAssembly = $.trim($('#rnDConfirmStartDateBAssembly').val(softwareConfirmationStartDate));

                    console.log("rnDConfirmStartDateBAssembly :" + rnDConfirmStartDateBAssembly);
                    rnDConfirmStartDateBAssembly = $.trim($('#rnDConfirmStartDateBAssembly').val());

                    if (rnDConfirmStartDateBAssembly == "Invalid date") {
                        var rnDConfirmStartDateBAssembly21 = $.trim($('#rnDConfirmStartDateBAssembly').val(""));
                    }
                    rnDConfirmStartDateBAssembly = $.trim($('#rnDConfirmStartDateBAssembly').val());


                    /////holiday check////
                    var rndAssembly1 = isHoliday(rnDConfirmStartDateBAssembly);
                    rnDConfirmStartDateBAssembly = $.trim($('#rnDConfirmStartDateBAssembly').val(rndAssembly1));
                    rnDConfirmStartDateBAssembly = $.trim($('#rnDConfirmStartDateBAssembly').val());
                    //////////////////////
                    rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val(moment(rnDConfirmStartDateBAssembly).add(3, 'days').format("YYYY-MM-DD")));
                    rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val());

                    if (rnDConfirmEndDateBAssembly == "Invalid date") {
                        var rnDConfirmEndDateBAssembly21 = $.trim($('#rnDConfirmEndDateBAssembly').val(""));
                    }
                    rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val());
                    ////////////////////////////
                    var dCount4 = getHolidayCount(rnDConfirmStartDateBAssembly, rnDConfirmEndDateBAssembly);

                    rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val(moment(rnDConfirmEndDateBAssembly).add(dCount4, 'days').format("YYYY-MM-DD")));
                    rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val());

                    ////////////////////////////

                    /////holiday check////
                    var rndAssembly33 = isHoliday(rnDConfirmEndDateBAssembly);
                    rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val(rndAssembly33));
                    rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val());
                    //////////////////////
                    //////////////Assembly///////////////////
                    assembStartDateBAssembly = $.trim($('#assembStartDateBAssembly').val(moment(rnDConfirmEndDateBAssembly).add(1, 'days').format("YYYY-MM-DD")));

                    console.log("assembStartDateBAssembly :" + assembStartDateBAssembly);
                    assembStartDateBAssembly = $.trim($('#assembStartDateBAssembly').val());

                    if (assembStartDateBAssembly == "Invalid date") {
                        var assembStartDateBAssembly21 = $.trim($('#assembStartDateBAssembly').val(""));
                    }
                    assembStartDateBAssembly = $.trim($('#assembStartDateBAssembly').val());


                    /////holiday check////
                    var assembly21 = isHoliday(assembStartDateBAssembly);
                    assembStartDateBAssembly = $.trim($('#assembStartDateBAssembly').val(assembly21));
                    assembStartDateBAssembly = $.trim($('#assembStartDateBAssembly').val());
                    //////////////////////

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetAssemblyBProduction", "Production")',
                        data: "{ assembStartDateBAssembly: '" + assembStartDateBAssembly
                            + "', assembEndDateBAssembly: '" + assembStartDateBAssembly
                            + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: 'json',
                        async: false,
                        success: function (data) {

                            console.log("data :" + data);
                            var dataList = [];
                            for (var x in data) {
                                dataList = data[x];
                            }
                            console.log(dataList);

                            if (dataList == "YES") {
                                if (dataList == "YES") {

                                    $("#assemblyMassProStartPara").show();
                                    $('#assembStartDateBAssembly').attr("disabled", false);

                                } else {
                                    $('#assembStartDateBAssembly').attr("disabled", false);
                                    $("#assemblyMassProStartPara").hide();
                                }
                            }
                        }
                    });

                    //////////////packing///////////////////
                    packingMassProductionStartDateBAssembly = $.trim($('#packingMassProductionStartDateBAssembly').val(moment(assembStartDateBAssembly).add(1, 'days').format("YYYY-MM-DD")));

                    console.log("packingMassProductionStartDateBAssembly :" + packingMassProductionStartDateBAssembly);
                    packingMassProductionStartDateBAssembly = $.trim($('#packingMassProductionStartDateBAssembly').val());

                    if (packingMassProductionStartDateBAssembly == "Invalid date") {
                        var packingMassProductionStartDateBAssembly21 = $.trim($('#packingMassProductionStartDateBAssembly').val(""));
                    }
                    packingMassProductionStartDateBAssembly = $.trim($('#packingMassProductionStartDateBAssembly').val());

                    /////holiday check////
                    var packing21 = isHoliday(packingMassProductionStartDateBAssembly);
                    packingMassProductionStartDateBAssembly = $.trim($('#packingMassProductionStartDateBAssembly').val(packing21));
                    packingMassProductionStartDateBAssembly = $.trim($('#packingMassProductionStartDateBAssembly').val());
                    //////////////////////

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetPackingBProduction", "Production")',
                        data: "{ packingMassProductionStartDateBAssembly: '" + packingMassProductionStartDateBAssembly
                            + "', packingMassProductionEndDateBAssembly: '" + packingMassProductionStartDateBAssembly
                            + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: 'json',
                        async: false,
                        success: function (data) {

                            console.log("data :" + data);
                            var dataList = [];
                            for (var x in data) {
                                dataList = data[x];
                            }
                            console.log(dataList);

                            if (dataList == "YES") {
                                if (dataList == "YES") {

                                    $("#packingMassProStartPara").show();
                                    $('#packingMassProductionStartDateBAssembly').attr("disabled", false);

                                } else {
                                    $('#packingMassProductionStartDateBAssembly').attr("disabled", false);
                                    $("#packingMassProStartPara").hide();
                                }
                            }//end of if
                        }
                    });
                    //////////////////Battery///////////////
                    //  $("#batteryChkId").on('change', function () {
                    if ($("#batteryChkId").is(':checked')) {
                        $("#batteryChkId").attr('value', 'true');
                        $("#batteryChkId").prop("checked", true);
                    }
                    else {
                        $("#batteryChkId").attr('value', 'false');
                        $("#batteryChkId").prop("checked", false);
                    }

                    batteryChk = $('#batteryChkId').val();
                    console.log("batteryChk :" + batteryChk);
                    //});

                    if (batteryChk == "true") {
                        $("#batteryChkId").prop("checked", true);
                        /////////////////Aging///////////
                        batteryAgingTestStartDate = $.trim($('#batteryAgingTestStartDate').val(moment(softwareConfirmationEndDate).add(1, 'days').format("YYYY-MM-DD")));
                        batteryAgingTestStartDate = $.trim($('#batteryAgingTestStartDate').val());

                        if (batteryAgingTestStartDate == "Invalid date") {
                            var batteryAgingTestStartDate21 = $.trim($('#batteryAgingTestStartDate').val(""));
                        }
                        batteryAgingTestStartDate = $.trim($('#batteryAgingTestStartDate').val());
                        /////holiday check////

                        var aging22 = isHoliday(batteryAgingTestStartDate);
                        batteryAgingTestStartDate = $.trim($('#batteryAgingTestStartDate').val(aging22));
                        batteryAgingTestStartDate = $.trim($('#batteryAgingTestStartDate').val());
                        //////////////////////

                        batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val(moment(batteryAgingTestStartDate).add(2, 'days').format("YYYY-MM-DD")));
                        batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val());

                        if (batteryAgingTestEndDate == "Invalid date") {
                            var batteryAgingTestEndDate21 = $.trim($('#batteryAgingTestEndDate').val(""));
                        }
                        batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val());

                        /////////Add extra days for holiday///////////
                        var dCount16 = getHolidayCount(batteryAgingTestStartDate, batteryAgingTestEndDate);

                        batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val(moment(batteryAgingTestEndDate).add(dCount16, 'days').format("YYYY-MM-DD")));
                        batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val());
                        ///////////////////
                        /////holiday check////
                        var aging25 = isHoliday(batteryAgingTestEndDate);
                        batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val(aging25));
                        batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val());

                        /////////////////end aging////////////
                        ////////////Battery Mass Production//////////

                        batteryMassProductionStartDate = $.trim($('#batteryMassProductionStartDate').val(softwareConfirmationEndDate));
                        batteryMassProductionStartDate = $.trim($('#batteryMassProductionStartDate').val());
                        if (batteryMassProductionStartDate == "Invalid date") {
                            var batteryMassProductionStartDate21 = $.trim($('#batteryMassProductionStartDate').val(""));
                        }
                        batteryMassProductionStartDate = $.trim($('#batteryMassProductionStartDate').val());

                        /////holiday check////
                        var batteryMassl13 = isHoliday(batteryMassProductionStartDate);
                        batteryMassProductionStartDate = $.trim($('#batteryMassProductionStartDate').val(batteryMassl13));
                        batteryMassProductionStartDate = $.trim($('#batteryMassProductionStartDate').val());
                        //////////////////////

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetBatteryMassProduction", "Production")',
                            data: "{ batteryMassProductionStartDate: '" + batteryMassProductionStartDate
                                + "', batteryMassProductionEndDate: '" + batteryMassProductionStartDate
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {
                                    if (dataList == "YES") {

                                        $("#batteryMassProStartPara").show();
                                        $('#batteryMassProductionStartDate').attr("disabled", false);

                                    } else {
                                        $('#batteryMassProductionStartDate').attr("disabled", false);
                                        $("#batteryMassProStartPara").hide();
                                    }
                                }//end of if
                            }
                        });
                        ///////////////Battery Reliability Test////////////////////

                        batteryReliabilityTestStartDate = $.trim($('#batteryReliabilityTestStartDate').val(materialStartDateBAssembly));
                        console.log("batteryReliabilityTestStartDate :" + batteryReliabilityTestStartDate);
                        batteryReliabilityTestStartDate = $.trim($('#batteryReliabilityTestStartDate').val());

                        if (batteryReliabilityTestStartDate == "Invalid date") {
                            var batteryReliabilityTestStartDate21 = $.trim($('#batteryReliabilityTestStartDate').val(""));
                        }
                        batteryReliabilityTestStartDate = $.trim($('#batteryReliabilityTestStartDate').val());
                        /////holiday check////
                        //var batReliability11 = isHoliday(batteryReliabilityTestStartDate);
                        //batteryReliabilityTestStartDate = $.trim($('#batteryReliabilityTestStartDate').val(batReliability11));
                        //batteryReliabilityTestStartDate = $.trim($('#batteryReliabilityTestStartDate').val());

                        ////////////////////////////////
                        batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val(moment(batteryReliabilityTestStartDate).add(2, 'days').format("YYYY-MM-DD")));
                        batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val());

                        if (batteryReliabilityTestEndDate == "Invalid date") {
                            var batteryReliabilityTestEndDate21 = $.trim($('#batteryReliabilityTestEndDate').val(""));
                        }
                        batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val());

                        ///////////Add extra days for holiday///////////
                        //var dCount15 = getHolidayCount(batteryReliabilityTestStartDate, batteryReliabilityTestEndDate);

                        //batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val(moment(batteryReliabilityTestEndDate).add(dCount15, 'days').format("YYYY-MM-DD")));
                        //batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val());
                        /////////////////////

                        /////holiday check////
                        var batReliability31 = isHoliday(batteryReliabilityTestEndDate);
                        batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val(batReliability31));
                        batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val());
                        ///////////End reliability///////////


                        ///////////////Trial production////////////////////


                        trialProductionStartDateBattery = $.trim($('#trialProductionStartDateBattery').val(moment(batteryReliabilityTestStartDate).add(-1, 'days').format("YYYY-MM-DD")));
                        console.log("trialProductionStartDateBattery :" + trialProductionStartDateBattery);
                        trialProductionStartDateBattery = $.trim($('#trialProductionStartDateBattery').val());

                        if (trialProductionStartDateBattery == "Invalid date") {
                            var trialProductionStartDateBattery21 = $.trim($('#trialProductionStartDateBattery').val(""));
                        }
                        trialProductionStartDateBattery = $.trim($('#trialProductionStartDateBattery').val());

                        /////holiday check////
                        var trialBatteryl31 = isHolidayPreviousDate(trialProductionStartDateBattery);
                        trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val(trialBatteryl31));
                        trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val());
                        //////////////////////

                        trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val(trialProductionStartDateBattery));
                        trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val());

                        if (trialProductionEndDateBattery == "Invalid date") {
                            var trialProductionEndDateBattery21 = $.trim($('#trialProductionEndDateBattery').val(""));
                        }
                        trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val());
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetTrialProductionDateBattery", "Production")',
                            data: "{ trialProductionStartDateBattery: '" + trialProductionStartDateBattery
                                + "', trialProductionEndDateBattery: '" + trialProductionEndDateBattery
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {
                                    if (dataList == "YES") {

                                        $("#batteryTrialStartPara").show();
                                        $('#trialProductionStartDateBattery').attr("disabled", false);

                                    } else {
                                        $('#trialProductionStartDateBattery').attr("disabled", false);
                                        $("#batteryTrialStartPara").hide();
                                    }
                                }//end of if
                            }
                        });
                        ///////////////////Battery IQC/////////////////
                        iqcCompleteStartDateBattery = $.trim($('#iqcCompleteStartDateBattery').val(trialProductionStartDateBattery));
                        console.log("iqcCompleteStartDateBattery :" + iqcCompleteStartDateBattery);
                        iqcCompleteStartDateBattery = $.trim($('#iqcCompleteStartDateBattery').val());

                        if (iqcCompleteStartDateBattery == "Invalid date") {
                            var iqcCompleteStartDateBattery21 = $.trim($('#iqcCompleteStartDateBattery').val(""));
                        }
                        iqcCompleteStartDateBattery = $.trim($('#iqcCompleteStartDateBattery').val());

                        //holiday check//
                        var iqcBattery31 = isHoliday(iqcCompleteStartDateBattery);
                        iqcCompleteStartDateBattery = $.trim($('#iqcCompleteStartDateBattery').val(iqcBattery31));
                        iqcCompleteStartDateBattery = $.trim($('#iqcCompleteStartDateBattery').val());
                        /////////////////

                        iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val(moment(iqcCompleteStartDateBattery).add(1, 'days').format("YYYY-MM-DD")));
                        iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val());

                        if (iqcCompleteEndDateBattery == "Invalid date") {
                            var iqcCompleteEndDateBattery21 = $.trim($('#iqcCompleteEndDateBattery').val(""));
                        }
                        iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val());

                        ///////////Add extra days for holiday///////////
                        //var dCount34 = getHolidayCount(iqcCompleteStartDateBattery, iqcCompleteEndDateBattery);

                        //iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val(moment(iqcCompleteEndDateBattery).add(dCount34, 'days').format("YYYY-MM-DD")));
                        //iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val());
                        ///////////////////////////////////////////////

                        ///////holiday check////
                        //var iqcBattery12 = isHoliday(iqcCompleteEndDateBattery);
                        //iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val(iqcBattery12));
                        //iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val());
                        ////////////////////////

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetIqcCompleteDateBattery", "Production")',
                            data: "{ iqcCompleteStartDateBattery: '" + iqcCompleteStartDateBattery
                                + "', iqcCompleteEndDateBattery: '" + iqcCompleteEndDateBattery
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {
                                    if (dataList == "YES") {

                                        $("#batteryIqcStartPara").show();
                                        $('#iqcCompleteStartDateBattery').attr("disabled", false);

                                    } else {
                                        $('#iqcCompleteStartDateBattery').attr("disabled", false);
                                        $("#batteryIqcStartPara").hide();
                                    }
                                }//end of if
                            }
                        });

                        ///////////////////Battery Material/////////////////
                        materialReceiveStartDateBattery = $.trim($('#materialReceiveStartDateBattery').val(moment(iqcCompleteStartDateBattery).add(-1, 'days').format("YYYY-MM-DD")));
                        console.log("materialReceiveStartDateBattery :" + materialReceiveStartDateBattery);
                        materialReceiveStartDateBattery = $.trim($('#materialReceiveStartDateBattery').val());

                        if (materialReceiveStartDateBattery == "Invalid date") {
                            var materialReceiveStartDateBattery21 = $.trim($('#materialReceiveStartDateBattery').val(""));
                        }
                        materialReceiveStartDateBattery = $.trim($('#materialReceiveStartDateBattery').val());

                        /////holiday check////
                        var batterMaterial31 = isHolidayPreviousDate(materialReceiveStartDateBattery);
                        materialReceiveStartDateBattery = $.trim($('#materialReceiveStartDateBattery').val(batterMaterial31));
                        materialReceiveStartDateBattery = $.trim($('#materialReceiveStartDateBattery').val());
                        //////////////////////

                        materialReceiveEndDateBattery = $.trim($('#materialReceiveEndDateBattery').val(materialReceiveStartDateBattery));
                        materialReceiveEndDateBattery = $.trim($('#materialReceiveEndDateBattery').val());

                        if (materialReceiveEndDateBattery == "Invalid date") {
                            var materialReceiveEndDateBattery21 = $.trim($('#materialReceiveEndDateBattery').val(""));
                        }
                        materialReceiveEndDateBattery = $.trim($('#materialReceiveEndDateBattery').val());

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetMaterialReceiveDateBattery", "Production")',
                            data: "{ materialReceiveStartDateBattery: '" + materialReceiveStartDateBattery
                                + "', materialReceiveEndDateBattery: '" + materialReceiveEndDateBattery
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {
                                    if (dataList == "YES") {

                                        $("#batteryMaterialStartPara").show();
                                        $('#materialReceiveStartDateBattery').attr("disabled", false);

                                    } else {
                                        $('#materialReceiveStartDateBattery').attr("disabled", false);
                                        $("#batteryMaterialStartPara").hide();
                                    }
                                }//end of if
                            }
                        });
                        ///////////////end trial////////////

                    } else if (batteryChk == "false") {
                        $("#batteryChkId").prop("checked", false);
                        $('#materialReceiveStartDateBattery').val("");
                        $('#materialReceiveEndDateBattery').val("");
                        $('#iqcCompleteStartDateBattery').val("");
                        $('#iqcCompleteEndDateBattery').val("");
                        $('#trialProductionStartDateBattery').val("");
                        $('#trialProductionEndDateBattery').val("");
                        $('#batteryReliabilityTestStartDate').val("");
                        $('#batteryReliabilityTestEndDate').val("");
                        $('#batteryMassProductionStartDate').val("");
                        $('#batteryMassProductionEndDate').val("");
                        $('#batteryAgingTestStartDate').val("");
                        $('#batteryAgingTestEndDate').val("");
                        $("#batteryAllLineInformation tbody.batteryAllLineTBody").empty();
                        $("#batteryAvailableLineInformation tbody.batteryAvailableLineTBody").empty();

                        $('#materialReceiveStartDateBattery').attr("disabled", true);
                        $('#materialReceiveEndDateBattery').attr("disabled", true);
                        $('#iqcCompleteStartDateBattery').attr("disabled", true);
                        $('#iqcCompleteEndDateBattery').attr("disabled", true);
                        $('#trialProductionStartDateBattery').attr("disabled", true);
                        $('#trialProductionEndDateBattery').attr("disabled", true);
                        $('#batteryReliabilityTestStartDate').attr("disabled", true);
                        $('#batteryReliabilityTestEndDate').attr("disabled", true);
                        $('#batteryMassProductionStartDate').attr("disabled", true);
                        $('#batteryMassProductionEndDate').attr("disabled", true);
                        $('#batteryAgingTestStartDate').attr("disabled", true);
                        $('#batteryAgingTestEndDate').attr("disabled", true);

                        $('#battery_TotalQuantity').attr("disabled", true);
                        $('#battery_PerDayCapacity').attr("disabled", true);
                        document.getElementById("batteryMassLineInfo_chosen").disabled = true;
                    }
                    ////////////end Battery//////////
                    /////Start of battery housing/////////////
                    //  $("#housingChkId").on('change', function () {
                    if ($("#housingChkId").is(':checked')) {
                        $("#housingChkId").attr('value', 'true');
                        $("#housingChkId").prop("checked", true);
                    } else {
                        $("#housingChkId").attr('value', 'false');
                        $("#housingChkId").prop("checked", false);
                    }

                    houseChk = $('#housingChkId').val();
                    console.log("houseChk :" + houseChk);
                    // });

                    if (houseChk == "true") {
                        $("#housingChkId").prop("checked", true);
                        housingMassProStartDateHousing = $.trim($('#housingMassProStartDateHousing').val(rnDConfirmEndDateBAssembly));

                        console.log("housingMassProStartDateHousing :" + housingMassProStartDateHousing);
                        housingMassProStartDateHousing = $.trim($('#housingMassProStartDateHousing').val());

                        if (housingMassProStartDateHousing == "Invalid date") {
                            var housingMassProStartDateHousing21 = $.trim($('#housingMassProStartDateHousing').val(""));
                        }
                        housingMassProStartDateHousing = $.trim($('#housingMassProStartDateHousing').val());

                        /////holiday check////
                        var housingMassPro21 = isHoliday(housingMassProStartDateHousing);
                        housingMassProStartDateHousing = $.trim($('#housingMassProStartDateHousing').val(housingMassPro21));
                        housingMassProStartDateHousing = $.trim($('#housingMassProStartDateHousing').val());
                        //////////////////////

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetHousingMassBProduction", "Production")',
                            data: "{ housingMassProStartDateHousing: '" + housingMassProStartDateHousing
                                + "', housingMassProEndtDateHousing: '" + housingMassProStartDateHousing
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {
                                    if (dataList == "YES") {

                                        $("#housingMassProStartPara").show();
                                        $('#housingMassProStartDateHousing').attr("disabled", false);

                                    } else {
                                        $('#housingMassProStartDateHousing').attr("disabled", false);
                                        $("#housingMassProStartPara").hide();
                                    }
                                }//end of if
                            }
                        });

                        /////////////housing reliability/////////////
                        housingReliabilityStartDateHousing = $.trim($('#housingReliabilityStartDateHousing').val(materialStartDateBAssembly));
                        housingReliabilityStartDateHousing = $.trim($('#housingReliabilityStartDateHousing').val());

                        if (housingReliabilityStartDateHousing == "Invalid date") {
                            var housingReliabilityStartDateHousing21 = $.trim($('#housingReliabilityStartDateHousing').val(""));
                        }
                        housingReliabilityStartDateHousing = $.trim($('#housingReliabilityStartDateHousing').val());
                        ///////holiday check////
                        //var housingRelia14 = isHoliday(housingReliabilityStartDateHousing);
                        //housingReliabilityStartDateHousing = $.trim($('#housingReliabilityStartDateHousing').val(housingRelia14));
                        //housingReliabilityStartDateHousing = $.trim($('#housingReliabilityStartDateHousing').val());
                        ////////////////////////
                        housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val(materialReceiveEndDateBAssembly));
                        housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val());

                        if (housingReliabilityEndtDateHousing == "Invalid date") {
                            var housingReliabilityEndtDateHousing21 = $.trim($('#housingReliabilityEndtDateHousing').val(""));
                        }
                        housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val());

                        /////////Add extra days for holiday///////////
                        //var dCount5 = getHolidayCount(housingReliabilityStartDateHousing, housingReliabilityEndtDateHousing);

                        //housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val(moment(housingReliabilityEndtDateHousing).add(dCount5, 'days').format("YYYY-MM-DD")));
                        //housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val());
                        ///////////////////
                        /////holiday check////
                        var housingRelia31 = isHoliday(housingReliabilityEndtDateHousing);
                        housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val(housingRelia31));
                        housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val());

                        /////////////////Housing Trial/////////////
                        trialProductionStartDateHousing = $.trim($('#trialProductionStartDateHousing').val(moment(housingReliabilityStartDateHousing).add(-1, 'days').format("YYYY-MM-DD")));
                        console.log("trialProductionStartDateHousing :" + materialReceiveStartDateHousing);
                        trialProductionStartDateHousing = $.trim($('#trialProductionStartDateHousing').val());

                        if (trialProductionStartDateHousing == "Invalid date") {
                            var trialProductionStartDateHousing21 = $.trim($('#trialProductionStartDateHousing').val(""));
                        }
                        trialProductionStartDateHousing = $.trim($('#trialProductionStartDateHousing').val());

                        /////holiday check////
                        var trialMaterial31 = isHolidayPreviousDate(trialProductionStartDateHousing);
                        trialProductionStartDateHousing = $.trim($('#trialProductionStartDateHousing').val(trialMaterial31));
                        trialProductionStartDateHousing = $.trim($('#trialProductionStartDateHousing').val());
                        //////////////////////

                        trialProductionEndDateHousing = $.trim($('#trialProductionEndDateHousing').val(trialProductionStartDateHousing));
                        trialProductionEndDateHousing = $.trim($('#trialProductionEndDateHousing').val());

                        if (trialProductionEndDateHousing == "Invalid date") {
                            var trialProductionEndDateHousing21 = $.trim($('#trialProductionEndDateHousing').val(""));
                        }
                        trialProductionEndDateHousing = $.trim($('#trialProductionEndDateHousing').val());

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetTrialBProduction", "Production")',
                            data: "{ trialProductionStartDateHousing: '" + trialProductionStartDateHousing
                                + "', trialProductionEndDateHousing: '" + trialProductionEndDateHousing
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {
                                    if (dataList == "YES") {

                                        $("#housingTrialStartPara").show();
                                        $('#trialProductionStartDateHousing').attr("disabled", false);

                                    } else {
                                        $('#trialProductionStartDateHousing').attr("disabled", false);
                                        $("#housingTrialStartPara").hide();
                                    }
                                }//end of if
                            }
                        });

                        ///////////////Housing IQC////////////////////

                        iqcCompleteStartDateHousing = $.trim($('#iqcCompleteStartDateHousing').val(trialProductionStartDateHousing));
                        console.log("iqcCompleteStartDateHousing :" + iqcCompleteStartDateHousing);
                        iqcCompleteStartDateHousing = $.trim($('#iqcCompleteStartDateHousing').val());

                        if (iqcCompleteStartDateHousing == "Invalid date") {
                            var iqcCompleteStartDateHousing21 = $.trim($('#iqcCompleteStartDateHousing').val(""));
                        }
                        iqcCompleteStartDateHousing = $.trim($('#iqcCompleteStartDateHousing').val());
                        /////holiday check////
                        var housingIqc41 = isHoliday(iqcCompleteStartDateHousing);
                        iqcCompleteStartDateHousing = $.trim($('#iqcCompleteStartDateHousing').val(housingIqc41));
                        iqcCompleteStartDateHousing = $.trim($('#iqcCompleteStartDateHousing').val());

                        ////////////////////////////////
                        iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val(moment(iqcCompleteStartDateHousing).add(1, 'days').format("YYYY-MM-DD")));
                        iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val());

                        if (iqcCompleteEndDateHousing == "Invalid date") {
                            var iqcCompleteEndDateHousing21 = $.trim($('#iqcCompleteEndDateHousing').val(""));
                        }
                        iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val());

                        ///////////Add extra days for holiday///////////
                        //var dCount9 = getHolidayCount(iqcCompleteStartDateHousing, iqcCompleteEndDateHousing);

                        //iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val(moment(iqcCompleteEndDateHousing).add(dCount9, 'days').format("YYYY-MM-DD")));
                        //iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val());
                        /////////////////////

                        ///////holiday check////
                        //var housingIqc36 = isHoliday(iqcCompleteEndDateHousing);
                        //iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val(housingIqc36));
                        //iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val());
                        ////////////////////////

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetIqcCompleteDateBHousing", "Production")',
                            data: "{ iqcCompleteStartDateHousing: '" + iqcCompleteStartDateHousing
                                + "', iqcCompleteEndDateHousing: '" + iqcCompleteEndDateHousing
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {
                                    if (dataList == "YES") {

                                        $("#housingIqcStartPara").show();
                                        $('#iqcCompleteStartDateHousing').attr("disabled", false);

                                    } else {
                                        $('#iqcCompleteStartDateHousing').attr("disabled", false);
                                        $("#housingIqcStartPara").hide();
                                    }
                                }//end of if
                            }
                        });
                        /////////////////Housing Material/////////////
                        materialReceiveStartDateHousing = $.trim($('#materialReceiveStartDateHousing').val(moment(iqcCompleteStartDateHousing).add(-1, 'days').format("YYYY-MM-DD")));
                        console.log("materialReceiveStartDateHousing :" + materialReceiveStartDateHousing);
                        materialReceiveStartDateHousing = $.trim($('#materialReceiveStartDateHousing').val());

                        if (materialReceiveStartDateHousing == "Invalid date") {
                            var materialReceiveStartDateHousing21 = $.trim($('#materialReceiveStartDateHousing').val(""));
                        }
                        materialReceiveStartDateHousing = $.trim($('#materialReceiveStartDateHousing').val());

                        /////holiday check////
                        var housingMaterial41 = isHolidayPreviousDate(materialReceiveStartDateHousing);
                        materialReceiveStartDateHousing = $.trim($('#materialReceiveStartDateHousing').val(housingMaterial41));
                        materialReceiveStartDateHousing = $.trim($('#materialReceiveStartDateHousing').val());
                        //////////////////////

                        materialReceiveEndDateHousing = $.trim($('#materialReceiveEndDateHousing').val(materialReceiveStartDateHousing));
                        materialReceiveEndDateHousing = $.trim($('#materialReceiveEndDateHousing').val());

                        if (materialReceiveEndDateHousing == "Invalid date") {
                            var materialReceiveEndDateHousing21 = $.trim($('#materialReceiveEndDateHousing').val(""));
                        }
                        materialReceiveEndDateHousing = $.trim($('#materialReceiveEndDateHousing').val());

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetMaterialReceiveDateBHousing", "Production")',
                            data: "{ materialReceiveStartDateHousing: '" + materialReceiveStartDateHousing
                                + "', materialReceiveEndDateHousing: '" + materialReceiveEndDateHousing
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {
                                    if (dataList == "YES") {

                                        $("#housingMaterialStartPara").show();
                                        $('#materialReceiveStartDateHousing').attr("disabled", false);

                                    } else {
                                        $('#materialReceiveStartDateHousing').attr("disabled", false);
                                        $("#housingMaterialStartPara").hide();
                                    }
                                }//end of if
                            }
                        });
                    }//end of if
                    else if (houseChk == "false") {
                        $("#housingChkId").prop("checked", false);
                        $('#materialReceiveStartDateHousing').attr("disabled", true);
                        $('#materialReceiveEndDateHousing').attr("disabled", true);
                        $('#iqcCompleteStartDateHousing').attr("disabled", true);
                        $('#iqcCompleteEndDateHousing').attr("disabled", true);
                        $('#trialProductionStartDateHousing').attr("disabled", true);
                        $('#trialProductionEndDateHousing').attr("disabled", true);
                        $('#housingReliabilityStartDateHousing').attr("disabled", true);
                        $('#housingReliabilityEndtDateHousing').attr("disabled", true);
                        $('#housingMassProStartDateHousing').attr("disabled", true);
                        $('#housingMassProEndtDateHousing').attr("disabled", true);
                        $('#batteryHousing_TotalQuantity').attr("disabled", true);
                        $('#batteryHousing_PerDayCapacity').attr("disabled", true);
                        document.getElementById("housingMassLineInfo_chosen").disabled = true;

                        $('#materialReceiveStartDateHousing').val("");
                        $('#materialReceiveEndDateHousing').val("");
                        $('#iqcCompleteStartDateHousing').val("");
                        $('#iqcCompleteEndDateHousing').val("");
                        $('#trialProductionStartDateHousing').val("");
                        $('#trialProductionEndDateHousing').val("");
                        $('#housingReliabilityStartDateHousing').val("");
                        $('#housingReliabilityEndtDateHousing').val("");
                        $('#housingMassProStartDateHousing').val("");
                        $('#housingMassProEndtDateHousing').val("");
                        $('#batteryHousing_TotalQuantity').val("");
                        $('#batteryHousing_PerDayCapacity').val("");
                        $('#housingMassLineInfo').val("");
                        $("#housingAllLineInformation tbody.housingAllLineTBody").empty();
                        $("#housingAvailableLineInformation tbody.housingAvailableLineTBody").empty();
                    } ///end of husing else

                    //////Start of Battery SMT//////////
                    //   $("#smtChkId").on('change', function () {
                    if ($("#smtChkId").is(':checked')) {
                        $("#smtChkId").attr('value', 'true');
                        $("#smtChkId").prop("checked", true);
                    } else {
                        $("#smtChkId").attr('value', 'false');
                        $("#smtChkId").prop("checked", false);
                    }

                    smtChk = $('#smtChkId').val();
                    console.log("smtChk :" + smtChk);
                    //    });

                    if (smtChk == "true") {
                        $("#smtChkId").prop("checked", true);
                        //////smt mass production//////
                        massProductionStartDateBSmt = $.trim($('#massProductionStartDateBSmt').val(rnDConfirmEndDateBAssembly));
                        console.log("massProductionStartDateBSmt :" + massProductionStartDateBSmt);
                        massProductionStartDateBSmt = $.trim($('#massProductionStartDateBSmt').val());

                        if (massProductionStartDateBSmt == "Invalid date") {
                            var massProductionStartDateBSmt21 = $.trim($('#massProductionStartDateBSmt').val(""));
                        }
                        massProductionStartDateBSmt = $.trim($('#massProductionStartDateBSmt').val());

                        /////holiday check////
                        //var smtMassPro31 = isHoliday(massProductionStartDateBSmt);
                        //massProductionStartDateBSmt = $.trim($('#massProductionStartDateBSmt').val(smtMassPro31));
                        //massProductionStartDateBSmt = $.trim($('#massProductionStartDateBSmt').val());
                        //////////////////////

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetSmtMassBProduction", "Production")',
                            data: "{ massProductionStartDateBSmt: '" + massProductionStartDateBSmt
                                + "', massProductionEndDateBSmt: '" + massProductionStartDateBSmt
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {
                                    if (dataList == "YES") {

                                        $("#smtMassProStartPara").show();
                                        $('#massProductionStartDateBSmt').attr("disabled", false);

                                    } else {
                                        $('#massProductionStartDateBSmt').attr("disabled", false);
                                        $("#smtMassProStartPara").hide();
                                    }
                                }//end of if
                            }
                        });
                        /////////////SMT material////////////
                        materialReceiveStartDateBSmt = $.trim($('#materialReceiveStartDateBSmt').val(moment(materialStartDateBAssembly).add(-2, 'days').format("YYYY-MM-DD")));
                        console.log("materialReceiveStartDateBSmt :" + materialReceiveStartDateBSmt);
                        materialReceiveStartDateBSmt = $.trim($('#materialReceiveStartDateBSmt').val());

                        if (materialReceiveStartDateBSmt == "Invalid date") {
                            var materialReceiveStartDateBSmt11 = $.trim($('#materialReceiveStartDateBSmt').val(""));
                        }
                        materialReceiveStartDateBSmt = $.trim($('#materialReceiveStartDateBSmt').val());

                        ///////holiday check////
                        //var smtMaterial41 = isHolidayPreviousDate(materialReceiveStartDateBSmt);
                        //materialReceiveStartDateBSmt = $.trim($('#materialReceiveStartDateBSmt').val(smtMaterial41));
                        //materialReceiveStartDateBSmt = $.trim($('#materialReceiveStartDateBSmt').val());
                        ////////////////////////

                        materialReceiveEndDateBSmt = $.trim($('#materialReceiveEndDateBSmt').val(moment(materialReceiveStartDateBSmt).add(1, 'days').format("YYYY-MM-DD")));
                        materialReceiveEndDateBSmt = $.trim($('#materialReceiveEndDateBSmt').val());

                        if (materialReceiveEndDateBSmt == "Invalid date") {
                            var materialReceiveEndDateBSmt21 = $.trim($('#materialReceiveEndDateBSmt').val(""));
                        }
                        materialReceiveEndDateBSmt = $.trim($('#materialReceiveEndDateBSmt').val());

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetMaterialReceiveDateBSmt", "Production")',
                            data: "{ materialReceiveStartDateBSmt: '" + materialReceiveStartDateBSmt
                                + "', materialReceiveEndDateBSmt: '" + materialReceiveEndDateBSmt
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);

                                if (dataList == "YES") {
                                    if (dataList == "YES") {

                                        $("#smtMaterialStartPara").show();
                                        $('#materialReceiveStartDateBSmt').attr("disabled", false);

                                    } else {
                                        $('#materialReceiveStartDateBSmt').attr("disabled", false);
                                        $("#smtMaterialStartPara").hide();
                                    }
                                }//end of if
                            }
                        });

                        ////smt IQC////////
                        iqcCompleteStartDateBSmt = $.trim($('#iqcCompleteStartDateBSmt').val(materialReceiveEndDateBSmt));
                        console.log("iqcCompleteStartDateBSmt :" + iqcCompleteStartDateBSmt);
                        iqcCompleteStartDateBSmt = $.trim($('#iqcCompleteStartDateBSmt').val());

                        if (iqcCompleteStartDateBSmt == "Invalid date") {
                            var iqcCompleteStartDateBSmt21 = $.trim($('#iqcCompleteStartDateBSmt').val(""));
                        }
                        iqcCompleteStartDateBSmt = $.trim($('#iqcCompleteStartDateBSmt').val());
                        /////holiday check////
                        //var smtIqc41 = isHoliday(iqcCompleteStartDateBSmt);
                        //iqcCompleteStartDateBSmt = $.trim($('#iqcCompleteStartDateBSmt').val(smtIqc41));
                        //iqcCompleteStartDateBSmt = $.trim($('#iqcCompleteStartDateBSmt').val());

                        ////////////////////////////////
                        iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val(moment(iqcCompleteStartDateBSmt).add(1, 'days').format("YYYY-MM-DD")));
                        iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val());

                        if (iqcCompleteEndDateBSmt == "Invalid date") {
                            var iqcCompleteEndDateBSmt21 = $.trim($('#iqcCompleteEndDateBSmt').val(""));
                        }
                        iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val());

                        /////////Add extra days for holiday///////////
                        //var dCount48 = getHolidayCount(iqcCompleteStartDateBSmt, iqcCompleteEndDateBSmt);

                        //iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val(moment(iqcCompleteEndDateBSmt).add(dCount48, 'days').format("YYYY-MM-DD")));
                        //iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val());
                        ///////////////////

                        /////holiday check////
                        //var smtIqc23 = isHoliday(iqcCompleteEndDateBSmt);
                        //iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val(smtIqc23));
                        //iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val());
                        //////////////////////

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetIqcCompleteDateBSmt", "Production")',
                            data: "{ iqcCompleteStartDateBSmt: '" + iqcCompleteStartDateBSmt
                                + "', iqcCompleteEndDateBSmt: '" + iqcCompleteEndDateBSmt
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);


                                if (dataList == "YES") {
                                    if (dataList == "YES") {

                                        $("#smtIqcStartPara").show();
                                        $('#iqcCompleteStartDateBSmt').attr("disabled", false);

                                    } else {
                                        $('#iqcCompleteStartDateBSmt').attr("disabled", false);
                                        $("#smtIqcStartPara").hide();
                                    }
                                }//end of if
                            }
                        });

                        ////smt trial///////
                        trialProductionStartDateBSmt = $.trim($('#trialProductionStartDateBSmt').val(iqcCompleteStartDateBSmt));
                        console.log("trialProductionStartDateBSmt :" + trialProductionStartDateBSmt);
                        trialProductionStartDateBSmt = $.trim($('#trialProductionStartDateBSmt').val());

                        if (trialProductionStartDateBSmt == "Invalid date") {
                            var trialProductionStartDateBSmt21 = $.trim($('#trialProductionStartDateBSmt').val(""));
                        }
                        trialProductionStartDateBSmt = $.trim($('#trialProductionStartDateBSmt').val());
                        /////holiday check////
                        //var smtTrial19 = isHoliday(trialProductionStartDateBSmt);
                        //trialProductionStartDateBSmt = $.trim($('#trialProductionStartDateBSmt').val(smtTrial19));
                        //trialProductionStartDateBSmt = $.trim($('#trialProductionStartDateBSmt').val());

                        ////////////////////////////////
                        trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val(moment(trialProductionStartDateBSmt).add(1, 'days').format("YYYY-MM-DD")));
                        trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val());

                        if (trialProductionEndDateBSmt == "Invalid date") {
                            var trialProductionEndDateBSmt21 = $.trim($('#trialProductionEndDateBSmt').val(""));
                        }
                        trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val());

                        /////////Add extra days for holiday///////////
                        //var dCount35 = getHolidayCount(trialProductionStartDateBSmt, trialProductionEndDateBSmt);

                        //trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val(moment(trialProductionEndDateBSmt).add(dCount35, 'days').format("YYYY-MM-DD")));
                        //trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val());
                        ///////////////////

                        /////holiday check////
                        //var smtTrial25 = isHoliday(trialProductionEndDateBSmt);
                        //trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val(smtTrial25));
                        //trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val());
                        //////////////////////

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetTrialProductionDateBSmt", "Production")',
                            data: "{ trialProductionStartDateBSmt: '" + trialProductionStartDateBSmt
                                + "', trialProductionEndDateBSmt: '" + trialProductionEndDateBSmt
                                + "'}",
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            async: false,
                            success: function (data) {

                                console.log("data :" + data);
                                var dataList = [];
                                for (var x in data) {
                                    dataList = data[x];
                                }
                                console.log(dataList);
                                if (dataList == "YES") {
                                    if (dataList == "YES") {

                                        $("#smtTrialStartPara").show();
                                        $('#trialProductionStartDateBSmt').attr("disabled", false);

                                    } else {
                                        $('#trialProductionStartDateBSmt').attr("disabled", false);
                                        $("#smtTrialStartPara").hide();
                                    }
                                }//end of if
                            }
                        });

                    } else if (smtChk == "false") {
                        $("#smtChkId").prop("checked", false);

                        $('#materialReceiveStartDateBSmt').attr("disabled", true);
                        $('#materialReceiveEndDateBSmt').attr("disabled", true);
                        $('#iqcCompleteStartDateBSmt').attr("disabled", true);
                        $('#iqcCompleteEndDateBSmt').attr("disabled", true);
                        $('#trialProductionStartDateBSmt').attr("disabled", true);
                        $('#trialProductionEndDateBSmt').attr("disabled", true);
                        $('#massProductionStartDateBSmt').attr("disabled", true);
                        $('#massProductionEndDateBSmt').attr("disabled", true);
                        $('#batterySmt_TotalQuantity').attr("disabled", true);
                        $('#batterySmt_PerDayCapacity').attr("disabled", true);
                        document.getElementById("smtMassLineInfo_chosen").disabled = true;

                        $('#materialReceiveStartDateBSmt').val("");
                        $('#materialReceiveEndDateBSmt').val("");
                        $('#iqcCompleteStartDateBSmt').val("");
                        $('#iqcCompleteEndDateBSmt').val("");
                        $('#trialProductionStartDateBSmt').val("");
                        $('#trialProductionEndDateBSmt').val("");
                        $('#massProductionStartDateBSmt').val("");
                        $('#massProductionEndDateBSmt').val("");
                        $('#batterySmt_TotalQuantity').val("");
                        $('#batterySmt_PerDayCapacity').val("");
                        $('#smtMassLineInfo').val("");
                        $("#smtAllLineInformation tbody.smAllLineTBody").empty();
                        $("#smtAvailableLineInformation tbody.smAvailableLineTBody").empty();
                    }
                    //  hide1();
                    $('#loading').hide();
                }, function () {

                    alertify.error('Cancelled');
                    /////write below//////
                    $('#materialReceiveStartDateBSmt').val("");
                    $('#materialReceiveEndDateBSmt').val("");
                    $('#iqcCompleteStartDateBSmt').val("");
                    $('#iqcCompleteEndDateBSmt').val("");
                    $('#trialProductionStartDateBSmt').val("");
                    $('#trialProductionEndDateBSmt').val("");
                    $('#massProductionStartDateBSmt').val("");
                    $('#massProductionEndDateBSmt').val("");

                    $('#materialReceiveStartDateHousing').val("");
                    $('#materialReceiveEndDateHousing').val("");
                    $('#iqcCompleteStartDateHousing').val("");
                    $('#iqcCompleteEndDateHousing').val("");
                    $('#trialProductionStartDateHousing').val("");
                    $('#trialProductionEndDateHousing').val("");
                    $('#housingReliabilityStartDateHousing').val("");
                    $('#housingReliabilityEndtDateHousing').val("");
                    $('#housingMassProStartDateHousing').val("");
                    $('#housingMassProEndtDateHousing').val("");

                    $('#materialReceiveStartDateBattery').val("");
                    $('#materialReceiveEndDateBattery').val("");
                    $('#iqcCompleteStartDateBattery').val("");
                    $('#iqcCompleteEndDateBattery').val("");
                    $('#trialProductionStartDateBattery').val("");
                    $('#trialProductionEndDateBattery').val("");
                    $('#batteryReliabilityTestStartDate').val("");
                    $('#batteryReliabilityTestEndDate').val("");
                    $('#batteryMassProductionStartDate').val("");
                    $('#batteryMassProductionEndDate').val("");
                    $('#batteryAgingTestStartDate').val("");
                    $('#batteryAgingTestEndDate').val("");

                    $('#materialStartDateBAssembly').val("");
                    $('#materialReceiveEndDateBAssembly').val("");
                    $('#iqcCompleteStartDateBAssembly').val("");
                    $('#iqcCompleteEndDateBAssembly').val("");
                    $('#trialProductionStartDateBAssembly').val("");
                    $('#trialProductionEndDateBAssembly').val("");
                    $('#softwareConfirmationStartDate').val("");
                    $('#softwareConfirmationEndDate').val("");
                    $('#rnDConfirmStartDateBAssembly').val("");
                    $('#rnDConfirmEndDateBAssembly').val("");
                    $('#assembStartDateBAssembly').val("");
                    $('#assembEndDateBAssembly').val("");
                    $('#packingMassProductionStartDateBAssembly').val("");
                    $('#packingMassProductionEndDateBAssembly').val("");

                    //hide1();
                    $('#loading').hide();
                }); ////end of alertify

            }// if (materialAssembly11 == true) {

            ///////////////Other wise//////
            //materialStartDateBAssembly = $.trim($('#materialStartDateBAssembly').val());
            materialReceiveEndDateBAssembly = $.trim($('#materialReceiveEndDateBAssembly').val(moment(materialStartDateBAssembly).add(1, 'days').format("YYYY-MM-DD")));
            materialReceiveEndDateBAssembly = $.trim($('#materialReceiveEndDateBAssembly').val());

            if (materialReceiveEndDateBAssembly == "Invalid date") {
                var materialReceiveEndDateBAssembly11 = $.trim($('#materialReceiveEndDateBAssembly').val(""));
            }

            materialReceiveEndDateBAssembly = $.trim($('#materialReceiveEndDateBAssembly').val());
            /////////////////////////////
            var dCount1 = getHolidayCount(materialStartDateBAssembly, materialReceiveEndDateBAssembly);

            materialReceiveEndDateBAssembly = $.trim($('#materialReceiveEndDateBAssembly').val(moment(materialReceiveEndDateBAssembly).add(dCount1, 'days').format("YYYY-MM-DD")));
            materialReceiveEndDateBAssembly = $.trim($('#materialReceiveEndDateBAssembly').val());

            ////////////////
            var mdAssembly21 = isHoliday(materialReceiveEndDateBAssembly);
            materialReceiveEndDateBAssembly = $.trim($('#materialReceiveEndDateBAssembly').val(mdAssembly21));
            materialReceiveEndDateBAssembly = $.trim($('#materialReceiveEndDateBAssembly').val());
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetMaterialReceiveDateBAssembly", "Production")',
                data: "{ materialStartDateBAssembly: '" + materialStartDateBAssembly
                    + "', materialReceiveEndDateBAssembly: '" + materialReceiveEndDateBAssembly
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);

                    if (dataList == "YES") {
                        if (dataList == "YES") {
                            $("#materialAssemblyStartPara").show();
                            // $('#materialStartDateBAssembly').attr("disabled", false);

                        } else {
                            $("#materialAssemblyStartPara").hide();
                        }
                    }
                }
            });
            ///////////////////Assembly IQC/////////////////
            iqcCompleteStartDateBAssembly = $.trim($('#iqcCompleteStartDateBAssembly').val(materialReceiveEndDateBAssembly));
            console.log("iqcCompleteStartDateBAssembly :" + iqcCompleteStartDateBAssembly);
            iqcCompleteStartDateBAssembly = $.trim($('#iqcCompleteStartDateBAssembly').val());

            if (iqcCompleteStartDateBAssembly == "Invalid date") {
                var iqcCompleteStartDateBAssembly11 = $.trim($('#iqcCompleteStartDateBAssembly').val(""));
            }
            iqcCompleteStartDateBAssembly = $.trim($('#iqcCompleteStartDateBAssembly').val());

            //holiday check//
            var iqcAssembly11 = isHoliday(iqcCompleteStartDateBAssembly);
            iqcCompleteStartDateBAssembly = $.trim($('#iqcCompleteStartDateBAssembly').val(iqcAssembly11));
            iqcCompleteStartDateBAssembly = $.trim($('#iqcCompleteStartDateBAssembly').val());
            /////////////////

            iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val(moment(iqcCompleteStartDateBAssembly).add(1, 'days').format("YYYY-MM-DD")));
            iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val());

            if (iqcCompleteEndDateBAssembly == "Invalid date") {
                var iqcCompleteEndDateBAssembly11 = $.trim($('#iqcCompleteEndDateBAssembly').val(""));
            }
            iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val());

            /////////Add extra days for holiday///////////
            var dCount20 = getHolidayCount(iqcCompleteStartDateBAssembly, iqcCompleteEndDateBAssembly);

            iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val(moment(iqcCompleteEndDateBAssembly).add(dCount20, 'days').format("YYYY-MM-DD")));
            iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val());
            /////////////////////////////////////////////

            /////holiday check////
            var iqcAssembly21 = isHoliday(iqcCompleteEndDateBAssembly);
            iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val(iqcAssembly21));
            iqcCompleteEndDateBAssembly = $.trim($('#iqcCompleteEndDateBAssembly').val());
            //////////////////////

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetIqcCompleteDateBAssembly", "Production")',
                data: "{ iqcCompleteStartDateBAssembly: '" + iqcCompleteStartDateBAssembly
                    + "', iqcCompleteEndDateBAssembly: '" + iqcCompleteEndDateBAssembly
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);

                    if (dataList == "YES") {

                        $("#iqcAssemblyStartPara").show();
                        $('#iqcCompleteStartDateBAssembly').attr("disabled", false);

                    } else {
                        $("#iqcAssemblyStartPara").hide();
                    }
                }
            });
            ////////////////Assembly Trial///////////////
            trialProductionStartDateBAssembly = $.trim($('#trialProductionStartDateBAssembly').val(iqcCompleteStartDateBAssembly));
            console.log("trialProductionStartDateBAssembly :" + trialProductionStartDateBAssembly);
            trialProductionStartDateBAssembly = $.trim($('#trialProductionStartDateBAssembly').val());

            if (trialProductionStartDateBAssembly == "Invalid date") {
                var trialProductionStartDateBAssembly11 = $.trim($('#trialProductionStartDateBAssembly').val(""));
            }
            trialProductionStartDateBAssembly = $.trim($('#trialProductionStartDateBAssembly').val());

            /////holiday check////
            var trialAssembly11 = isHoliday(trialProductionStartDateBAssembly);
            trialProductionStartDateBAssembly = $.trim($('#trialProductionStartDateBAssembly').val(trialAssembly11));
            trialProductionStartDateBAssembly = $.trim($('#trialProductionStartDateBAssembly').val());
            //////////////////////
            trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val(iqcCompleteStartDateBAssembly));
            trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val());

            if (trialProductionEndDateBAssembly == "Invalid date") {
                var trialProductionEndDateBAssembly11 = $.trim($('#trialProductionEndDateBAssembly').val(""));
            }
            trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val());


            ////////////////////////////
            var dCount2 = getHolidayCount(trialProductionStartDateBAssembly, trialProductionEndDateBAssembly);

            trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val(moment(trialProductionEndDateBAssembly).add(dCount2, 'days').format("YYYY-MM-DD")));
            trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val());

            ////////////////////////////
            /////holiday check////
            var trialAssembly21 = isHoliday(trialProductionEndDateBAssembly);
            trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val(trialAssembly21));
            trialProductionEndDateBAssembly = $.trim($('#trialProductionEndDateBAssembly').val());
            //////////////////////
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetTrialProductionDateBAssembly", "Production")',
                data: "{ trialProductionStartDateBAssembly: '" + trialProductionStartDateBAssembly
                    + "', trialProductionEndDateBAssembly: '" + trialProductionEndDateBAssembly
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);

                    if (dataList == "YES") {
                        if (dataList == "YES") {

                            $("#trialAssemblyStartPara").show();
                            $('#trialProductionStartDateBAssembly').attr("disabled", false);

                        } else {
                            $('#trialProductionStartDateBAssembly').attr("disabled", false);
                            $("#trialAssemblyStartPara").hide();
                        }
                    }//end of if
                }
            });

            /////////////Software///////////////
            softwareConfirmationStartDate = $.trim($('#softwareConfirmationStartDate').val(moment(trialProductionStartDateBAssembly).add(1, 'days').format("YYYY-MM-DD")));

            console.log("softwareConfirmationStartDate :" + softwareConfirmationStartDate);
            softwareConfirmationStartDate = $.trim($('#softwareConfirmationStartDate').val());

            if (softwareConfirmationStartDate == "Invalid date") {
                var softwareConfirmationStartDate11 = $.trim($('#softwareConfirmationStartDate').val(""));
            }
            softwareConfirmationStartDate = $.trim($('#softwareConfirmationStartDate').val());


            /////holiday check////
            var software11 = isHoliday(softwareConfirmationStartDate);
            softwareConfirmationStartDate = $.trim($('#softwareConfirmationStartDate').val(software11));
            softwareConfirmationStartDate = $.trim($('#softwareConfirmationStartDate').val());
            //////////////////////
            softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val(moment(softwareConfirmationStartDate).add(1, 'days').format("YYYY-MM-DD")));
            softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val());

            if (softwareConfirmationEndDate == "Invalid date") {
                var softwareConfirmationEndDate11 = $.trim($('#softwareConfirmationEndDate').val(""));
            }
            softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val());
            ////////////////////////////
            var dCount31 = getHolidayCount(softwareConfirmationStartDate, softwareConfirmationEndDate);

            softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val(moment(softwareConfirmationEndDate).add(dCount31, 'days').format("YYYY-MM-DD")));
            softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val());

            ////////////////////////////

            /////holiday check////
            var software21 = isHoliday(softwareConfirmationEndDate);
            softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val(software21));
            softwareConfirmationEndDate = $.trim($('#softwareConfirmationEndDate').val());
            //////////////////////

            /////////////Assembly RND///////////////
            rnDConfirmStartDateBAssembly = $.trim($('#rnDConfirmStartDateBAssembly').val(softwareConfirmationStartDate));

            console.log("rnDConfirmStartDateBAssembly :" + rnDConfirmStartDateBAssembly);
            rnDConfirmStartDateBAssembly = $.trim($('#rnDConfirmStartDateBAssembly').val());

            if (rnDConfirmStartDateBAssembly == "Invalid date") {
                var rnDConfirmStartDateBAssembly11 = $.trim($('#rnDConfirmStartDateBAssembly').val(""));
            }
            rnDConfirmStartDateBAssembly = $.trim($('#rnDConfirmStartDateBAssembly').val());


            /////holiday check////
            var rndAssembly11 = isHoliday(rnDConfirmStartDateBAssembly);
            rnDConfirmStartDateBAssembly = $.trim($('#rnDConfirmStartDateBAssembly').val(rndAssembly11));
            rnDConfirmStartDateBAssembly = $.trim($('#rnDConfirmStartDateBAssembly').val());
            //////////////////////
            rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val(moment(rnDConfirmStartDateBAssembly).add(3, 'days').format("YYYY-MM-DD")));
            rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val());

            if (rnDConfirmEndDateBAssembly == "Invalid date") {
                var rnDConfirmEndDateBAssembly11 = $.trim($('#rnDConfirmEndDateBAssembly').val(""));
            }
            rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val());
            ////////////////////////////
            var dCount3 = getHolidayCount(rnDConfirmStartDateBAssembly, rnDConfirmEndDateBAssembly);

            rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val(moment(rnDConfirmEndDateBAssembly).add(dCount3, 'days').format("YYYY-MM-DD")));
            rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val());

            ////////////////////////////

            /////holiday check////
            var rndAssembly21 = isHoliday(rnDConfirmEndDateBAssembly);
            rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val(rndAssembly21));
            rnDConfirmEndDateBAssembly = $.trim($('#rnDConfirmEndDateBAssembly').val());
            //////////////////////
            //////////////Assembly///////////////////
            assembStartDateBAssembly = $.trim($('#assembStartDateBAssembly').val(moment(rnDConfirmEndDateBAssembly).add(1, 'days').format("YYYY-MM-DD")));

            console.log("assembStartDateBAssembly :" + assembStartDateBAssembly);
            assembStartDateBAssembly = $.trim($('#assembStartDateBAssembly').val());

            if (assembStartDateBAssembly == "Invalid date") {
                var assembStartDateBAssembly11 = $.trim($('#assembStartDateBAssembly').val(""));
            }
            assembStartDateBAssembly = $.trim($('#assembStartDateBAssembly').val());


            /////holiday check////
            var assembly11 = isHoliday(assembStartDateBAssembly);
            assembStartDateBAssembly = $.trim($('#assembStartDateBAssembly').val(assembly11));
            assembStartDateBAssembly = $.trim($('#assembStartDateBAssembly').val());
            //////////////////////

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetAssemblyBProduction", "Production")',
                data: "{ assembStartDateBAssembly: '" + assembStartDateBAssembly
                    + "', assembEndDateBAssembly: '" + assembStartDateBAssembly
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);

                    if (dataList == "YES") {
                        if (dataList == "YES") {

                            $("#assemblyMassProStartPara").show();
                            $('#assembStartDateBAssembly').attr("disabled", false);

                        } else {
                            $('#assembStartDateBAssembly').attr("disabled", false);
                            $("#assemblyMassProStartPara").hide();
                        }
                    }//end of if
                }
            });

            //////////////packing///////////////////
            packingMassProductionStartDateBAssembly = $.trim($('#packingMassProductionStartDateBAssembly').val(moment(assembStartDateBAssembly).add(1, 'days').format("YYYY-MM-DD")));

            console.log("packingMassProductionStartDateBAssembly :" + packingMassProductionStartDateBAssembly);
            packingMassProductionStartDateBAssembly = $.trim($('#packingMassProductionStartDateBAssembly').val());

            if (packingMassProductionStartDateBAssembly == "Invalid date") {
                var packingMassProductionStartDateBAssembly11 = $.trim($('#packingMassProductionStartDateBAssembly').val(""));
            }
            packingMassProductionStartDateBAssembly = $.trim($('#packingMassProductionStartDateBAssembly').val());

            /////holiday check////
            var packing11 = isHoliday(packingMassProductionStartDateBAssembly);
            packingMassProductionStartDateBAssembly = $.trim($('#packingMassProductionStartDateBAssembly').val(packing11));
            packingMassProductionStartDateBAssembly = $.trim($('#packingMassProductionStartDateBAssembly').val());
            //////////////////////

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetPackingBProduction", "Production")',
                data: "{ packingMassProductionStartDateBAssembly: '" + packingMassProductionStartDateBAssembly
                    + "', packingMassProductionEndDateBAssembly: '" + packingMassProductionStartDateBAssembly
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log("data :" + data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    console.log(dataList);

                    if (dataList == "YES") {
                        if (dataList == "YES") {

                            $("#packingMassProStartPara").show();
                            $('#packingMassProductionStartDateBAssembly').attr("disabled", false);

                        } else {
                            $('#packingMassProductionStartDateBAssembly').attr("disabled", false);
                            $("#packingMassProStartPara").hide();
                        }
                    }//end of if
                }
            });
            //////////////////Battery///////////////
            // $("#batteryChkId").on('change', function () {
            if ($("#batteryChkId").is(':checked')) {
                $("#batteryChkId").attr('value', 'true');
                $("#batteryChkId").prop("checked", true);
            }
            else {
                $("#batteryChkId").attr('value', 'false');
                $("#batteryChkId").prop("checked", false);
            }

            batteryChk = $('#batteryChkId').val();
            console.log("batteryChk :" + batteryChk);
            //});

            if (batteryChk == "true") {
                $("#batteryChkId").prop("checked", true);
                /////////////////Aging///////////
                batteryAgingTestStartDate = $.trim($('#batteryAgingTestStartDate').val(moment(softwareConfirmationEndDate).add(1, 'days').format("YYYY-MM-DD")));
                batteryAgingTestStartDate = $.trim($('#batteryAgingTestStartDate').val());

                if (batteryAgingTestStartDate == "Invalid date") {
                    var batteryAgingTestStartDate11 = $.trim($('#batteryAgingTestStartDate').val(""));
                }
                batteryAgingTestStartDate = $.trim($('#batteryAgingTestStartDate').val());
                /////holiday check////

                var aging11 = isHoliday(batteryAgingTestStartDate);
                batteryAgingTestStartDate = $.trim($('#batteryAgingTestStartDate').val(aging11));
                batteryAgingTestStartDate = $.trim($('#batteryAgingTestStartDate').val());
                //////////////////////

                batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val(moment(batteryAgingTestStartDate).add(2, 'days').format("YYYY-MM-DD")));
                batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val());

                if (batteryAgingTestEndDate == "Invalid date") {
                    var batteryAgingTestEndDate11 = $.trim($('#batteryAgingTestEndDate').val(""));
                }
                batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val());

                /////////Add extra days for holiday///////////
                var dCount19 = getHolidayCount(batteryAgingTestStartDate, batteryAgingTestEndDate);

                batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val(moment(batteryAgingTestEndDate).add(dCount19, 'days').format("YYYY-MM-DD")));
                batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val());
                ///////////////////
                /////holiday check////
                var aging21 = isHoliday(batteryAgingTestEndDate);
                batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val(aging21));
                batteryAgingTestEndDate = $.trim($('#batteryAgingTestEndDate').val());

                /////////////////end aging////////////
                ////////////Battery Mass Production//////////

                batteryMassProductionStartDate = $.trim($('#batteryMassProductionStartDate').val(softwareConfirmationEndDate));
                batteryMassProductionStartDate = $.trim($('#batteryMassProductionStartDate').val());
                if (batteryMassProductionStartDate == "Invalid date") {
                    var batteryMassProductionStartDate11 = $.trim($('#batteryMassProductionStartDate').val(""));
                }
                batteryMassProductionStartDate = $.trim($('#batteryMassProductionStartDate').val());

                /////holiday check////
                var batteryMassl11 = isHoliday(batteryMassProductionStartDate);
                batteryMassProductionStartDate = $.trim($('#batteryMassProductionStartDate').val(batteryMassl11));
                batteryMassProductionStartDate = $.trim($('#batteryMassProductionStartDate').val());
                //////////////////////

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetBatteryMassProduction", "Production")',
                    data: "{ batteryMassProductionStartDate: '" + batteryMassProductionStartDate
                        + "', batteryMassProductionEndDate: '" + batteryMassProductionStartDate
                        + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    async: false,
                    success: function (data) {

                        console.log("data :" + data);
                        var dataList = [];
                        for (var x in data) {
                            dataList = data[x];
                        }
                        console.log(dataList);

                        if (dataList == "YES") {
                            if (dataList == "YES") {

                                $("#batteryMassProStartPara").show();
                                $('#batteryMassProductionStartDate').attr("disabled", false);

                            } else {
                                $('#batteryMassProductionStartDate').attr("disabled", false);
                                $("#batteryMassProStartPara").hide();
                            }
                        }//end of if
                    }
                });
                ///////////////Battery Reliability Test////////////////////

                batteryReliabilityTestStartDate = $.trim($('#batteryReliabilityTestStartDate').val(materialStartDateBAssembly));
                console.log("batteryReliabilityTestStartDate :" + batteryReliabilityTestStartDate);
                batteryReliabilityTestStartDate = $.trim($('#batteryReliabilityTestStartDate').val());

                if (batteryReliabilityTestStartDate == "Invalid date") {
                    var batteryReliabilityTestStartDate11 = $.trim($('#batteryReliabilityTestStartDate').val(""));
                }
                batteryReliabilityTestStartDate = $.trim($('#batteryReliabilityTestStartDate').val());
                /////holiday check////
                var batReliability11 = isHoliday(batteryReliabilityTestStartDate);
                batteryReliabilityTestStartDate = $.trim($('#batteryReliabilityTestStartDate').val(batReliability11));
                batteryReliabilityTestStartDate = $.trim($('#batteryReliabilityTestStartDate').val());

                ////////////////////////////////
                batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val(moment(batteryReliabilityTestStartDate).add(2, 'days').format("YYYY-MM-DD")));
                batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val());

                if (batteryReliabilityTestEndDate == "Invalid date") {
                    var batteryReliabilityTestEndDate11 = $.trim($('#batteryReliabilityTestEndDate').val(""));
                }
                batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val());

                /////////Add extra days for holiday///////////
                var dCount17 = getHolidayCount(batteryReliabilityTestStartDate, batteryReliabilityTestEndDate);

                batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val(moment(batteryReliabilityTestEndDate).add(dCount17, 'days').format("YYYY-MM-DD")));
                batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val());
                ///////////////////

                /////holiday check////
                var batReliability21 = isHoliday(batteryReliabilityTestEndDate);
                batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val(batReliability21));
                batteryReliabilityTestEndDate = $.trim($('#batteryReliabilityTestEndDate').val());
                ///////////End reliability///////////


                ///////////////Trial production////////////////////


                trialProductionStartDateBattery = $.trim($('#trialProductionStartDateBattery').val(moment(batteryReliabilityTestStartDate).add(-1, 'days').format("YYYY-MM-DD")));
                console.log("trialProductionStartDateBattery :" + trialProductionStartDateBattery);
                trialProductionStartDateBattery = $.trim($('#trialProductionStartDateBattery').val());

                if (trialProductionStartDateBattery == "Invalid date") {
                    var trialProductionStartDateBattery11 = $.trim($('#trialProductionStartDateBattery').val(""));
                }
                trialProductionStartDateBattery = $.trim($('#trialProductionStartDateBattery').val());

                /////holiday check////
                var trialBatteryl11 = isHolidayPreviousDate(trialProductionStartDateBattery);
                trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val(trialBatteryl11));
                trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val());
                //////////////////////

                trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val(trialProductionStartDateBattery));
                trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val());

                if (trialProductionEndDateBattery == "Invalid date") {
                    var trialProductionEndDateBattery11 = $.trim($('#trialProductionEndDateBattery').val(""));
                }
                trialProductionEndDateBattery = $.trim($('#trialProductionEndDateBattery').val());
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetTrialProductionDateBattery", "Production")',
                    data: "{ trialProductionStartDateBattery: '" + trialProductionStartDateBattery
                        + "', trialProductionEndDateBattery: '" + trialProductionEndDateBattery
                        + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    async: false,
                    success: function (data) {

                        console.log("data :" + data);
                        var dataList = [];
                        for (var x in data) {
                            dataList = data[x];
                        }
                        console.log(dataList);


                        if (dataList == "YES") {
                            if (dataList == "YES") {

                                $("#batteryTrialStartPara").show();
                                $('#trialProductionStartDateBattery').attr("disabled", false);

                            } else {
                                $('#trialProductionStartDateBattery').attr("disabled", false);
                                $("#batteryTrialStartPara").hide();
                            }
                        }//end of if
                    }
                });
                ///////////////////Battery IQC/////////////////
                iqcCompleteStartDateBattery = $.trim($('#iqcCompleteStartDateBattery').val(trialProductionStartDateBattery));
                console.log("iqcCompleteStartDateBattery :" + iqcCompleteStartDateBattery);
                iqcCompleteStartDateBattery = $.trim($('#iqcCompleteStartDateBattery').val());

                if (iqcCompleteStartDateBattery == "Invalid date") {
                    var iqcCompleteStartDateBattery11 = $.trim($('#iqcCompleteStartDateBattery').val(""));
                }
                iqcCompleteStartDateBattery = $.trim($('#iqcCompleteStartDateBattery').val());

                //holiday check//
                var iqcBattery11 = isHoliday(iqcCompleteStartDateBattery);
                iqcCompleteStartDateBattery = $.trim($('#iqcCompleteStartDateBattery').val(iqcBattery11));
                iqcCompleteStartDateBattery = $.trim($('#iqcCompleteStartDateBattery').val());
                /////////////////

                iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val(moment(iqcCompleteStartDateBattery).add(1, 'days').format("YYYY-MM-DD")));
                iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val());

                if (iqcCompleteEndDateBattery == "Invalid date") {
                    var iqcCompleteEndDateBattery11 = $.trim($('#iqcCompleteEndDateBattery').val(""));
                }
                iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val());

                /////////Add extra days for holiday///////////
                var dCount22 = getHolidayCount(iqcCompleteStartDateBattery, iqcCompleteEndDateBattery);

                iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val(moment(iqcCompleteEndDateBattery).add(dCount22, 'days').format("YYYY-MM-DD")));
                iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val());
                /////////////////////////////////////////////

                /////holiday check////
                var iqcBattery1 = isHoliday(iqcCompleteEndDateBattery);
                iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val(iqcBattery1));
                iqcCompleteEndDateBattery = $.trim($('#iqcCompleteEndDateBattery').val());
                //////////////////////

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetIqcCompleteDateBattery", "Production")',
                    data: "{ iqcCompleteStartDateBattery: '" + iqcCompleteStartDateBattery
                        + "', iqcCompleteEndDateBattery: '" + iqcCompleteEndDateBattery
                        + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    async: false,
                    success: function (data) {

                        console.log("data :" + data);
                        var dataList = [];
                        for (var x in data) {
                            dataList = data[x];
                        }
                        console.log(dataList);

                        if (dataList == "YES") {
                            if (dataList == "YES") {

                                $("#batteryIqcStartPara").show();
                                $('#iqcCompleteStartDateBattery').attr("disabled", false);

                            } else {
                                $('#iqcCompleteStartDateBattery').attr("disabled", false);
                                $("#batteryIqcStartPara").hide();
                            }
                        }//end of if
                    }
                });

                ///////////////////Battery Material/////////////////
                materialReceiveStartDateBattery = $.trim($('#materialReceiveStartDateBattery').val(moment(iqcCompleteStartDateBattery).add(-1, 'days').format("YYYY-MM-DD")));
                console.log("materialReceiveStartDateBattery :" + materialReceiveStartDateBattery);
                materialReceiveStartDateBattery = $.trim($('#materialReceiveStartDateBattery').val());

                if (materialReceiveStartDateBattery == "Invalid date") {
                    var materialReceiveStartDateBattery11 = $.trim($('#materialReceiveStartDateBattery').val(""));
                }
                materialReceiveStartDateBattery = $.trim($('#materialReceiveStartDateBattery').val());

                /////holiday check////
                var batterMaterial11 = isHolidayPreviousDate(materialReceiveStartDateBattery);
                materialReceiveStartDateBattery = $.trim($('#materialReceiveStartDateBattery').val(batterMaterial11));
                materialReceiveStartDateBattery = $.trim($('#materialReceiveStartDateBattery').val());
                //////////////////////

                materialReceiveEndDateBattery = $.trim($('#materialReceiveEndDateBattery').val(materialReceiveStartDateBattery));
                materialReceiveEndDateBattery = $.trim($('#materialReceiveEndDateBattery').val());

                if (materialReceiveEndDateBattery == "Invalid date") {
                    var materialReceiveEndDateBattery11 = $.trim($('#materialReceiveEndDateBattery').val(""));
                }
                materialReceiveEndDateBattery = $.trim($('#materialReceiveEndDateBattery').val());

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetMaterialReceiveDateBattery", "Production")',
                    data: "{ materialReceiveStartDateBattery: '" + materialReceiveStartDateBattery
                        + "', materialReceiveEndDateBattery: '" + materialReceiveEndDateBattery
                        + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    async: false,
                    success: function (data) {

                        console.log("data :" + data);
                        var dataList = [];
                        for (var x in data) {
                            dataList = data[x];
                        }
                        console.log(dataList);

                        if (dataList == "YES") {
                            if (dataList == "YES") {

                                $("#batteryMaterialStartPara").show();
                                $('#materialReceiveStartDateBattery').attr("disabled", false);

                            } else {
                                $('#materialReceiveStartDateBattery').attr("disabled", false);
                                $("#batteryMaterialStartPara").hide();
                            }
                        }//end of if
                    }
                });
                ///////////////end trial////////////

            } else if (batteryChk == "false") {
                $("#batteryChkId").prop("checked", false);
                $('#materialReceiveStartDateBattery').val("");
                $('#materialReceiveEndDateBattery').val("");
                $('#iqcCompleteStartDateBattery').val("");
                $('#iqcCompleteEndDateBattery').val("");
                $('#trialProductionStartDateBattery').val("");
                $('#trialProductionEndDateBattery').val("");
                $('#batteryReliabilityTestStartDate').val("");
                $('#batteryReliabilityTestEndDate').val("");
                $('#batteryMassProductionStartDate').val("");
                $('#batteryMassProductionEndDate').val("");
                $('#batteryAgingTestStartDate').val("");
                $('#batteryAgingTestEndDate').val("");
                $("#batteryAllLineInformation tbody.batteryAllLineTBody").empty();
                $("#batteryAvailableLineInformation tbody.batteryAvailableLineTBody").empty();

                $('#materialReceiveStartDateBattery').attr("disabled", true);
                $('#materialReceiveEndDateBattery').attr("disabled", true);
                $('#iqcCompleteStartDateBattery').attr("disabled", true);
                $('#iqcCompleteEndDateBattery').attr("disabled", true);
                $('#trialProductionStartDateBattery').attr("disabled", true);
                $('#trialProductionEndDateBattery').attr("disabled", true);
                $('#batteryReliabilityTestStartDate').attr("disabled", true);
                $('#batteryReliabilityTestEndDate').attr("disabled", true);
                $('#batteryMassProductionStartDate').attr("disabled", true);
                $('#batteryMassProductionEndDate').attr("disabled", true);
                $('#batteryAgingTestStartDate').attr("disabled", true);
                $('#batteryAgingTestEndDate').attr("disabled", true);

                $('#battery_TotalQuantity').attr("disabled", true);
                $('#battery_PerDayCapacity').attr("disabled", true);
                document.getElementById("batteryMassLineInfo_chosen").disabled = true;
            }
            ////////////end Battery//////////
            /////Start of battery housing/////////////
            //  $("#housingChkId").on('change', function () {
            if ($("#housingChkId").is(':checked')) {
                $("#housingChkId").attr('value', 'true');
                $("#housingChkId").prop("checked", true);

            } else {
                $("#housingChkId").attr('value', 'false');
                $("#housingChkId").prop("checked", false);
            }

            houseChk = $('#housingChkId').val();
            console.log("houseChk :" + houseChk);
            // });

            if (houseChk == "true") {
                $("#housingChkId").prop("checked", true);
                housingMassProStartDateHousing = $.trim($('#housingMassProStartDateHousing').val(rnDConfirmEndDateBAssembly));

                console.log("housingMassProStartDateHousing :" + housingMassProStartDateHousing);
                housingMassProStartDateHousing = $.trim($('#housingMassProStartDateHousing').val());

                if (housingMassProStartDateHousing == "Invalid date") {
                    var housingMassProStartDateHousing11 = $.trim($('#housingMassProStartDateHousing').val(""));
                }
                housingMassProStartDateHousing = $.trim($('#housingMassProStartDateHousing').val());

                /////holiday check////
                var housingMassPro11 = isHoliday(housingMassProStartDateHousing);
                housingMassProStartDateHousing = $.trim($('#housingMassProStartDateHousing').val(housingMassPro11));
                housingMassProStartDateHousing = $.trim($('#housingMassProStartDateHousing').val());
                //////////////////////

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetHousingMassBProduction", "Production")',
                    data: "{ housingMassProStartDateHousing: '" + housingMassProStartDateHousing
                        + "', housingMassProEndtDateHousing: '" + housingMassProStartDateHousing
                        + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    async: false,
                    success: function (data) {

                        console.log("data :" + data);
                        var dataList = [];
                        for (var x in data) {
                            dataList = data[x];
                        }
                        console.log(dataList);

                        if (dataList == "YES") {
                            if (dataList == "YES") {

                                $("#housingMassProStartPara").show();
                                $('#housingMassProStartDateHousing').attr("disabled", false);

                            } else {
                                $('#housingMassProStartDateHousing').attr("disabled", false);
                                $("#housingMassProStartPara").hide();
                            }
                        }//end of if
                    }
                });

                /////////////housing reliability/////////////
                housingReliabilityStartDateHousing = $.trim($('#housingReliabilityStartDateHousing').val(materialStartDateBAssembly));
                housingReliabilityStartDateHousing = $.trim($('#housingReliabilityStartDateHousing').val());

                if (housingReliabilityStartDateHousing == "Invalid date") {
                    var housingReliabilityStartDateHousing11 = $.trim($('#housingReliabilityStartDateHousing').val(""));
                }
                housingReliabilityStartDateHousing = $.trim($('#housingReliabilityStartDateHousing').val());
                /////holiday check////
                var housingRelia11 = isHoliday(housingReliabilityStartDateHousing);
                housingReliabilityStartDateHousing = $.trim($('#housingReliabilityStartDateHousing').val(housingRelia11));
                housingReliabilityStartDateHousing = $.trim($('#housingReliabilityStartDateHousing').val());
                //////////////////////
                housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val(materialReceiveEndDateBAssembly));
                housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val());

                if (housingReliabilityEndtDateHousing == "Invalid date") {
                    var housingReliabilityEndtDateHousing11 = $.trim($('#housingReliabilityEndtDateHousing').val(""));
                }
                housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val());

                /////////Add extra days for holiday///////////
                var dCount21 = getHolidayCount(housingReliabilityStartDateHousing, housingReliabilityEndtDateHousing);

                housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val(moment(housingReliabilityEndtDateHousing).add(dCount21, 'days').format("YYYY-MM-DD")));
                housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val());
                ///////////////////
                /////holiday check////
                var housingRelia21 = isHoliday(housingReliabilityEndtDateHousing);
                housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val(housingRelia21));
                housingReliabilityEndtDateHousing = $.trim($('#housingReliabilityEndtDateHousing').val());

                /////////////////Housing Trial/////////////
                trialProductionStartDateHousing = $.trim($('#trialProductionStartDateHousing').val(moment(housingReliabilityStartDateHousing).add(-1, 'days').format("YYYY-MM-DD")));
                console.log("trialProductionStartDateHousing :" + materialReceiveStartDateHousing);
                trialProductionStartDateHousing = $.trim($('#trialProductionStartDateHousing').val());

                if (trialProductionStartDateHousing == "Invalid date") {
                    var trialProductionStartDateHousing11 = $.trim($('#trialProductionStartDateHousing').val(""));
                }
                trialProductionStartDateHousing = $.trim($('#trialProductionStartDateHousing').val());

                /////holiday check////
                var trialMaterial11 = isHolidayPreviousDate(trialProductionStartDateHousing);
                trialProductionStartDateHousing = $.trim($('#trialProductionStartDateHousing').val(trialMaterial11));
                trialProductionStartDateHousing = $.trim($('#trialProductionStartDateHousing').val());
                //////////////////////

                trialProductionEndDateHousing = $.trim($('#trialProductionEndDateHousing').val(trialProductionStartDateHousing));
                trialProductionEndDateHousing = $.trim($('#trialProductionEndDateHousing').val());

                if (trialProductionEndDateHousing == "Invalid date") {
                    var trialProductionEndDateHousing11 = $.trim($('#trialProductionEndDateHousing').val(""));
                }
                trialProductionEndDateHousing = $.trim($('#trialProductionEndDateHousing').val());

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetTrialBProduction", "Production")',
                    data: "{ trialProductionStartDateHousing: '" + trialProductionStartDateHousing
                        + "', trialProductionEndDateHousing: '" + trialProductionEndDateHousing
                        + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    async: false,
                    success: function (data) {

                        console.log("data :" + data);
                        var dataList = [];
                        for (var x in data) {
                            dataList = data[x];
                        }
                        console.log(dataList);

                        if (dataList == "YES") {
                            if (dataList == "YES") {

                                $("#housingTrialStartPara").show();
                                $('#trialProductionStartDateHousing').attr("disabled", false);

                            } else {
                                $('#trialProductionStartDateHousing').attr("disabled", false);
                                $("#housingTrialStartPara").hide();
                            }
                        }//end of if
                    }
                });

                ///////////////Housing IQC////////////////////

                iqcCompleteStartDateHousing = $.trim($('#iqcCompleteStartDateHousing').val(trialProductionStartDateHousing));
                console.log("iqcCompleteStartDateHousing :" + iqcCompleteStartDateHousing);
                iqcCompleteStartDateHousing = $.trim($('#iqcCompleteStartDateHousing').val());

                if (iqcCompleteStartDateHousing == "Invalid date") {
                    var iqcCompleteStartDateHousing11 = $.trim($('#iqcCompleteStartDateHousing').val(""));
                }
                iqcCompleteStartDateHousing = $.trim($('#iqcCompleteStartDateHousing').val());
                /////holiday check////
                var housingIqc11 = isHoliday(iqcCompleteStartDateHousing);
                iqcCompleteStartDateHousing = $.trim($('#iqcCompleteStartDateHousing').val(housingIqc11));
                iqcCompleteStartDateHousing = $.trim($('#iqcCompleteStartDateHousing').val());

                ////////////////////////////////
                iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val(moment(iqcCompleteStartDateHousing).add(1, 'days').format("YYYY-MM-DD")));
                iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val());

                if (iqcCompleteEndDateHousing == "Invalid date") {
                    var iqcCompleteEndDateHousing11 = $.trim($('#iqcCompleteEndDateHousing').val(""));
                }
                iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val());

                /////////Add extra days for holiday///////////
                var dCount27 = getHolidayCount(iqcCompleteStartDateHousing, iqcCompleteEndDateHousing);

                iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val(moment(iqcCompleteEndDateHousing).add(dCount27, 'days').format("YYYY-MM-DD")));
                iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val());
                ///////////////////

                /////holiday check////
                var housingIqc21 = isHoliday(iqcCompleteEndDateHousing);
                iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val(housingIqc21));
                iqcCompleteEndDateHousing = $.trim($('#iqcCompleteEndDateHousing').val());
                //////////////////////

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetIqcCompleteDateBHousing", "Production")',
                    data: "{ iqcCompleteStartDateHousing: '" + iqcCompleteStartDateHousing
                        + "', iqcCompleteEndDateHousing: '" + iqcCompleteEndDateHousing
                        + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    async: false,
                    success: function (data) {

                        console.log("data :" + data);
                        var dataList = [];
                        for (var x in data) {
                            dataList = data[x];
                        }
                        console.log(dataList);

                        if (dataList == "YES") {
                            if (dataList == "YES") {

                                $("#housingIqcStartPara").show();
                                $('#iqcCompleteStartDateHousing').attr("disabled", false);

                            } else {
                                $('#iqcCompleteStartDateHousing').attr("disabled", false);
                                $("#housingIqcStartPara").hide();
                            }
                        }//end of if
                    }
                });
                /////////////////Housing Material/////////////
                materialReceiveStartDateHousing = $.trim($('#materialReceiveStartDateHousing').val(moment(iqcCompleteStartDateHousing).add(-1, 'days').format("YYYY-MM-DD")));
                console.log("materialReceiveStartDateHousing :" + materialReceiveStartDateHousing);
                materialReceiveStartDateHousing = $.trim($('#materialReceiveStartDateHousing').val());

                if (materialReceiveStartDateHousing == "Invalid date") {
                    var materialReceiveStartDateHousing11 = $.trim($('#materialReceiveStartDateHousing').val(""));
                }
                materialReceiveStartDateHousing = $.trim($('#materialReceiveStartDateHousing').val());

                /////holiday check////
                var housingMaterial11 = isHolidayPreviousDate(materialReceiveStartDateHousing);
                materialReceiveStartDateHousing = $.trim($('#materialReceiveStartDateHousing').val(housingMaterial11));
                materialReceiveStartDateHousing = $.trim($('#materialReceiveStartDateHousing').val());
                //////////////////////

                materialReceiveEndDateHousing = $.trim($('#materialReceiveEndDateHousing').val(materialReceiveStartDateHousing));
                materialReceiveEndDateHousing = $.trim($('#materialReceiveEndDateHousing').val());

                if (materialReceiveEndDateHousing == "Invalid date") {
                    var materialReceiveEndDateHousing11 = $.trim($('#materialReceiveEndDateHousing').val(""));
                }
                materialReceiveEndDateHousing = $.trim($('#materialReceiveEndDateHousing').val());

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetMaterialReceiveDateBHousing", "Production")',
                    data: "{ materialReceiveStartDateHousing: '" + materialReceiveStartDateHousing
                        + "', materialReceiveEndDateHousing: '" + materialReceiveEndDateHousing
                        + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    async: false,
                    success: function (data) {

                        console.log("data :" + data);
                        var dataList = [];
                        for (var x in data) {
                            dataList = data[x];
                        }
                        console.log(dataList);

                        if (dataList == "YES") {
                            if (dataList == "YES") {

                                $("#housingMaterialStartPara").show();
                                $('#materialReceiveStartDateHousing').attr("disabled", false);

                            } else {
                                $('#materialReceiveStartDateHousing').attr("disabled", false);
                                $("#housingMaterialStartPara").hide();
                            }
                        }//end of if
                    }
                });
            }//end of if
            else if (houseChk == "false") {
                $("#housingChkId").prop("checked", false);
                $('#materialReceiveStartDateHousing').attr("disabled", true);
                $('#materialReceiveEndDateHousing').attr("disabled", true);
                $('#iqcCompleteStartDateHousing').attr("disabled", true);
                $('#iqcCompleteEndDateHousing').attr("disabled", true);
                $('#trialProductionStartDateHousing').attr("disabled", true);
                $('#trialProductionEndDateHousing').attr("disabled", true);
                $('#housingReliabilityStartDateHousing').attr("disabled", true);
                $('#housingReliabilityEndtDateHousing').attr("disabled", true);
                $('#housingMassProStartDateHousing').attr("disabled", true);
                $('#housingMassProEndtDateHousing').attr("disabled", true);
                $('#batteryHousing_TotalQuantity').attr("disabled", true);
                $('#batteryHousing_PerDayCapacity').attr("disabled", true);
                document.getElementById("housingMassLineInfo_chosen").disabled = true;

                $('#materialReceiveStartDateHousing').val("");
                $('#materialReceiveEndDateHousing').val("");
                $('#iqcCompleteStartDateHousing').val("");
                $('#iqcCompleteEndDateHousing').val("");
                $('#trialProductionStartDateHousing').val("");
                $('#trialProductionEndDateHousing').val("");
                $('#housingReliabilityStartDateHousing').val("");
                $('#housingReliabilityEndtDateHousing').val("");
                $('#housingMassProStartDateHousing').val("");
                $('#housingMassProEndtDateHousing').val("");
                $('#batteryHousing_TotalQuantity').val("");
                $('#batteryHousing_PerDayCapacity').val("");
                $('#housingMassLineInfo').val("");
                $("#housingAllLineInformation tbody.housingAllLineTBody").empty();
                $("#housingAvailableLineInformation tbody.housingAvailableLineTBody").empty();
            }///end of husing else

            //////Start of Battery SMT//////////
            //  $("#smtChkId").on('change', function () {
            if ($("#smtChkId").is(':checked')) {
                $("#smtChkId").attr('value', 'true');
                $("#smtChkId").prop("checked", true);
            } else {
                $("#smtChkId").attr('value', 'false');
                $("#smtChkId").prop("checked", false);
            }
            smtChk = $('#smtChkId').val();
            console.log("smtChk :" + smtChk);
            //      });

            if (smtChk == "true") {
                $("#smtChkId").prop("checked", true);
                //////smt mass production//////
                massProductionStartDateBSmt = $.trim($('#massProductionStartDateBSmt').val(rnDConfirmEndDateBAssembly));
                console.log("massProductionStartDateBSmt :" + massProductionStartDateBSmt);
                massProductionStartDateBSmt = $.trim($('#massProductionStartDateBSmt').val());

                if (massProductionStartDateBSmt == "Invalid date") {
                    var massProductionStartDateBSmt11 = $.trim($('#massProductionStartDateBSmt').val(""));
                }
                massProductionStartDateBSmt = $.trim($('#massProductionStartDateBSmt').val());

                /////holiday check////
                //var smtMassPro11 = isHoliday(massProductionStartDateBSmt);
                //massProductionStartDateBSmt = $.trim($('#massProductionStartDateBSmt').val(smtMassPro11));
                //massProductionStartDateBSmt = $.trim($('#massProductionStartDateBSmt').val());
                //////////////////////

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetSmtMassBProduction", "Production")',
                    data: "{ massProductionStartDateBSmt: '" + massProductionStartDateBSmt
                        + "', massProductionEndDateBSmt: '" + massProductionStartDateBSmt
                        + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    async: false,
                    success: function (data) {

                        console.log("data :" + data);
                        var dataList = [];
                        for (var x in data) {
                            dataList = data[x];
                        }
                        console.log(dataList);

                        if (dataList == "YES") {
                            if (dataList == "YES") {

                                $("#smtMassProStartPara").show();
                                $('#massProductionStartDateBSmt').attr("disabled", false);

                            } else {
                                $('#massProductionStartDateBSmt').attr("disabled", false);
                                $("#smtMassProStartPara").hide();
                            }
                        }//end of if
                    }
                });
                /////////////SMT material////////////
                materialReceiveStartDateBSmt = $.trim($('#materialReceiveStartDateBSmt').val(moment(materialStartDateBAssembly).add(-2, 'days').format("YYYY-MM-DD")));
                console.log("materialReceiveStartDateBSmt :" + materialReceiveStartDateBSmt);
                materialReceiveStartDateBSmt = $.trim($('#materialReceiveStartDateBSmt').val());

                if (materialReceiveStartDateBSmt == "Invalid date") {
                    var materialReceiveStartDateBSmt1 = $.trim($('#materialReceiveStartDateBSmt').val(""));
                }
                materialReceiveStartDateBSmt = $.trim($('#materialReceiveStartDateBSmt').val());

                /////holiday check////
                //var smtMaterial11 = isHolidayPreviousDate(materialReceiveStartDateBSmt);
                //materialReceiveStartDateBSmt = $.trim($('#materialReceiveStartDateBSmt').val(smtMaterial11));
                //materialReceiveStartDateBSmt = $.trim($('#materialReceiveStartDateBSmt').val());
                //////////////////////

                materialReceiveEndDateBSmt = $.trim($('#materialReceiveEndDateBSmt').val(moment(materialReceiveStartDateBSmt).add(1, 'days').format("YYYY-MM-DD")));
                materialReceiveEndDateBSmt = $.trim($('#materialReceiveEndDateBSmt').val());

                if (materialReceiveEndDateBSmt == "Invalid date") {
                    var materialReceiveEndDateBSmt11 = $.trim($('#materialReceiveEndDateBSmt').val(""));
                }
                materialReceiveEndDateBSmt = $.trim($('#materialReceiveEndDateBSmt').val());

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetMaterialReceiveDateBSmt", "Production")',
                    data: "{ materialReceiveStartDateBSmt: '" + materialReceiveStartDateBSmt
                        + "', materialReceiveEndDateBSmt: '" + materialReceiveEndDateBSmt
                        + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    async: false,
                    success: function (data) {

                        console.log("data :" + data);
                        var dataList = [];
                        for (var x in data) {
                            dataList = data[x];
                        }
                        console.log(dataList);

                        if (dataList == "YES") {
                            if (dataList == "YES") {

                                $("#smtMaterialStartPara").show();
                                $('#materialReceiveStartDateBSmt').attr("disabled", false);

                            } else {
                                $('#materialReceiveStartDateBSmt').attr("disabled", false);
                                $("#smtMaterialStartPara").hide();
                            }
                        }//end of if
                    }
                });

                ////smt IQC////////
                iqcCompleteStartDateBSmt = $.trim($('#iqcCompleteStartDateBSmt').val(materialReceiveEndDateBSmt));
                console.log("iqcCompleteStartDateBSmt :" + iqcCompleteStartDateBSmt);
                iqcCompleteStartDateBSmt = $.trim($('#iqcCompleteStartDateBSmt').val());

                if (iqcCompleteStartDateBSmt == "Invalid date") {
                    var iqcCompleteStartDateBSmt11 = $.trim($('#iqcCompleteStartDateBSmt').val(""));
                }
                iqcCompleteStartDateBSmt = $.trim($('#iqcCompleteStartDateBSmt').val());
                /////holiday check////
                //var smtIqc11 = isHoliday(iqcCompleteStartDateBSmt);
                //iqcCompleteStartDateBSmt = $.trim($('#iqcCompleteStartDateBSmt').val(smtIqc11));
                //iqcCompleteStartDateBSmt = $.trim($('#iqcCompleteStartDateBSmt').val());

                ////////////////////////////////
                iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val(moment(iqcCompleteStartDateBSmt).add(1, 'days').format("YYYY-MM-DD")));
                iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val());

                if (iqcCompleteEndDateBSmt == "Invalid date") {
                    var iqcCompleteEndDateBSmt11 = $.trim($('#iqcCompleteEndDateBSmt').val(""));
                }
                iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val());

                /////////Add extra days for holiday///////////
                //var dCount28 = getHolidayCount(iqcCompleteStartDateBSmt, iqcCompleteEndDateBSmt);

                //iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val(moment(iqcCompleteEndDateBSmt).add(dCount28, 'days').format("YYYY-MM-DD")));
                //iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateBSmt').val());
                ///////////////////

                /////holiday check////
                //var smtIqc21 = isHoliday(iqcCompleteEndDateBSmt);
                //iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateHousing').val(smtIqc21));
                //iqcCompleteEndDateBSmt = $.trim($('#iqcCompleteEndDateHousing').val());
                //////////////////////

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetIqcCompleteDateBSmt", "Production")',
                    data: "{ iqcCompleteStartDateBSmt: '" + iqcCompleteStartDateBSmt
                        + "', iqcCompleteEndDateBSmt: '" + iqcCompleteEndDateBSmt
                        + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    async: false,
                    success: function (data) {

                        console.log("data :" + data);
                        var dataList = [];
                        for (var x in data) {
                            dataList = data[x];
                        }
                        console.log(dataList);

                        if (dataList == "YES") {
                            if (dataList == "YES") {

                                $("#smtIqcStartPara").show();
                                $('#iqcCompleteStartDateBSmt').attr("disabled", false);

                            } else {
                                $('#iqcCompleteStartDateBSmt').attr("disabled", false);
                                $("#smtIqcStartPara").hide();
                            }
                        }//end of if
                    }
                });

                ////smt trial///////
                trialProductionStartDateBSmt = $.trim($('#trialProductionStartDateBSmt').val(iqcCompleteStartDateBSmt));
                console.log("trialProductionStartDateBSmt :" + trialProductionStartDateBSmt);
                trialProductionStartDateBSmt = $.trim($('#trialProductionStartDateBSmt').val());

                if (trialProductionStartDateBSmt == "Invalid date") {
                    var trialProductionStartDateBSmt11 = $.trim($('#trialProductionStartDateBSmt').val(""));
                }
                trialProductionStartDateBSmt = $.trim($('#trialProductionStartDateBSmt').val());
                /////holiday check////
                //var smtTrial11 = isHoliday(trialProductionStartDateBSmt);
                //trialProductionStartDateBSmt = $.trim($('#trialProductionStartDateBSmt').val(smtTrial11));
                //trialProductionStartDateBSmt = $.trim($('#trialProductionStartDateBSmt').val());

                ////////////////////////////////
                trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val(moment(trialProductionStartDateBSmt).add(1, 'days').format("YYYY-MM-DD")));
                trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val());

                if (trialProductionEndDateBSmt == "Invalid date") {
                    var trialProductionEndDateBSmt11 = $.trim($('#trialProductionEndDateBSmt').val(""));
                }
                trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val());

                /////////Add extra days for holiday///////////
                //var dCount25 = getHolidayCount(trialProductionStartDateBSmt, trialProductionEndDateBSmt);

                //trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val(moment(trialProductionEndDateBSmt).add(dCount25, 'days').format("YYYY-MM-DD")));
                //trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val());
                ///////////////////

                /////holiday check////
                //var smtTrial21 = isHoliday(trialProductionEndDateBSmt);
                //trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val(smtTrial21));
                //trialProductionEndDateBSmt = $.trim($('#trialProductionEndDateBSmt').val());
                //////////////////////

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetTrialProductionDateBSmt", "Production")',
                    data: "{ trialProductionStartDateBSmt: '" + trialProductionStartDateBSmt
                        + "', trialProductionEndDateBSmt: '" + trialProductionEndDateBSmt
                        + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    async: false,
                    success: function (data) {

                        console.log("data :" + data);
                        var dataList = [];
                        for (var x in data) {
                            dataList = data[x];
                        }
                        console.log(dataList);

                        if (dataList == "YES") {
                            if (dataList == "YES") {

                                $("#smtTrialStartPara").show();
                                $('#trialProductionStartDateBSmt').attr("disabled", false);

                            } else {
                                $('#trialProductionStartDateBSmt').attr("disabled", false);
                                $("#smtTrialStartPara").hide();
                            }
                        }//end of if
                    }
                });

            } else if (smtChk == "false") {
                $("#smtChkId").prop("checked", false);

                $('#materialReceiveStartDateBSmt').attr("disabled", true);
                $('#materialReceiveEndDateBSmt').attr("disabled", true);
                $('#iqcCompleteStartDateBSmt').attr("disabled", true);
                $('#iqcCompleteEndDateBSmt').attr("disabled", true);
                $('#trialProductionStartDateBSmt').attr("disabled", true);
                $('#trialProductionEndDateBSmt').attr("disabled", true);
                $('#massProductionStartDateBSmt').attr("disabled", true);
                $('#massProductionEndDateBSmt').attr("disabled", true);
                $('#batterySmt_TotalQuantity').attr("disabled", true);
                $('#batterySmt_PerDayCapacity').attr("disabled", true);
                document.getElementById("smtMassLineInfo_chosen").disabled = true;

                $('#materialReceiveStartDateBSmt').val("");
                $('#materialReceiveEndDateBSmt').val("");
                $('#iqcCompleteStartDateBSmt').val("");
                $('#iqcCompleteEndDateBSmt').val("");
                $('#trialProductionStartDateBSmt').val("");
                $('#trialProductionEndDateBSmt').val("");
                $('#massProductionStartDateBSmt').val("");
                $('#massProductionEndDateBSmt').val("");
                $('#batterySmt_TotalQuantity').val("");
                $('#batterySmt_PerDayCapacity').val("");
                $('#smtMassLineInfo').val("");
                $("#smtAllLineInformation tbody.smAllLineTBody").empty();
                $("#smtAvailableLineInformation tbody.smAvailableLineTBody").empty();
            }

        }
    }


    $('#rfBtn').on('click', function (e) {
        refresh();
    });
    $('.datepicker').datepicker({
        defaultDate: 'now',
        format: 'yyyy-mm-dd',
        autoclose: 1,
        //  todayHighlight: true,
    });
    $('#smtTrialLine').chosen({
        disable_search_threshold: 10,
        no_results_text: "Oops, nothing found!",
        // placeholder: "SELECT LINE",
        width: "66%",
    });
    $('#housingTrialLine').chosen({
        disable_search_threshold: 10,
        no_results_text: "Oops, nothing found!",
        // placeholder: "SELECT LINE",
        width: "66%",
    });
    $('#batteryTrialLine').chosen({
        disable_search_threshold: 10,
        no_results_text: "Oops, nothing found!",
        // placeholder: "SELECT LINE",
        width: "66%",
    });
    $('#assemblyTrialLine').chosen({
        disable_search_threshold: 10,
        no_results_text: "Oops, nothing found!",
        // placeholder: "SELECT LINE",
        width: "66%",
    });
    $('#smtMassLineInfo').chosen({
        disable_search_threshold: 10,
        no_results_text: "Oops, nothing found!",
        // placeholder: "SELECT LINE",
        width: "66%",
    });
    $('#housingMassLineInfo').chosen({
        disable_search_threshold: 10,
        no_results_text: "Oops, nothing found!",
        // placeholder: "SELECT LINE",
        width: "66%",
    });
    $('#batteryMassLineInfo').chosen({
        disable_search_threshold: 10,
        no_results_text: "Oops, nothing found!",
        // placeholder: "SELECT LINE",
        width: "66%",
    });
    $('#assemblyMassLineInfo').chosen({
        disable_search_threshold: 10,
        no_results_text: "Oops, nothing found!",
        // placeholder: "SELECT LINE",
        width: "66%",
    });
    $('#packingMassLineInfo').chosen({
        disable_search_threshold: 10,
        no_results_text: "Oops, nothing found!",
        // placeholder: "SELECT LINE",
        width: "66%",
    });

    $('.chosen').trigger('chosen:updated');
    $('#dropForProject').chosen({
        disable_search_threshold: 10,
        no_results_text: "Oops, nothing found!",
        width: "95%"
        //placeholder: "SELECT LINE",
        //width: "10%"
    });
    $("#dropForProject").trigger("chosen:updated");


    $(document).ready(function () {

        $.ajax({
            url: '@Url.Action("GetHolidayDataList", "Production")',
            type: "GET",
            dataType: "JSON",
            success: function (data) {
                console.log(data);

                var dataList = [];
                for (var x in data) {
                    dataList = data[x];
                }

                var items = $.parseJSON(dataList);
                arrList = items;
                return items;
            }
        });

        $.ajax({
            url: '@Url.Action("SelectLineInfoBatteryHousing", "Production")',
            type: "GET",
            dataType: "JSON",
            success: function (data) {
                console.log(data);

                var dataList = [];
                for (var x in data) {
                    dataList = data[x];
                }

                var items = $.parseJSON(dataList);
                arrListForBatteryHousing = items;

                $('#housingMassLineInfo').empty();
                $.each(arrListForBatteryHousing, function (i, item) {
                    console.log("item  :" + item.LineNumber);

                    var text = item.LineNumber;
                    var val = item.CKD_Housing_Line_Capacity;

                    $("#housingMassLineInfo").append('<option value=' + val + '>' + text + '</option>');
                    $("#housingMassLineInfo").trigger("chosen:updated");
                });
            }
        });
        $.ajax({
            url: '@Url.Action("SelectLineInfoBattery", "Production")',
            type: "GET",
            dataType: "JSON",
            success: function (data) {
                console.log(data);

                var dataList = [];
                for (var x in data) {
                    dataList = data[x];
                }

                var items = $.parseJSON(dataList);
                arrListForBattery = items;

                $('#batteryMassLineInfo').empty();
                $.each(arrListForBattery, function (i, item) {
                    console.log("item  :" + item.LineNumber);

                    var text = item.LineNumber;
                    var val = item.CKD_Battery_Line_Capacity;

                    $("#batteryMassLineInfo").append('<option value=' + val + '>' + text + '</option>');
                    $("#batteryMassLineInfo").trigger("chosen:updated");
                });
            }
        });

    });

    $("#smtChkId").on('change', function () {
        if ($(this).is(':checked')) {
            $(this).attr('value', 'true');

            $('#materialReceiveStartDateBSmt').attr("disabled", false);
            $('#iqcCompleteStartDateBSmt').attr("disabled", false);
            $('#trialProductionStartDateBSmt').attr("disabled", false);
            $('#trialProductionEndDateBSmt').attr("disabled", false);
            $('#massProductionStartDateBSmt').attr("disabled", false);

            $('#batterySmt_TotalQuantity').attr("disabled", false);
            $('#batterySmt_PerDayCapacity').attr("disabled", false);
            document.getElementById("smtMassLineInfo_chosen").disabled = false;
        } else {
            $(this).attr('value', 'false');

            $('#materialReceiveStartDateBSmt').attr("disabled", true);
            $('#materialReceiveEndDateBSmt').attr("disabled", true);
            $('#iqcCompleteStartDateBSmt').attr("disabled", true);
            $('#iqcCompleteEndDateBSmt').attr("disabled", true);
            $('#trialProductionStartDateBSmt').attr("disabled", true);
            $('#trialProductionEndDateBSmt').attr("disabled", true);
            $('#massProductionStartDateBSmt').attr("disabled", true);
            $('#massProductionEndDateBSmt').attr("disabled", true);
            $('#batterySmt_TotalQuantity').attr("disabled", true);
            $('#batterySmt_PerDayCapacity').attr("disabled", true);
            document.getElementById("smtMassLineInfo_chosen").disabled = true;

            $('#materialReceiveStartDateBSmt').val("");
            $('#materialReceiveEndDateBSmt').val("");
            $('#iqcCompleteStartDateBSmt').val("");
            $('#iqcCompleteEndDateBSmt').val("");
            $('#trialProductionStartDateBSmt').val("");
            $('#trialProductionEndDateBSmt').val("");
            $('#massProductionStartDateBSmt').val("");
            $('#massProductionEndDateBSmt').val("");
            $('#batterySmt_TotalQuantity').val("");
            $('#batterySmt_PerDayCapacity').val("");
            $("#smtAllLineInformation tbody.smAllLineTBody").empty();
            $("#smtAvailableLineInformation tbody.smAvailableLineTBody").empty();

        }
        smtChk = $('#smtChkId').val();
        console.log("smtChk :" + smtChk);
    });

    $("#housingChkId").on('change', function () {
        if ($(this).is(':checked')) {
            $(this).attr('value', 'true');
            $('#materialReceiveStartDateHousing').attr("disabled", false);
            $('#iqcCompleteStartDateHousing').attr("disabled", false);
            $('#trialProductionStartDateHousing').attr("disabled", false);
            $('#housingReliabilityStartDateHousing').attr("disabled", false);
            $('#housingMassProStartDateHousing').attr("disabled", false);
            // $('#batteryAgingTestStartDate').attr("disabled", false);
            $('#batteryHousing_TotalQuantity').attr("disabled", false);
            $('#batteryHousing_PerDayCapacity').attr("disabled", false);
            document.getElementById("housingMassLineInfo_chosen").disabled = false;
        } else {
            $(this).attr('value', 'false');

            $('#materialReceiveStartDateHousing').attr("disabled", true);
            $('#materialReceiveEndDateHousing').attr("disabled", true);
            $('#iqcCompleteStartDateHousing').attr("disabled", true);
            $('#iqcCompleteEndDateHousing').attr("disabled", true);
            $('#trialProductionStartDateHousing').attr("disabled", true);
            $('#trialProductionEndDateHousing').attr("disabled", true);
            $('#housingReliabilityStartDateHousing').attr("disabled", true);
            $('#housingReliabilityEndtDateHousing').attr("disabled", true);
            $('#housingMassProStartDateHousing').attr("disabled", true);
            $('#housingMassProEndtDateHousing').attr("disabled", true);
            // $('#batteryAgingTestStartDate').attr("disabled", true);
            $('#batteryHousing_TotalQuantity').attr("disabled", true);
            $('#batteryHousing_PerDayCapacity').attr("disabled", true);
            document.getElementById("housingMassLineInfo_chosen").disabled = true;
            // $("#housingAllLineInformation tbody.housingAllLineTBody").empty();

            $('#materialReceiveStartDateHousing').val("");
            $('#materialReceiveEndDateHousing').val("");
            $('#iqcCompleteStartDateHousing').val("");
            $('#iqcCompleteEndDateHousing').val("");
            $('#trialProductionStartDateHousing').val("");
            $('#trialProductionEndDateHousing').val("");
            $('#housingReliabilityStartDateHousing').val("");
            $('#housingReliabilityEndtDateHousing').val("");
            $('#housingMassProStartDateHousing').val("");
            $('#housingMassProEndtDateHousing').val("");
            $('#batteryHousing_TotalQuantity').val("");
            $('#batteryHousing_PerDayCapacity').val("");
            $("#housingAllLineInformation tbody.housingAllLineTBody").empty();
            $("#housingAvailableLineInformation tbody.housingAvailableLineTBody").empty();
        }
        houseChk = $('#housingChkId').val();
        console.log("houseChk :" + houseChk);
    });

    $("#batteryChkId").on('change', function () {
        if ($(this).is(':checked')) {
            $(this).attr('value', 'true');

            $('#materialReceiveStartDateBattery').attr("disabled", false);
            $('#iqcCompleteStartDateBattery').attr("disabled", false);
            $('#trialProductionStartDateBattery').attr("disabled", false);
            $('#batteryReliabilityTestStartDate').attr("disabled", false);
            $('#batteryMassProductionStartDate').attr("disabled", false);
            $('#batteryAgingTestStartDate').attr("disabled", false);

            $('#battery_TotalQuantity').attr("disabled", false);
            $('#battery_PerDayCapacity').attr("disabled", false);
            document.getElementById("batteryMassLineInfo_chosen").disabled = false;
        } else {
            $(this).attr('value', 'false');

            $('#materialReceiveStartDateBattery').attr("disabled", true);
            $('#materialReceiveEndDateBattery').attr("disabled", true);
            $('#iqcCompleteStartDateBattery').attr("disabled", true);
            $('#iqcCompleteEndDateBattery').attr("disabled", true);
            $('#trialProductionStartDateBattery').attr("disabled", true);
            $('#trialProductionEndDateBattery').attr("disabled", true);
            $('#batteryReliabilityTestStartDate').attr("disabled", true);
            $('#batteryReliabilityTestEndDate').attr("disabled", true);
            $('#batteryMassProductionStartDate').attr("disabled", true);
            $('#batteryMassProductionEndDate').attr("disabled", true);
            $('#batteryAgingTestStartDate').attr("disabled", true);
            $('#batteryAgingTestEndDate').attr("disabled", true);
            $('#battery_TotalQuantity').attr("disabled", true);
            $('#battery_PerDayCapacity').attr("disabled", true);
            document.getElementById("batteryMassLineInfo_chosen").disabled = true;

            $('#materialReceiveStartDateBattery').val("");
            $('#materialReceiveEndDateBattery').val("");
            $('#iqcCompleteStartDateBattery').val("");
            $('#iqcCompleteEndDateBattery').val("");
            $('#trialProductionStartDateBattery').val("");
            $('#trialProductionEndDateBattery').val("");
            $('#batteryReliabilityTestStartDate').val("");
            $('#batteryReliabilityTestEndDate').val("");
            $('#batteryMassProductionStartDate').val("");
            $('#batteryMassProductionEndDate').val("");
            $('#batteryAgingTestStartDate').val("");
            $('#batteryAgingTestEndDate').val("");
            $('#battery_TotalQuantity').val("");
            $('#battery_PerDayCapacity').val("");
            $("#batteryAllLineInformation tbody.batteryAllLineTBody").empty();
            $("#batteryAvailableLineInformation tbody.batteryAvailableLineTBody").empty();
        }
        batteryChk = $('#batteryChkId').val();
        console.log("batteryChk :" + batteryChk);
    });


    $("#assemblyChkId").on('change', function () {
        if ($(this).is(':checked')) {
            $(this).attr('value', 'true');

            $('#materialStartDateBAssembly').attr("disabled", false);
            $('#iqcCompleteStartDateBAssembly').attr("disabled", false);
            $('#trialProductionStartDateBAssembly').attr("disabled", false);
            $('#softwareConfirmationStartDate').attr("disabled", false);
            $('#rnDConfirmStartDateBAssembly').attr("disabled", false);
            $('#assembStartDateBAssembly').attr("disabled", false);
            $('#packingMassProductionStartDateBAssembly').attr("disabled", false);
            $('#batteryAssembly_TotalQuantity').attr("disabled", false);
            $('#batteryAssembly_PerDayCapacity').attr("disabled", false);
            $('#batteryPacking_TotalQuantity').attr("disabled", false);
            $('#batteryPacking_PerDayCapacity').attr("disabled", false);
            document.getElementById("assemblyMassLineInfo_chosen").disabled = false;
            document.getElementById("packingMassLineInfo_chosen").disabled = false;

        } else {
            $(this).attr('value', 'false');

            $('#materialStartDateBAssembly').attr("disabled", true);
            $('#materialReceiveEndDateBAssembly').attr("disabled", true);
            $('#iqcCompleteStartDateBAssembly').attr("disabled", true);
            $('#iqcCompleteEndDateBAssembly').attr("disabled", true);
            $('#trialProductionStartDateBAssembly').attr("disabled", true);
            $('#trialProductionEndDateBAssembly').attr("disabled", true);
            $('#softwareConfirmationStartDate').attr("disabled", true);
            $('#softwareConfirmationEndDate').attr("disabled", true);
            $('#rnDConfirmStartDateBAssembly').attr("disabled", true);
            $('#rnDConfirmEndDateBAssembly').attr("disabled", true);
            $('#assembStartDateBAssembly').attr("disabled", true);
            $('#assembEndDateBAssembly').attr("disabled", true);
            $('#packingMassProductionStartDateBAssembly').attr("disabled", true);
            $('#packingMassProductionEndDateBAssembly').attr("disabled", true);
            $('#batteryAssembly_TotalQuantity').attr("disabled", true);
            $('#batteryAssembly_PerDayCapacity').attr("disabled", true);
            $('#batteryPacking_TotalQuantity').attr("disabled", true);
            $('#batteryPacking_PerDayCapacity').attr("disabled", true);

            document.getElementById("assemblyMassLineInfo_chosen").disabled = true;
            $("#assemblyAllLineInformation tbody.assemblyAllLineTBody").empty();
            $("#assemblyAvailableLineInformation tbody.assemblyAvailableLineTBody").empty();
            document.getElementById("packingMassLineInfo_chosen").disabled = true;
            $("#packingAllLineInformation tbody.packingAllLineTBody").empty();
            $("#packingAvailableLineInformation tbody.packingAvailableLineTBody").empty();

            $('#materialStartDateBAssembly').val("");
            $('#materialReceiveEndDateBAssembly').val("");
            $('#iqcCompleteStartDateBAssembly').val("");
            $('#iqcCompleteEndDateBAssembly').val("");
            $('#trialProductionStartDateBAssembly').val("");
            $('#trialProductionEndDateBAssembly').val("");
            $('#softwareConfirmationStartDate').val("");
            $('#softwareConfirmationEndDate').val("");
            $('#rnDConfirmStartDateBAssembly').val("");
            $('#rnDConfirmEndDateBAssembly').val("");
            $('#assembStartDateBAssembly').val("");
            $('#assembEndDateBAssembly').val("");
            $('#packingMassProductionStartDateBAssembly').val("");
            $('#packingMassProductionEndDateBAssembly').val("");

            $('#batteryAssembly_TotalQuantity').val("");
            $('#batteryAssembly_PerDayCapacity').val("");
            $('#batteryPacking_TotalQuantity').val("");
            $('#batteryPacking_PerDayCapacity').val("");
        }
        assemblyChk = $('#assemblyChkId').val();
        console.log("assemblyChk :" + assemblyChk);
    });

    function newMobilePlan(planIds) {

        @*if (selecteddropValue != 0) {
            window.open('@Url.Action("MobileNewPlan", "Production")' + '?projectId=' + selecteddropValue + '&projectName=' + selecteddropText);

        }*@
        var proSelectId = document.getElementById('dropForProject');
        console.log(proSelectId);

        var selecteddropText = proSelectId.options[proSelectId.selectedIndex].text;
        var selecteddropValue = proSelectId.options[proSelectId.selectedIndex].value;
        console.log("proname " + selecteddropText);
        console.log("proId " + selecteddropValue);

        if (selecteddropText == "SELECT PROJECT") {
            // alert("Please select Project must..........");
            alertify.dialog('alert').set({
                'title': '   ',
                'transition': 'zoom',
                'message': "Please select Project must.",
            }).show();
            return false;
            $('#divSearchedvalue').hide();

            return false;
        } else {

            $('#divSearchedvalue').show();

            if ($("#smtChkId").is(':checked')) {
                $("#smtChkId").attr('value', 'true');
                $("#smtChkId").prop("checked", true);
            } else {
                $("#smtChkId").attr('value', 'false');
                $("#smtChkId").prop("checked", false);
            }
            smtChk = $('#smtChkId').val();
            console.log("smtChk :" + smtChk);
            //////////////////////////////////////
            if ($("#housingChkId").is(':checked')) {
                $("#housingChkId").attr('value', 'true');
                $("#housingChkId").prop("checked", true);
            } else {
                $("#housingChkId").attr('value', 'false');
                $("#housingChkId").prop("checked", false);
            }
            houseChk = $('#housingChkId').val();
            console.log("houseChk :" + houseChk);
            ///////////////////////////////////
            if ($("#batteryChkId").is(':checked')) {
                $("#batteryChkId").attr('value', 'true');
                $("#batteryChkId").prop("checked", true);
            } else {
                $("#batteryChkId").attr('value', 'false');
                $("#batteryChkId").prop("checked", false);
            }
            batteryChk = $('#batteryChkId').val();
            console.log("batteryChk :" + batteryChk);
            ///////////////////////////////////
            if ($("#assemblyChkId").is(':checked')) {
                $("#assemblyChkId").attr('value', 'true');
                $("#assemblyChkId").prop("checked", true);
            } else {
                $("#assemblyChkId").attr('value', 'false');
                $("#assemblyChkId").prop("checked", false);
            }
            assemblyChk = $('#assemblyChkId').val();
            console.log("assemblyChk :" + assemblyChk);

            $("#smtChkId").prop("checked", false);
            $("#housingChkId").prop("checked", false);
            $("#batteryChkId").prop("checked", false);
            $("#assemblyChkId").prop("checked", false);

            var smtProName = $('#smtProName').text(selecteddropValue);
            var smtProName1 = $('#smtProName').val(selecteddropText);

            var housingProName1 = $('#housingProName').text(selecteddropValue);
            var housingProName = $('#housingProName').val(selecteddropText);

            var batteryProName = $('#batteryProName').text(selecteddropValue);
            var batteryProName1 = $('#batteryProName').val(selecteddropText);

            var assemblyProName = $('#assemblyProName').text(selecteddropValue);
            var assemblyProName1 = $('#assemblyProName').val(selecteddropText);


            $.ajax({
                url: '@Url.Action("SelectLineInfoBatterySmt", "Production")',
                type: "POST",
                data: "{ projectId: '" + selecteddropValue + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {
                    console.log(data);

                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }

                    var items = $.parseJSON(dataList);
                    arrListForBatterySmt = items;

                    $('#smtMassLineInfo').empty();
                    $.each(arrListForBatterySmt, function (i, item) {
                        console.log("item  :" + item.LineNumber);

                        var text = item.LineNumber;
                        var val = item.CKD_SMT_Line_Capacity;

                        $("#smtMassLineInfo").append('<option value=' + val + '>' + text + '</option>');
                        $("#smtMassLineInfo").trigger("chosen:updated");
                    });
                }
            });

            $.ajax({
                url: '@Url.Action("SelectLineInfoBatteryAssembly", "Production")',
                type: "POST",
                data: "{ projectId: '" + selecteddropValue + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {
                    console.log(data);

                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    var items = $.parseJSON(dataList);
                    arrListForBatteryAssembly = items;

                    $('#assemblyMassLineInfo').empty();
                    $.each(arrListForBatteryAssembly, function (i, item) {
                        console.log("item  :" + item.LineNumber);

                        var text = item.LineNumber;
                        var val = item.CKD_Assembly_Line_Capacity;

                        $("#assemblyMassLineInfo").append('<option value=' + val + '>' + text + '</option>');
                        $("#assemblyMassLineInfo").trigger("chosen:updated");
                    });
                }
            });
            $.ajax({
                url: '@Url.Action("SelectLineInfoBatteryPacking", "Production")',
                type: "POST",
                data: "{ projectId: '" + selecteddropValue + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {
                    console.log(data);

                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }

                    var items = $.parseJSON(dataList);
                    arrListForBatteryPacking = items;

                    $('#packingMassLineInfo').empty();
                    $.each(arrListForBatteryPacking, function (i, item) {
                        console.log("item  :" + item.LineNumber);

                        var text = item.LineNumber;
                        var val = item.CKD_Packing_Line_Capacity;

                        $("#packingMassLineInfo").append('<option value=' + val + '>' + text + '</option>');
                        $("#packingMassLineInfo").trigger("chosen:updated");
                    });
                }
            });
            //planIds
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetBatteryOldHistory", "Production")',
                data: "{ projectId: '" + selecteddropValue
                    + "', projectName: '" + selecteddropText
                 + "', planIds: '" + planIds
                    + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function (data) {

                    console.log(data);
                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    var l = dataList.length;

                    if (l == 0) {


                        $('#materialReceiveStartDateBattery').attr("disabled", true);
                        $('#materialReceiveEndDateBattery').attr("disabled", true);
                        $('#iqcCompleteStartDateBattery').attr("disabled", true);
                        $('#iqcCompleteEndDateBattery').attr("disabled", true);
                        $('#trialProductionStartDateBattery').attr("disabled", true);
                        $('#trialProductionEndDateBattery').attr("disabled", true);
                        $('#batteryReliabilityTestStartDate').attr("disabled", true);
                        $('#batteryReliabilityTestEndDate').attr("disabled", true);
                        $('#batteryMassProductionStartDate').attr("disabled", true);
                        $('#batteryMassProductionEndDate').attr("disabled", true);
                        $('#batteryAgingTestStartDate').attr("disabled", true);
                        $('#batteryAgingTestEndDate').attr("disabled", true);
                        $('#battery_TotalQuantity').attr("disabled", true);
                        $('#battery_PerDayCapacity').attr("disabled", true);
                        document.getElementById("batteryMassLineInfo_chosen").disabled = true;
                        $("#batteryAllLineInformation tbody.batteryAllLineTBody").empty();
                        $("#batteryAvailableLineInformation tbody.batteryAvailableLineTBody").empty();

                        $('#materialReceiveStartDateBSmt').attr("disabled", true);
                        $('#materialReceiveEndDateBSmt').attr("disabled", true);
                        $('#iqcCompleteStartDateBSmt').attr("disabled", true);
                        $('#iqcCompleteEndDateBSmt').attr("disabled", true);
                        $('#trialProductionStartDateBSmt').attr("disabled", true);
                        $('#trialProductionEndDateBSmt').attr("disabled", true);
                        $('#massProductionStartDateBSmt').attr("disabled", true);
                        $('#massProductionEndDateBSmt').attr("disabled", true);
                        $('#batterySmt_TotalQuantity').attr("disabled", true);
                        $('#batterySmt_PerDayCapacity').attr("disabled", true);
                        document.getElementById("smtMassLineInfo_chosen").disabled = true;
                        $("#smtAllLineInformation tbody.smAllLineTBody").empty();
                        $("#smtAvailableLineInformation tbody.smAvailableLineTBody").empty();

                        $('#materialReceiveStartDateHousing').attr("disabled", true);
                        $('#materialReceiveEndDateHousing').attr("disabled", true);
                        $('#iqcCompleteStartDateHousing').attr("disabled", true);
                        $('#iqcCompleteEndDateHousing').attr("disabled", true);
                        $('#trialProductionStartDateHousing').attr("disabled", true);
                        $('#trialProductionEndDateHousing').attr("disabled", true);
                        $('#housingReliabilityStartDateHousing').attr("disabled", true);
                        $('#housingReliabilityEndtDateHousing').attr("disabled", true);
                        $('#housingMassProStartDateHousing').attr("disabled", true);
                        $('#housingMassProEndtDateHousing').attr("disabled", true);
                        $('#batteryHousing_TotalQuantity').attr("disabled", true);
                        $('#batteryHousing_PerDayCapacity').attr("disabled", true);
                        document.getElementById("housingMassLineInfo_chosen").disabled = true;
                        $("#housingAllLineInformation tbody.housingAllLineTBody").empty();
                        $("#housingAvailableLineInformation tbody.housingAvailableLineTBody").empty();

                        $('#materialStartDateBAssembly').attr("disabled", true);
                        $('#materialReceiveEndDateBAssembly').attr("disabled", true);
                        $('#iqcCompleteStartDateBAssembly').attr("disabled", true);
                        $('#iqcCompleteEndDateBAssembly').attr("disabled", true);
                        $('#trialProductionStartDateBAssembly').attr("disabled", true);
                        $('#trialProductionEndDateBAssembly').attr("disabled", true);
                        $('#softwareConfirmationStartDate').attr("disabled", true);
                        $('#softwareConfirmationEndDate').attr("disabled", true);
                        $('#rnDConfirmStartDateBAssembly').attr("disabled", true);
                        $('#rnDConfirmEndDateBAssembly').attr("disabled", true);
                        $('#assembStartDateBAssembly').attr("disabled", true);
                        $('#assembEndDateBAssembly').attr("disabled", true);
                        $('#packingMassProductionStartDateBAssembly').attr("disabled", true);
                        $('#packingMassProductionEndDateBAssembly').attr("disabled", true);
                        $('#batteryAssembly_TotalQuantity').attr("disabled", true);
                        $('#batteryAssembly_PerDayCapacity').attr("disabled", true);
                        $('#batteryPacking_TotalQuantity').attr("disabled", true);
                        $('#batteryPacking_PerDayCapacity').attr("disabled", true);

                        document.getElementById("assemblyMassLineInfo_chosen").disabled = true;
                        $("#assemblyAllLineInformation tbody.assemblyAllLineTBody").empty();
                        $("#assemblyAvailableLineInformation tbody.assemblyAvailableLineTBody").empty();

                        document.getElementById("packingMassLineInfo_chosen").disabled = true;
                        $("#packingAllLineInformation tbody.packingAllLineTBody").empty();
                        $("#packingAvailableLineInformation tbody.packingAvailableLineTBody").empty();

                        $('#materialReceiveStartDateBSmt').val("");
                        $('#materialReceiveEndDateBSmt').val("");
                        $('#iqcCompleteStartDateBSmt').val("");
                        $('#iqcCompleteEndDateBSmt').val("");
                        $('#trialProductionStartDateBSmt').val("");
                        $('#trialProductionEndDateBSmt').val("");
                        $('#massProductionStartDateBSmt').val("");
                        $('#massProductionEndDateBSmt').val("");
                        $('#batterySmt_TotalQuantity').val("");
                        $('#batterySmt_PerDayCapacity').val("");

                        $('#materialReceiveStartDateHousing').val("");
                        $('#materialReceiveEndDateHousing').val("");
                        $('#iqcCompleteStartDateHousing').val("");
                        $('#iqcCompleteEndDateHousing').val("");
                        $('#trialProductionStartDateHousing').val("");
                        $('#trialProductionEndDateHousing').val("");
                        $('#housingReliabilityStartDateHousing').val("");
                        $('#housingReliabilityEndtDateHousing').val("");
                        $('#housingMassProStartDateHousing').val("");
                        $('#housingMassProEndtDateHousing').val("");
                        $('#batteryHousing_TotalQuantity').val("");
                        $('#batteryHousing_PerDayCapacity').val("");

                        $('#materialReceiveStartDateBattery').val("");
                        $('#materialReceiveEndDateBattery').val("");
                        $('#iqcCompleteStartDateBattery').val("");
                        $('#iqcCompleteEndDateBattery').val("");
                        $('#trialProductionStartDateBattery').val("");
                        $('#trialProductionEndDateBattery').val("");
                        $('#batteryReliabilityTestStartDate').val("");
                        $('#batteryReliabilityTestEndDate').val("");
                        $('#batteryMassProductionStartDate').val("");
                        $('#batteryMassProductionEndDate').val("");
                        $('#batteryAgingTestStartDate').val("");
                        $('#batteryAgingTestEndDate').val("");
                        $('#battery_TotalQuantity').val("");
                        $('#battery_PerDayCapacity').val("");

                        $('#materialStartDateBAssembly').val("");
                        $('#materialReceiveEndDateBAssembly').val("");
                        $('#iqcCompleteStartDateBAssembly').val("");
                        $('#iqcCompleteEndDateBAssembly').val("");
                        $('#trialProductionStartDateBAssembly').val("");
                        $('#trialProductionEndDateBAssembly').val("");
                        $('#softwareConfirmationStartDate').val("");
                        $('#softwareConfirmationEndDate').val("");
                        $('#rnDConfirmStartDateBAssembly').val("");
                        $('#rnDConfirmEndDateBAssembly').val("");
                        $('#assembStartDateBAssembly').val("");
                        $('#assembEndDateBAssembly').val("");
                        $('#packingMassProductionStartDateBAssembly').val("");
                        $('#packingMassProductionEndDateBAssembly').val("");
                        $('#batteryAssembly_TotalQuantity').val("");
                        $('#batteryAssembly_PerDayCapacity').val("");
                        $('#batteryPacking_TotalQuantity').val("");
                        $('#batteryPacking_PerDayCapacity').val("");

                    } else {
                        for (var ii = 0; ii < l; ii++) {

                            //$("#smtChkId").prop("checked", true);
                            //$("#housingChkId").prop("checked", true);
                            //$("#batteryChkId").prop("checked", true);
                            //$("#assemblyChkId").prop("checked", true);
                            ///////////battery/////////////
                            //smtChk = "true";
                            //houseChk = "true";
                            //batteryChk = "false";
                            //assemblyChk = "true";


                            var smt1 = moment(dataList[ii].MaterialReceiveStartDateBSmt).format('YYYY-MM-DD');
                            if (smt1 != "Invalid date") {
                                $("#smtChkId").prop("checked", true);

                                $('#materialReceiveStartDateBSmt').attr("disabled", false);
                                $('#iqcCompleteStartDateBSmt').attr("disabled", false);
                                $('#trialProductionStartDateBSmt').attr("disabled", false);
                                $('#trialProductionEndDateBSmt').attr("disabled", false);
                                $('#massProductionStartDateBSmt').attr("disabled", false);
                                $('#batterySmt_TotalQuantity').attr("disabled", false);
                                $('#batterySmt_PerDayCapacity').attr("disabled", false);
                                document.getElementById("smtMassLineInfo_chosen").disabled = false;

                                if (smt1 == "Invalid date") {
                                    $.trim($('#materialReceiveStartDateBSmt').val(""));
                                } else {
                                    $.trim($('#materialReceiveStartDateBSmt').val(moment(dataList[ii].MaterialReceiveStartDateBSmt).format("YYYY-MM-DD")));

                                }
                                var smt2 = moment(dataList[ii].MaterialReceiveEndDateBSmt).format('YYYY-MM-DD');
                                if (smt2 == "Invalid date") {
                                    $.trim($('#materialReceiveEndDateBSmt').val(""));
                                    // $('#materialReceiveEndDateBSmt').attr("disabled", true);
                                } else {
                                    $.trim($('#materialReceiveEndDateBSmt').val(moment(dataList[ii].MaterialReceiveEndDateBSmt).format("YYYY-MM-DD")));
                                }
                                var smt3 = moment(dataList[ii].IqcCompleteStartDateBSmt).format('YYYY-MM-DD');
                                if (smt3 == "Invalid date") {
                                    $.trim($('#iqcCompleteStartDateBSmt').val(""));
                                    //   $('#iqcCompleteStartDateBSmt').attr("disabled", false);
                                } else {
                                    $.trim($('#iqcCompleteStartDateBSmt').val(moment(dataList[ii].IqcCompleteStartDateBSmt).format("YYYY-MM-DD")));
                                }
                                var smt4 = moment(dataList[ii].IqcCompleteEndDateBSmt).format('YYYY-MM-DD');
                                if (smt4 == "Invalid date") {
                                    $.trim($('#iqcCompleteEndDateBSmt').val(""));
                                    // $('#IqcCompleteEndDateBSmt').attr("disabled", true);
                                } else {
                                    $.trim($('#iqcCompleteEndDateBSmt').val(moment(dataList[ii].IqcCompleteEndDateBSmt).format("YYYY-MM-DD")));
                                }

                                var smt5 = moment(dataList[ii].TrialProductionStartDateBSmt).format('YYYY-MM-DD');
                                if (smt5 == "Invalid date") {
                                    $.trim($('#trialProductionStartDateBSmt').val(""));
                                    // $('#trialProductionStartDateBSmt').attr("disabled", false);
                                } else {
                                    $.trim($('#trialProductionStartDateBSmt').val(moment(dataList[ii].TrialProductionStartDateBSmt).format("YYYY-MM-DD")));

                                }
                                var smt6 = moment(dataList[ii].TrialProductionEndDateBSmt).format('YYYY-MM-DD');
                                if (smt6 == "Invalid date") {
                                    $.trim($('#trialProductionEndDateBSmt').val(""));
                                    // $('#trialProductionEndDateBSmt').attr("disabled", true);
                                } else {
                                    $.trim($('#trialProductionEndDateBSmt').val(moment(dataList[ii].TrialProductionEndDateBSmt).format("YYYY-MM-DD")));
                                }

                                var smt7 = moment(dataList[ii].SmtMassProductionStartDateBSmt).format('YYYY-MM-DD');
                                if (smt7 == "Invalid date") {
                                    $.trim($('#massProductionStartDateBSmt').val(""));
                                    //   $('#massProductionStartDateBSmt').attr("disabled", false);
                                } else {
                                    $.trim($('#massProductionStartDateBSmt').val(moment(dataList[ii].SmtMassProductionStartDateBSmt).format("YYYY-MM-DD")));

                                }
                            } else {
                                $("#smtChkId").prop("checked", false);
                                $('#materialReceiveStartDateBSmt').attr("disabled", true);
                                $('#materialReceiveEndDateBSmt').attr("disabled", true);
                                $('#iqcCompleteStartDateBSmt').attr("disabled", true);
                                $('#iqcCompleteEndDateBSmt').attr("disabled", true);
                                $('#trialProductionStartDateBSmt').attr("disabled", true);
                                $('#trialProductionEndDateBSmt').attr("disabled", true);
                                $('#massProductionStartDateBSmt').attr("disabled", true);
                                $('#massProductionEndDateBSmt').attr("disabled", true);
                                $('#batterySmt_TotalQuantity').attr("disabled", true);
                                $('#batterySmt_PerDayCapacity').attr("disabled", true);
                                document.getElementById("smtMassLineInfo_chosen").disabled = true;

                                $('#materialReceiveStartDateBSmt').val("");
                                $('#materialReceiveEndDateBSmt').val("");
                                $('#iqcCompleteStartDateBSmt').val("");
                                $('#iqcCompleteEndDateBSmt').val("");
                                $('#trialProductionStartDateBSmt').val("");
                                $('#trialProductionEndDateBSmt').val("");
                                $('#massProductionStartDateBSmt').val("");
                                $('#massProductionEndDateBSmt').val("");
                                $('#batterySmt_TotalQuantity').val("");
                                $('#batterySmt_PerDayCapacity').val("");
                                $("#smtAllLineInformation tbody.smAllLineTBody").empty();
                                $("#smtAvailableLineInformation tbody.smAvailableLineTBody").empty();
                            }

                            ///////Housing///////

                            var housing1 = moment(dataList[ii].MaterialReceiveStartDateBHousing).format('YYYY-MM-DD');

                            if (housing1 != "Invalid date") {
                                $("#housingChkId").prop("checked", true);
                                $('#materialReceiveStartDateHousing').attr("disabled", false);
                                $('#iqcCompleteStartDateHousing').attr("disabled", false);
                                $('#trialProductionStartDateHousing').attr("disabled", false);
                                $('#housingReliabilityStartDateHousing').attr("disabled", false);
                                $('#housingMassProStartDateHousing').attr("disabled", false);
                                $('#batteryHousing_TotalQuantity').attr("disabled", false);
                                $('#batteryHousing_PerDayCapacity').attr("disabled", false);
                                document.getElementById("housingMassLineInfo_chosen").disabled = false;

                                if (housing1 == "Invalid date") {
                                    $.trim($('#materialReceiveStartDateHousing').val(""));
                                    // $('#materialReceiveStartDateHousing').attr("disabled", true);
                                } else {
                                    $.trim($('#materialReceiveStartDateHousing').val(moment(dataList[ii].MaterialReceiveStartDateBHousing).format("YYYY-MM-DD")));
                                }


                                var housing2 = moment(dataList[ii].MaterialReceiveEndDateBHousing).format('YYYY-MM-DD');

                                if (housing2 == "Invalid date") {
                                    $.trim($('#materialReceiveEndDateHousing').val(""));
                                    //  $('#materialReceiveEndDateHousing').attr("disabled", true);
                                } else {
                                    $.trim($('#materialReceiveEndDateHousing').val(moment(dataList[ii].MaterialReceiveEndDateBHousing).format("YYYY-MM-DD")));
                                }

                                var housing3 = moment(dataList[ii].IqcCompleteStartDateBHousing).format("YYYY-MM-DD");

                                if (housing3 == "Invalid date") {
                                    $.trim($('#iqcCompleteStartDateHousing').val(""));
                                    //  $('#iqcCompleteStartDateHousing').attr("disabled", false);
                                } else {
                                    $.trim($('#iqcCompleteStartDateHousing').val(moment(dataList[ii].IqcCompleteStartDateBHousing).format("YYYY-MM-DD")));
                                }
                                var housing4 = moment(dataList[ii].IqcCompleteEndDateBHousing).format("YYYY-MM-DD");
                                if (housing4 == "Invalid date") {
                                    $.trim($('#iqcCompleteEndDateHousing').val(""));
                                    // $('#iqcCompleteEndDateHousing').attr("disabled", true);
                                } else {
                                    $.trim($('#iqcCompleteEndDateHousing').val(moment(dataList[ii].IqcCompleteEndDateBHousing).format("YYYY-MM-DD")));
                                }

                                var housing5 = moment(dataList[ii].TrialProductionStartDateBHousing).format("YYYY-MM-DD");
                                if (housing5 == "Invalid date") {
                                    $.trim($('#trialProductionStartDateHousing').val(""));
                                    //  $('#trialProductionStartDateHousing').attr("disabled", false);
                                } else {
                                    $.trim($('#trialProductionStartDateHousing').val(moment(dataList[ii].TrialProductionStartDateBHousing).format("YYYY-MM-DD")));

                                }
                                var housing6 = moment(dataList[ii].TrialProductionEndDateBHousing).format("YYYY-MM-DD");
                                if (housing6 == "Invalid date") {
                                    $.trim($('#trialProductionEndDateHousing').val(""));
                                    //  $('#trialProductionEndDateHousing').attr("disabled", true);
                                } else {
                                    $.trim($('#trialProductionEndDateHousing').val(moment(dataList[ii].TrialProductionEndDateBHousing).format("YYYY-MM-DD")));

                                }

                                var housing7 = moment(dataList[ii].HousingReliabilityTestStartDateBHousing).format("YYYY-MM-DD");
                                if (housing7 == "Invalid date") {
                                    $.trim($('#housingReliabilityStartDateHousing').val(""));
                                    //  $('#housingReliabilityStartDateHousing').attr("disabled", false);
                                } else {
                                    $.trim($('#housingReliabilityStartDateHousing').val(moment(dataList[ii].HousingReliabilityTestStartDateBHousing).format("YYYY-MM-DD")));

                                }

                                var housing8 = moment(dataList[ii].HousingReliabilityTestEndDateBHousing).format("YYYY-MM-DD");
                                if (housing8 == "Invalid date") {
                                    $.trim($('#housingReliabilityEndtDateHousing').val(""));
                                    //  $('#housingReliabilityEndtDateHousing').attr("disabled", true);
                                } else {
                                    $.trim($('#housingReliabilityEndtDateHousing').val(moment(dataList[ii].HousingReliabilityTestEndDateBHousing).format("YYYY-MM-DD")));
                                }

                                var housing9 = moment(dataList[ii].HousingMassProductionStartDateBHousing).format("YYYY-MM-DD");
                                if (housing9 == "Invalid date") {
                                    $.trim($('#housingMassProStartDateHousing').val(""));
                                    //  $('#housingMassProStartDateHousing').attr("disabled", false);
                                } else {
                                    $.trim($('#housingMassProStartDateHousing').val(moment(dataList[ii].HousingMassProductionStartDateBHousing).format("YYYY-MM-DD")));
                                }
                            } else {
                                $("#housingChkId").prop("checked", false);

                                $('#materialReceiveStartDateHousing').attr("disabled", true);
                                $('#materialReceiveEndDateHousing').attr("disabled", true);
                                $('#iqcCompleteStartDateHousing').attr("disabled", true);
                                $('#iqcCompleteEndDateHousing').attr("disabled", true);
                                $('#trialProductionStartDateHousing').attr("disabled", true);
                                $('#trialProductionEndDateHousing').attr("disabled", true);
                                $('#housingReliabilityStartDateHousing').attr("disabled", true);
                                $('#housingReliabilityEndtDateHousing').attr("disabled", true);
                                $('#housingMassProStartDateHousing').attr("disabled", true);
                                $('#housingMassProEndtDateHousing').attr("disabled", true);
                                // $('#batteryAgingTestStartDate').attr("disabled", true);

                                $('#batteryHousing_TotalQuantity').attr("disabled", true);
                                $('#batteryHousing_PerDayCapacity').attr("disabled", true);
                                document.getElementById("housingMassLineInfo_chosen").disabled = true;

                                $("#housingAllLineInformation tbody.housingAllLineTBody").empty();
                                $("#housingAvailableLineInformation tbody.housingAvailableLineTBody").empty();

                                $('#materialReceiveStartDateHousing').val("");
                                $('#materialReceiveEndDateHousing').val("");
                                $('#iqcCompleteStartDateHousing').val("");
                                $('#iqcCompleteEndDateHousing').val("");
                                $('#trialProductionStartDateHousing').val("");
                                $('#trialProductionEndDateHousing').val("");
                                $('#housingReliabilityStartDateHousing').val("");
                                $('#housingReliabilityEndtDateHousing').val("");
                                $('#housingMassProStartDateHousing').val("");
                                $('#housingMassProEndtDateHousing').val("");
                                $('#batteryHousing_TotalQuantity').val("");
                                $('#batteryHousing_PerDayCapacity').val("");
                            }

                            ///////Housing///////
                            var battery1 = moment(dataList[ii].MaterialReceiveStartDateBattery).format('YYYY-MM-DD');

                            if (battery1 != "Invalid date") {
                                $("#batteryChkId").prop("checked", true);
                                $('#materialReceiveStartDateBattery').attr("disabled", false);
                                $('#iqcCompleteStartDateBattery').attr("disabled", false);
                                $('#trialProductionStartDateBattery').attr("disabled", false);
                                $('#batteryReliabilityTestStartDate').attr("disabled", false);
                                $('#batteryMassProductionStartDate').attr("disabled", false);
                                $('#batteryAgingTestStartDate').attr("disabled", false);

                                $('#battery_TotalQuantity').attr("disabled", false);
                                $('#battery_PerDayCapacity').attr("disabled", false);
                                document.getElementById("batteryMassLineInfo_chosen").disabled = false;

                                if (battery1 == "Invalid date") {
                                    $.trim($('#materialReceiveStartDateBattery').val(""));
                                    //   $('#materialReceiveStartDateBattery').attr("disabled", false);
                                } else {
                                    $.trim($('#materialReceiveStartDateBattery').val(moment(dataList[ii].MaterialReceiveStartDateBattery).format("YYYY-MM-DD")));
                                }

                                var battery2 = moment(dataList[ii].MaterialReceiveEndDateBattery).format('YYYY-MM-DD');

                                if (battery2 == "Invalid date") {
                                    $.trim($('#materialReceiveEndDateBattery').val(""));
                                    //    $('#materialReceiveEndDateBattery').attr("disabled", true);
                                } else {
                                    $.trim($('#materialReceiveEndDateBattery').val(moment(dataList[ii].MaterialReceiveEndDateBattery).format("YYYY-MM-DD")));
                                }

                                var battery3 = moment(dataList[ii].IqcCompleteStartDateBattery).format("YYYY-MM-DD");

                                if (battery3 == "Invalid date") {
                                    $.trim($('#iqcCompleteStartDateBattery').val(""));
                                    //   $('#iqcCompleteStartDateBattery').attr("disabled", false);
                                } else {
                                    $.trim($('#iqcCompleteStartDateBattery').val(moment(dataList[ii].IqcCompleteStartDateBattery).format("YYYY-MM-DD")));
                                }
                                var battery4 = moment(dataList[ii].IqcCompleteEndDateBattery).format("YYYY-MM-DD");
                                if (battery4 == "Invalid date") {
                                    $.trim($('#iqcCompleteEndDateBattery').val(""));
                                    // $('#iqcCompleteEndDateBattery').attr("disabled", true);
                                } else {
                                    $.trim($('#iqcCompleteEndDateBattery').val(moment(dataList[ii].IqcCompleteEndDateBattery).format("YYYY-MM-DD")));
                                }

                                var battery5 = moment(dataList[ii].TrialProductionStartDateBattery).format("YYYY-MM-DD");
                                if (battery5 == "Invalid date") {
                                    $.trim($('#trialProductionStartDateBattery').val(""));
                                    //   $('#trialProductionStartDateBattery').attr("disabled", false);
                                } else {
                                    $.trim($('#trialProductionStartDateBattery').val(moment(dataList[ii].TrialProductionStartDateBattery).format("YYYY-MM-DD")));

                                }
                                var battery6 = moment(dataList[ii].TrialProductionEndDateBattery).format("YYYY-MM-DD");
                                if (battery6 == "Invalid date") {
                                    $.trim($('#trialProductionEndDateBattery').val(""));
                                    // $('#trialProductionEndDateBattery').attr("disabled", true);
                                } else {
                                    $.trim($('#trialProductionEndDateBattery').val(moment(dataList[ii].TrialProductionEndDateBattery).format("YYYY-MM-DD")));

                                }

                                var battery7 = moment(dataList[ii].BatteryReliabilityTestStartDate).format("YYYY-MM-DD");
                                if (battery7 == "Invalid date") {
                                    $.trim($('#batteryReliabilityTestStartDate').val(""));
                                    // $('#batteryReliabilityTestStartDate').attr("disabled", false);
                                } else {
                                    $.trim($('#batteryReliabilityTestStartDate').val(moment(dataList[ii].BatteryReliabilityTestStartDate).format("YYYY-MM-DD")));

                                }

                                var battery8 = moment(dataList[ii].BatteryReliabilityTestEndDate).format("YYYY-MM-DD");
                                if (battery8 == "Invalid date") {
                                    $.trim($('#batteryReliabilityTestEndDate').val(""));
                                    //  $('#batteryReliabilityTestEndDate').attr("disabled", true);
                                } else {
                                    $.trim($('#batteryReliabilityTestEndDate').val(moment(dataList[ii].BatteryReliabilityTestEndDate).format("YYYY-MM-DD")));
                                }

                                var battery9 = moment(dataList[ii].BatteryMassProductionStartDate).format("YYYY-MM-DD");
                                if (battery9 == "Invalid date") {
                                    $.trim($('#batteryMassProductionStartDate').val(""));
                                    //  $('#batteryMassProductionStartDate').attr("disabled", false);
                                } else {
                                    $.trim($('#batteryMassProductionStartDate').val(moment(dataList[ii].BatteryMassProductionStartDate).format("YYYY-MM-DD")));
                                }

                                var battery10 = moment(dataList[ii].BatteryAgingTestStartDate).format("YYYY-MM-DD");
                                if (battery10 == "Invalid date") {
                                    $.trim($('#batteryAgingTestStartDate').val(""));
                                    // $('#batteryAgingTestStartDate').attr("disabled", false);
                                } else {
                                    $.trim($('#batteryAgingTestStartDate').val(moment(dataList[ii].BatteryAgingTestStartDate).format("YYYY-MM-DD")));
                                }
                                var battery11 = moment(dataList[ii].BatteryAgingTestEndDate).format("YYYY-MM-DD");
                                if (battery11 == "Invalid date") {
                                    $.trim($('#batteryAgingTestEndDate').val(""));
                                    //   $('#batteryAgingTestEndDate').attr("disabled", false);
                                } else {
                                    $.trim($('#batteryAgingTestEndDate').val(moment(dataList[ii].BatteryAgingTestEndDate).format("YYYY-MM-DD")));
                                }
                            } else {
                                $("#batteryChkId").prop("checked", false);

                                $('#materialReceiveStartDateBattery').attr("disabled", true);
                                $('#materialReceiveEndDateBattery').attr("disabled", true);
                                $('#iqcCompleteStartDateBattery').attr("disabled", true);
                                $('#iqcCompleteEndDateBattery').attr("disabled", true);
                                $('#trialProductionStartDateBattery').attr("disabled", true);
                                $('#trialProductionEndDateBattery').attr("disabled", true);
                                $('#batteryReliabilityTestStartDate').attr("disabled", true);
                                $('#batteryReliabilityTestEndDate').attr("disabled", true);
                                $('#batteryMassProductionStartDate').attr("disabled", true);
                                $('#batteryMassProductionEndDate').attr("disabled", true);
                                $('#batteryAgingTestStartDate').attr("disabled", true);
                                $('#batteryAgingTestEndDate').attr("disabled", true);
                                $('#battery_TotalQuantity').attr("disabled", true);
                                $('#battery_PerDayCapacity').attr("disabled", true);
                                document.getElementById("batteryMassLineInfo_chosen").disabled = true;


                                $('#materialReceiveStartDateBattery').val("");
                                $('#materialReceiveEndDateBattery').val("");
                                $('#iqcCompleteStartDateBattery').val("");
                                $('#iqcCompleteEndDateBattery').val("");
                                $('#trialProductionStartDateBattery').val("");
                                $('#trialProductionEndDateBattery').val("");
                                $('#batteryReliabilityTestStartDate').val("");
                                $('#batteryReliabilityTestEndDate').val("");
                                $('#batteryMassProductionStartDate').val("");
                                $('#batteryMassProductionEndDate').val("");
                                $('#batteryAgingTestStartDate').val("");
                                $('#batteryAgingTestEndDate').val("");
                                $('#battery_TotalQuantity').val("");
                                $('#battery_PerDayCapacity').val("");
                                $("#batteryAllLineInformation tbody.batteryAllLineTBody").empty();
                                $("#batteryAvailableLineInformation tbody.batteryAvailableLineTBody").empty();
                            }

                            ///Assembly//////
                            var assembly1 = moment(dataList[ii].MaterialReceiveStartDateBAssembly).format("YYYY-MM-DD");
                            if (assembly1 != "Invalid date") {
                                $("#assemblyChkId").prop("checked", true);

                                $('#materialStartDateBAssembly').attr("disabled", false);
                                $('#iqcCompleteStartDateBAssembly').attr("disabled", false);
                                $('#trialProductionStartDateBAssembly').attr("disabled", false);
                                $('#softwareConfirmationStartDate').attr("disabled", false);
                                $('#rnDConfirmStartDateBAssembly').attr("disabled", false);
                                $('#assembStartDateBAssembly').attr("disabled", false);
                                $('#packingMassProductionStartDateBAssembly').attr("disabled", false);
                                $('#batteryAssembly_TotalQuantity').attr("disabled", false);
                                $('#batteryAssembly_PerDayCapacity').attr("disabled", false);
                                $('#batteryPacking_TotalQuantity').attr("disabled", false);
                                $('#batteryPacking_PerDayCapacity').attr("disabled", false);
                                document.getElementById("assemblyMassLineInfo_chosen").disabled = false;
                                document.getElementById("packingMassLineInfo_chosen").disabled = false;

                                // var assembly1 = $.trim($('#materialReceiveEndDateBAssembly').val(moment(dataList[ii].MaterialReceiveEndDateBAssembly).format("YYYY-MM-DD")));
                                if (assembly1 == "Invalid date") {
                                    $.trim($('#materialStartDateBAssembly').val(""));
                                } else {
                                    $.trim($('#materialStartDateBAssembly').val(moment(dataList[ii].MaterialReceiveStartDateBAssembly).format("YYYY-MM-DD")));
                                }

                                var assembly2 = moment(dataList[ii].MaterialReceiveEndDateBAssembly).format("YYYY-MM-DD");
                                if (assembly2 == "Invalid date") {
                                    $.trim($('#materialReceiveEndDateBAssembly').val(""));
                                } else {
                                    $.trim($('#materialReceiveEndDateBAssembly').val(moment(dataList[ii].MaterialReceiveEndDateBAssembly).format("YYYY-MM-DD")));
                                }

                                var assembly3 = moment(dataList[ii].IqcCompleteStartDateBAssembly).format("YYYY-MM-DD");
                                if (assembly3 == "Invalid date") {
                                    $.trim($('#iqcCompleteStartDateBAssembly').val(""));
                                } else {
                                    $.trim($('#iqcCompleteStartDateBAssembly').val(moment(dataList[ii].IqcCompleteStartDateBAssembly).format("YYYY-MM-DD")));
                                }

                                var assembly4 = moment(dataList[ii].IqcCompleteEndDateBAssembly).format("YYYY-MM-DD");
                                if (assembly4 == "Invalid date") {
                                    $.trim($('#iqcCompleteEndDateBAssembly').val(""));
                                } else {
                                    $.trim($('#iqcCompleteEndDateBAssembly').val(moment(dataList[ii].IqcCompleteEndDateBAssembly).format("YYYY-MM-DD")));
                                }

                                var assembly5 = moment(dataList[ii].TrialProductionStartDateBAssembly).format("YYYY-MM-DD");
                                if (assembly5 == "Invalid date") {
                                    $.trim($('#trialProductionStartDateBAssembly').val(""));
                                } else {
                                    $.trim($('#trialProductionStartDateBAssembly').val(moment(dataList[ii].TrialProductionStartDateBAssembly).format("YYYY-MM-DD")));
                                }

                                var assembly6 = moment(dataList[ii].TrialProductionEndDateBAssembly).format("YYYY-MM-DD");
                                if (assembly6 == "Invalid date") {
                                    $.trim($('#trialProductionEndDateBAssembly').val(""));
                                } else {
                                    $.trim($('#trialProductionEndDateBAssembly').val(moment(dataList[ii].TrialProductionEndDateBAssembly).format("YYYY-MM-DD")));
                                }

                                var assembly7 = moment(dataList[ii].SoftwareConfirmationStartDateBAssembly).format("YYYY-MM-DD");
                                if (assembly7 == "Invalid date") {
                                    $.trim($('#softwareConfirmationStartDate').val(""));
                                } else {
                                    $.trim($('#softwareConfirmationStartDate').val(moment(dataList[ii].SoftwareConfirmationStartDateBAssembly).format("YYYY-MM-DD")));
                                }

                                var assembly8 = moment(dataList[ii].SoftwareConfirmationEndDateBAssembly).format("YYYY-MM-DD");
                                if (assembly8 == "Invalid date") {
                                    $.trim($('#softwareConfirmationEndDate').val(""));
                                } else {
                                    $.trim($('#softwareConfirmationEndDate').val(moment(dataList[ii].SoftwareConfirmationEndDateBAssembly).format("YYYY-MM-DD")));
                                }

                                var assembly9 = moment(dataList[ii].RandDConfirmationStartDateBAssembly).format("YYYY-MM-DD");
                                if (assembly9 == "Invalid date") {
                                    $.trim($('#rnDConfirmStartDateBAssembly').val(""));
                                } else {
                                    $.trim($('#rnDConfirmStartDateBAssembly').val(moment(dataList[ii].RandDConfirmationStartDateBAssembly).format("YYYY-MM-DD")));
                                }

                                var assembly10 = moment(dataList[ii].RandDConfirmationEndDateBAssembly).format("YYYY-MM-DD");
                                if (assembly10 == "Invalid date") {
                                    $.trim($('#rnDConfirmEndDateBAssembly').val(""));
                                } else {
                                    $.trim($('#rnDConfirmEndDateBAssembly').val(moment(dataList[ii].RandDConfirmationEndDateBAssembly).format("YYYY-MM-DD")));
                                }

                                var assembly11 = moment(dataList[ii].AssemblyMassProductionStartDateBAssembly).format("YYYY-MM-DD");
                                if (assembly11 == "Invalid date") {
                                    $.trim($('#assembStartDateBAssembly').val(""));
                                } else {
                                    $.trim($('#assembStartDateBAssembly').val(moment(dataList[ii].AssemblyMassProductionStartDateBAssembly).format("YYYY-MM-DD")));
                                }

                                var assembly12 = moment(dataList[ii].PackingMassProductionStartDateBAssembly).format("YYYY-MM-DD");
                                if (assembly12 == "Invalid date") {
                                    $.trim($('#packingMassProductionStartDateBAssembly').val(""));
                                } else {
                                    $.trim($('#packingMassProductionStartDateBAssembly').val(moment(dataList[ii].PackingMassProductionStartDateBAssembly).format("YYYY-MM-DD")));
                                }


                            } else {
                                $("#assemblyChkId").prop("checked", false);

                                $('#materialStartDateBAssembly').attr("disabled", true);
                                $('#materialReceiveEndDateBAssembly').attr("disabled", true);
                                $('#iqcCompleteStartDateBAssembly').attr("disabled", true);
                                $('#iqcCompleteEndDateBAssembly').attr("disabled", true);
                                $('#trialProductionStartDateBAssembly').attr("disabled", true);
                                $('#trialProductionEndDateBAssembly').attr("disabled", true);
                                $('#softwareConfirmationStartDate').attr("disabled", true);
                                $('#softwareConfirmationEndDate').attr("disabled", true);
                                $('#rnDConfirmStartDateBAssembly').attr("disabled", true);
                                $('#rnDConfirmEndDateBAssembly').attr("disabled", true);
                                $('#assembStartDateBAssembly').attr("disabled", true);
                                $('#assembEndDateBAssembly').attr("disabled", true);
                                $('#packingMassProductionStartDateBAssembly').attr("disabled", true);
                                $('#packingMassProductionEndDateBAssembly').attr("disabled", true);
                                $('#batteryAssembly_TotalQuantity').attr("disabled", true);
                                $('#batteryAssembly_PerDayCapacity').attr("disabled", true);
                                $('#batteryPacking_TotalQuantity').attr("disabled", true);
                                $('#batteryPacking_PerDayCapacity').attr("disabled", true);

                                document.getElementById("assemblyMassLineInfo_chosen").disabled = true;
                                $("#assemblyAllLineInformation tbody.assemblyAllLineTBody").empty();
                                $("#assemblyAvailableLineInformation tbody.assemblyAvailableLineTBody").empty();

                                document.getElementById("packingMassLineInfo_chosen").disabled = true;
                                $("#packingAllLineInformation tbody.packingAllLineTBody").empty();
                                $("#packingAvailableLineInformation tbody.packingAvailableLineTBody").empty();

                                $('#materialStartDateBAssembly').val("");
                                $('#materialReceiveEndDateBAssembly').val("");
                                $('#iqcCompleteStartDateBAssembly').val("");
                                $('#iqcCompleteEndDateBAssembly').val("");
                                $('#trialProductionStartDateBAssembly').val("");
                                $('#trialProductionEndDateBAssembly').val("");
                                $('#softwareConfirmationStartDate').val("");
                                $('#softwareConfirmationEndDate').val("");
                                $('#rnDConfirmStartDateBAssembly').val("");
                                $('#rnDConfirmEndDateBAssembly').val("");
                                $('#assembStartDateBAssembly').val("");
                                $('#assembEndDateBAssembly').val("");
                                $('#packingMassProductionStartDateBAssembly').val("");
                                $('#packingMassProductionEndDateBAssembly').val("");
                                $('#batteryAssembly_TotalQuantity').val("");
                                $('#batteryAssembly_PerDayCapacity').val("");
                                $('#batteryPacking_TotalQuantity').val("");
                                $('#batteryPacking_PerDayCapacity').val("");
                            }
                        }
                    }///end of else
                }
            });
            //end old
        }
    }

    $('#btnForSearch').on('click', function () {
        $("#tblForSelectedPro tbody.tBodyForGraph").empty();

        var proSelectId = document.getElementById('dropForProject');
        console.log(proSelectId);

        var selecteddropText = proSelectId.options[proSelectId.selectedIndex].text;
        var selecteddropValue = proSelectId.options[proSelectId.selectedIndex].value;
        console.log("proname " + selecteddropText);
        console.log("proId " + selecteddropValue);

        if (selecteddropText == "SELECT PROJECT") {
            // alert("Please select Project must..........");
            alertify.dialog('alert').set({
                'title': '   ',
                'transition': 'zoom',
                'message': "Please select Project must.",
            }).show();
            return false;
              $('#divSearchedvalue').hide();

            return false;
        } else {

            $('#divSearchedvalue').show();

            //if ($("#smtChkId").is(':checked')) {
            //    $("#smtChkId").attr('value', 'true');
            //    $("#smtChkId").prop("checked", true);
            //} else {
            //    $("#smtChkId").attr('value', 'false');
            //    $("#smtChkId").prop("checked", false);
            //}
            //smtChk = $('#smtChkId').val();
            //console.log("smtChk :" + smtChk);
            ////////////////////////////////////////
            //if ($("#housingChkId").is(':checked')) {
            //    $("#housingChkId").attr('value', 'true');
            //    $("#housingChkId").prop("checked", true);
            //} else {
            //    $("#housingChkId").attr('value', 'false');
            //    $("#housingChkId").prop("checked", false);
            //}
            //houseChk = $('#housingChkId').val();
            //console.log("houseChk :" + houseChk);
            /////////////////////////////////////
            //if ($("#batteryChkId").is(':checked')) {
            //    $("#batteryChkId").attr('value', 'true');
            //    $("#batteryChkId").prop("checked", true);
            //} else {
            //    $("#batteryChkId").attr('value', 'false');
            //    $("#batteryChkId").prop("checked", false);
            //}
            //batteryChk = $('#batteryChkId').val();
            //console.log("batteryChk :" + batteryChk);
            /////////////////////////////////////
            //if ($("#assemblyChkId").is(':checked')) {
            //    $("#assemblyChkId").attr('value', 'true');
            //    $("#assemblyChkId").prop("checked", true);
            //} else {
            //    $("#assemblyChkId").attr('value', 'false');
            //    $("#assemblyChkId").prop("checked", false);
            //}
            //assemblyChk = $('#assemblyChkId').val();
            //console.log("assemblyChk :" + assemblyChk);

            //$("#smtChkId").prop("checked", false);
            //$("#housingChkId").prop("checked", false);
            //$("#batteryChkId").prop("checked", false);
            //$("#assemblyChkId").prop("checked", false);

            var smtProName = $('#smtProName').text(selecteddropValue);
            var smtProName1 = $('#smtProName').val(selecteddropText);

            var housingProName1 = $('#housingProName').text(selecteddropValue);
            var housingProName = $('#housingProName').val(selecteddropText);

            var batteryProName = $('#batteryProName').text(selecteddropValue);
            var batteryProName1 = $('#batteryProName').val(selecteddropText);

            var assemblyProName = $('#assemblyProName').text(selecteddropValue);
            var assemblyProName1 = $('#assemblyProName').val(selecteddropText);


            $.ajax({
                url: '@Url.Action("SelectLineInfoBatterySmt", "Production")',
                type: "POST",
                data: "{ projectId: '" + selecteddropValue + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function(data) {
                    console.log(data);

                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }

                    var items = $.parseJSON(dataList);
                    arrListForBatterySmt = items;

                    $('#smtMassLineInfo').empty();
                    $.each(arrListForBatterySmt, function(i, item) {
                        console.log("item  :" + item.LineNumber);

                        var text = item.LineNumber;
                        var val = item.CKD_SMT_Line_Capacity;

                        $("#smtMassLineInfo").append('<option value=' + val + '>' + text + '</option>');
                        $("#smtMassLineInfo").trigger("chosen:updated");
                    });
                }
            });

            $.ajax({
                url: '@Url.Action("SelectLineInfoBatteryAssembly", "Production")',
                type: "POST",
                data: "{ projectId: '" + selecteddropValue + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function(data) {
                    console.log(data);

                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }
                    var items = $.parseJSON(dataList);
                    arrListForBatteryAssembly = items;

                    $('#assemblyMassLineInfo').empty();
                    $.each(arrListForBatteryAssembly, function(i, item) {
                        console.log("item  :" + item.LineNumber);

                        var text = item.LineNumber;
                        var val = item.CKD_Assembly_Line_Capacity;

                        $("#assemblyMassLineInfo").append('<option value=' + val + '>' + text + '</option>');
                        $("#assemblyMassLineInfo").trigger("chosen:updated");
                    });
                }
            });
            $.ajax({
                url: '@Url.Action("SelectLineInfoBatteryPacking", "Production")',
                type: "POST",
                data: "{ projectId: '" + selecteddropValue + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                async: false,
                success: function(data) {
                    console.log(data);

                    var dataList = [];
                    for (var x in data) {
                        dataList = data[x];
                    }

                    var items = $.parseJSON(dataList);
                    arrListForBatteryPacking = items;

                    $('#packingMassLineInfo').empty();
                    $.each(arrListForBatteryPacking, function(i, item) {
                        console.log("item  :" + item.LineNumber);

                        var text = item.LineNumber;
                        var val = item.CKD_Packing_Line_Capacity;

                        $("#packingMassLineInfo").append('<option value=' + val + '>' + text + '</option>');
                        $("#packingMassLineInfo").trigger("chosen:updated");
                    });
                }
            });


            //all selected project history
            $.ajax({
                url: '@Url.Action("GetSelectedProjectPlanningHistory", "Production")',//'/ProjectManager/GetProject',
                type: "GET",
                dataType: "JSON",
                data: { projectId: selecteddropValue, projectName: selecteddropText },
                success: function (data) {
                    console.log(data);
                    
                  
                    var ll = data.length;
                    console.log(ll);
                    var dataList = [];

                    for (var x in data) {
                        dataList = data[x];
                    }

                    var l = dataList.length;
                    if (l==0) {
                         $("#tblForSelectedPro tbody.tBodyForGraph").empty();
                    }

                    for (var ii = 0; ii < l; ii++) {

                        var smtMaterialS;
                        var smtMaterialE;

                        if (dataList[ii].MaterialReceiveStartDateBSmt == null) {

                            smtMaterialS = "----";
                        } else {

                            smtMaterialS = moment(dataList[ii].MaterialReceiveStartDateBSmt).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].MaterialReceiveEndDateBSmt == null) {

                            smtMaterialE = "----";
                        } else {

                            smtMaterialE = moment(dataList[ii].MaterialReceiveEndDateBSmt).format('YYYY-MM-DD');
                        }
                        //
                        var smtIqcS;
                        var smtIqcE;
                        if (dataList[ii].IqcCompleteStartDateBSmt == null) {

                            smtIqcS = "----";
                        } else {

                            smtIqcS = moment(dataList[ii].IqcCompleteStartDateBSmt).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].IqcCompleteEndDateBSmt == null) {

                            smtIqcE = "----";
                        } else {

                            smtIqcE = moment(dataList[ii].IqcCompleteEndDateBSmt).format('YYYY-MM-DD');
                        }
                        //
                        var smtTrialS;
                        var smtTrialL;
                        var smtTrialE;
                        if (dataList[ii].TrialProductionStartDateBSmt == null) {

                            smtTrialS = "----";
                        } else {

                            smtTrialS = moment(dataList[ii].TrialProductionStartDateBSmt).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].SmtTrialLine == null) {

                            smtTrialL = "----";
                        } else {

                            smtTrialL = dataList[ii].SmtTrialLine;
                        }
                        if (dataList[ii].TrialProductionEndDateBSmt == null) {

                            smtTrialE = "----";
                        } else {

                            smtTrialE = moment(dataList[ii].TrialProductionEndDateBSmt).format('YYYY-MM-DD');
                        }
                        //

                        var smtMassS;
                        var smtMassL;
                        var smtMassE;
                        if (dataList[ii].SmtMassProductionStartDateBSmt == null) {

                            smtMassS = "----";
                        } else {

                            smtMassS = moment(dataList[ii].SmtMassProductionStartDateBSmt).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].SmtAllLineNumber == null) {

                            smtMassL = "----";
                        } else {

                            smtMassL = dataList[ii].SmtAllLineNumber;
                        }
                        if (dataList[ii].SmtMassProductionEndDateBSmt == null) {

                            smtMassE = "----";
                        } else {

                            smtMassE = moment(dataList[ii].SmtMassProductionEndDateBSmt).format('YYYY-MM-DD');
                        }
                        //end smt

                        //housing
                        var housingMaterialS;
                        var housingMaterialE;
                        var housingIqcS;
                        var housingIqcE;
                        var housingTrialS;
                        var housingTrialL;
                        var housingTrialE;
                        var housingReliabilityS;
                        var housingReliabilityE;
                        var housingMassS;
                        var housingMassL;
                        var housingMassE;
                        if (dataList[ii].MaterialReceiveStartDateBHousing == null) {

                            housingMaterialS = "----";
                        } else {

                            housingMaterialS = moment(dataList[ii].MaterialReceiveStartDateBHousing).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].MaterialReceiveEndDateBHousing == null) {

                            housingMaterialE = "----";
                        } else {

                            housingMaterialE = moment(dataList[ii].MaterialReceiveEndDateBHousing).format('YYYY-MM-DD');
                        }
                        //
                        if (dataList[ii].IqcCompleteStartDateBHousing == null) {

                            housingIqcS = "----";
                        } else {

                            housingIqcS = moment(dataList[ii].IqcCompleteStartDateBHousing).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].IqcCompleteEndDateBHousing == null) {

                            housingIqcE = "----";
                        } else {

                            housingIqcE = moment(dataList[ii].IqcCompleteEndDateBHousing).format('YYYY-MM-DD');
                        }
                        //
                        if (dataList[ii].TrialProductionStartDateBHousing == null) {

                            housingTrialS = "----";
                        } else {

                            housingTrialS = moment(dataList[ii].TrialProductionStartDateBHousing).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].HousingTrialLine == null) {

                            housingTrialL = "----";
                        } else {

                            housingTrialL = dataList[ii].HousingTrialLine;
                        }
                        if (dataList[ii].TrialProductionEndDateBHousing == null) {

                            housingTrialE = "----";
                        } else {

                            housingTrialE = moment(dataList[ii].TrialProductionEndDateBHousing).format('YYYY-MM-DD');
                        }
                        //
                        if (dataList[ii].HousingReliabilityTestStartDateBHousing == null) {

                            housingReliabilityS = "----";
                        } else {

                            housingReliabilityS = moment(dataList[ii].HousingReliabilityTestStartDateBHousing).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].HousingReliabilityTestEndDateBHousing == null) {

                            housingReliabilityE = "----";
                        } else {

                            housingReliabilityE = moment(dataList[ii].HousingReliabilityTestEndDateBHousing).format('YYYY-MM-DD');
                        }
                        //
                        if (dataList[ii].HousingMassProductionStartDateBHousing == null) {

                            housingMassS = "----";
                        } else {

                            housingMassS = moment(dataList[ii].HousingMassProductionStartDateBHousing).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].HousingAllLineNumber == null) {

                            housingMassL = "----";
                        } else {

                            housingMassL = dataList[ii].HousingAllLineNumber;
                        }
                        if (dataList[ii].HousingMassProductionEndDateBHousing == null) {

                            housingMassE = "----";
                        } else {

                            housingMassE = moment(dataList[ii].HousingMassProductionEndDateBHousing).format('YYYY-MM-DD');
                        }

                        ////end housing
                        var batteryMaterialS;
                        var batteryMaterialE;

                        if (dataList[ii].MaterialReceiveStartDateBattery == null) {

                            batteryMaterialS = "----";
                        } else {

                            batteryMaterialS = moment(dataList[ii].MaterialReceiveStartDateBattery).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].MaterialReceiveEndDateBattery == null) {

                            batteryMaterialE = "----";
                        } else {

                            batteryMaterialE = moment(dataList[ii].MaterialReceiveEndDateBattery).format('YYYY-MM-DD');
                        }
                        //
                        var batteryIqcS;
                        var batteryIqcE;
                        if (dataList[ii].IqcCompleteStartDateBattery == null) {

                            batteryIqcS = "----";
                        } else {

                            batteryIqcS = moment(dataList[ii].IqcCompleteStartDateBattery).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].IqcCompleteEndDateBattery == null) {

                            batteryIqcE = "----";
                        } else {

                            batteryIqcE = moment(dataList[ii].IqcCompleteEndDateBattery).format('YYYY-MM-DD');
                        }
                        //
                        var batteryTrialS;
                        var batteryTrialL;
                        var batteryTrialE;
                        if (dataList[ii].TrialProductionStartDateBattery == null) {

                            batteryTrialS = "----";
                        } else {

                            batteryTrialS = moment(dataList[ii].TrialProductionStartDateBattery).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].BatteryTrialLine == null) {

                            batteryTrialL = "----";
                        } else {

                            batteryTrialL = dataList[ii].BatteryTrialLine;
                        }
                        if (dataList[ii].TrialProductionEndDateBattery == null) {

                            batteryTrialE = "----";
                        } else {

                            batteryTrialE = moment(dataList[ii].TrialProductionEndDateBattery).format('YYYY-MM-DD');
                        }
                        //
                        var batteryReliabilityS;
                        var batteryReliabilityE;
                        if (dataList[ii].BatteryReliabilityTestStartDate == null) {

                            batteryReliabilityS = "----";
                        } else {

                            batteryReliabilityS = moment(dataList[ii].BatteryReliabilityTestStartDate).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].BatteryReliabilityTestEndDate == null) {

                            batteryReliabilityE = "----";
                        } else {

                            batteryReliabilityE = moment(dataList[ii].BatteryReliabilityTestEndDate).format('YYYY-MM-DD');
                        }
                        //

                        var batteryMassS;
                        var batteryMassL;
                        var batterysMassE;
                        if (dataList[ii].BatteryMassProductionStartDate == null) {

                            batteryMassS = "----";
                        } else {

                            batteryMassS = moment(dataList[ii].BatteryMassProductionStartDate).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].BatteryAllLineNumber == null) {

                            batteryMassL = "----";
                        } else {

                            batteryMassL = dataList[ii].BatteryAllLineNumber;
                        }
                        if (dataList[ii].BatteryMassProductionEndDate == null) {

                            batterysMassE = "----";
                        } else {

                            batterysMassE = moment(dataList[ii].BatteryMassProductionEndDate).format('YYYY-MM-DD');
                        }
                        //
                        var batteryAgingS;
                        var batteryAgingL;
                        if (dataList[ii].BatteryAgingTestStartDate == null) {

                            batteryAgingS = "----";
                        } else {

                            batteryAgingS = moment(dataList[ii].BatteryAgingTestStartDate).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].BatteryAgingTestEndDate == null) {

                            batteryAgingL = "----";
                        } else {

                            batteryAgingL = moment(dataList[ii].BatteryAgingTestEndDate).format('YYYY-MM-DD');
                        }

                        ////Assembly
                        var assemblyMaterialS;
                        var assemblyMaterialE;
                        var assemblyIqcS;
                        var assemblyIqcE;

                        if (dataList[ii].MaterialReceiveStartDateBAssembly == null) {

                            assemblyMaterialS = "----";
                        } else {

                            assemblyMaterialS = moment(dataList[ii].MaterialReceiveStartDateBAssembly).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].MaterialReceiveEndDateBAssembly == null) {

                            assemblyMaterialE = "----";
                        } else {

                            assemblyMaterialE = moment(dataList[ii].MaterialReceiveEndDateBAssembly).format('YYYY-MM-DD');
                        }
                        //
                        if (dataList[ii].IqcCompleteStartDateBAssembly == null) {

                            assemblyIqcS = "----";
                        } else {

                            assemblyIqcS = moment(dataList[ii].IqcCompleteStartDateBAssembly).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].IqcCompleteEndDateBAssembly == null) {

                            assemblyIqcE = "----";
                        } else {

                            assemblyIqcE = moment(dataList[ii].IqcCompleteEndDateBAssembly).format('YYYY-MM-DD');
                        }
                        //
                        var assemblyTrialS;
                        var assemblyTrialL;
                        var assemblyTrialE;
                        if (dataList[ii].TrialProductionStartDateBAssembly == null) {

                            assemblyTrialS = "----";
                        } else {

                            assemblyTrialS = moment(dataList[ii].TrialProductionStartDateBAssembly).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].AssemblyTrialLine == null) {

                            assemblyTrialL = "----";
                        } else {

                            assemblyTrialL = dataList[ii].AssemblyTrialLine;
                        }
                        if (dataList[ii].TrialProductionEndDateBAssembly == null) {

                            assemblyTrialE = "----";
                        } else {

                            assemblyTrialE = moment(dataList[ii].TrialProductionEndDateBAssembly).format('YYYY-MM-DD');
                        }
                        //
                        var assemblySoftwareS;
                        var assemblySoftwareE;
                        if (dataList[ii].SoftwareConfirmationStartDateBAssembly == null) {

                            assemblySoftwareS = "----";
                        } else {

                            assemblySoftwareS = moment(dataList[ii].SoftwareConfirmationStartDateBAssembly).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].SoftwareConfirmationEndDateBAssembly == null) {

                            assemblySoftwareE = "----";
                        } else {

                            assemblySoftwareE = moment(dataList[ii].SoftwareConfirmationEndDateBAssembly).format('YYYY-MM-DD');
                        }
                        //
                        var assemblyRandDS;
                        var assemblyRandDE;
                        if (dataList[ii].RandDConfirmationStartDateBAssembly == null) {

                            assemblyRandDS = "----";
                        } else {

                            assemblyRandDS = moment(dataList[ii].RandDConfirmationStartDateBAssembly).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].RandDConfirmationEndDateBAssembly == null) {

                            assemblyRandDE = "----";
                        } else {

                            assemblyRandDE = moment(dataList[ii].RandDConfirmationEndDateBAssembly).format('YYYY-MM-DD');
                        }
                        //
                        var assemblyMassS;
                        var assemblyMassL;
                        var assemblyMassE;
                        if (dataList[ii].AssemblyMassProductionStartDateBAssembly == null) {

                            assemblyMassS = "----";
                        } else {

                            assemblyMassS = moment(dataList[ii].AssemblyMassProductionStartDateBAssembly).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].AssemblyAllLineNumber == null) {

                            assemblyMassL = "----";
                        } else {

                            assemblyMassL = dataList[ii].AssemblyAllLineNumber;
                        }
                        if (dataList[ii].AssemblyMassProductionEndDateBAssembly == null) {

                            assemblyMassE = "----";
                        } else {

                            assemblyMassE = moment(dataList[ii].AssemblyMassProductionEndDateBAssembly).format('YYYY-MM-DD');
                        }
                        //
                        var assemblyPackingS;
                        var assemblyPackingL;
                        var assemblyPackingE;
                        if (dataList[ii].PackingMassProductionStartDateBAssembly == null) {

                            assemblyPackingS = "----";
                        } else {

                            assemblyPackingS = moment(dataList[ii].PackingMassProductionStartDateBAssembly).format('YYYY-MM-DD');
                        }
                        if (dataList[ii].PackingAllLineNumber == null) {

                            assemblyPackingL = "----";
                        } else {

                            assemblyPackingL = dataList[ii].PackingAllLineNumber;
                        }
                        if (dataList[ii].PackingMassProductionEndDateBAssembly == null) {

                            assemblyPackingE = "----";
                        } else {

                            assemblyPackingE = moment(dataList[ii].PackingMassProductionEndDateBAssembly).format('YYYY-MM-DD');
                        }

                        //$("#tblForSelectedPro tr.trrCls").each(function () {
                        //    var col_val = $(this).find("td:eq(3)").text().trim();
                        //    if (col_val == "ACTIVE") {
                        //        $(this).addClass('selected');  //the selected class colors the row green//
                        //    } else if (col_val == "INACTIVE") {
                        //        $(this).addClass('bad');
                        //    }
                        //});


                        var body = '<tr class="trrCls">';
                        //body += '<td></td>';
                        body += '<td style="display:none">' + dataList[ii].ProjectId + '</td>';
                        body += '<td style="display:none"  class="planIds" id="planIds">' + dataList[ii].AsmPlanId + '</td>';
                        body += '<td style="display:none">' + dataList[ii].AsmId + '</td>';
                        body += '<td style="font-weight:bold">' + dataList[ii].ActiveStatus + '</td>';
                        body += '<td>' + smtMaterialS + '</td>';
                        body += '<td>' + smtMaterialE + '</td>';
                        body += '<td>' + smtIqcS + '</td>';
                        body += '<td>' + smtIqcE + '</td>';
                        body += '<td>' + smtTrialS + '</td>';
                        body += '<td>' + smtTrialL + '</td>';
                        body += '<td>' + smtTrialE + '</td>';
                        body += '<td>' + smtMassS + '</td>';
                        body += '<td>' + smtMassL + '</td>';
                        body += '<td>' + smtMassE + '</td>';

                        body += '<td>' + housingMaterialS + '</td>';
                        body += '<td>' + housingMaterialE + '</td>';
                        body += '<td>' + housingIqcS + '</td>';
                        body += '<td>' + housingIqcE + '</td>';
                        body += '<td>' + housingTrialS + '</td>';
                        body += '<td>' + housingTrialL + '</td>';
                        body += '<td>' + housingTrialE + '</td>';
                        body += '<td>' + housingReliabilityS + '</td>';
                        body += '<td>' + housingReliabilityE + '</td>';
                        body += '<td>' + housingMassS + '</td>';
                        body += '<td>' + housingMassL + '</td>';
                        body += '<td>' + housingMassE + '</td>';

                        body += '<td>' + batteryMaterialS + '</td>';
                        body += '<td>' + batteryMaterialE + '</td>';
                        body += '<td>' + batteryIqcS + '</td>';
                        body += '<td>' + batteryIqcE + '</td>';
                        body += '<td>' + batteryTrialS + '</td>';
                        body += '<td>' + batteryTrialL + '</td>';
                        body += '<td>' + batteryTrialE + '</td>';
                        body += '<td>' + batteryReliabilityS + '</td>';
                        body += '<td>' + batteryReliabilityE + '</td>';
                        body += '<td>' + batteryMassS + '</td>';
                        body += '<td>' + batteryMassL + '</td>';
                        body += '<td>' + batterysMassE + '</td>';
                        body += '<td>' + batteryAgingS + '</td>';
                        body += '<td>' + batteryAgingL + '</td>';

                        body += '<td>' + assemblyMaterialS + '</td>';
                        body += '<td>' + assemblyMaterialE + '</td>';
                        body += '<td>' + assemblyIqcS + '</td>';
                        body += '<td>' + assemblyIqcE + '</td>';
                        body += '<td>' + assemblyTrialS + '</td>';
                        body += '<td>' + assemblyTrialL + '</td>';
                        body += '<td>' + assemblyTrialE + '</td>';
                        body += '<td>' + assemblySoftwareS + '</td>';
                        body += '<td>' + assemblySoftwareE + '</td>';
                        body += '<td>' + assemblyRandDS + '</td>';
                        body += '<td>' + assemblyRandDE + '</td>';

                        body += '<td>' + assemblyMassS + '</td>';
                        body += '<td>' + assemblyMassL + '</td>';
                        body += '<td>' + assemblyMassE + '</td>';

                        body += '<td>' + assemblyPackingS + '</td>';
                        body += '<td>' + assemblyPackingL + '</td>';
                        body += '<td>' + assemblyPackingE + '</td>';

                        ////body += '<td>' + '<p style="background-color:#FEDC0B;color:black;font-weight:bold;">' + dataList[ii].PackingMassProduction + '</p>' + '</td>';
                        //body += '<td class="proRemarks" style="color:#FF6600;"><span>' + dataList[ii].ProductionRemarks + '</span><input type="text" class="form-control remarks form-control" id="remarks" value="' + dataList[ii].ProductionRemarks + '" style="display:none;" /></td>';
                        body += '<td> <input type="button" class="btn btn-danger btn-sm mt-ladda-btn ladda-button btn-circle newPlanBtn" id="newPlanBtn" value="NEW PLAN" onclick="newMobilePlan(' + dataList[ii].AsmPlanId + ')" /><br/><br/><input type="button" class="btn btn-success btn-sm mt-ladda-btn ladda-button btn-circle editBtnForPro1" id="editBtnForPro1" onclick="editAPlan(' + dataList[ii].AsmPlanId + ')" value="EDIT" /></td>';
                        body += '<td> <input type="button" class="btn btn-danger btn-sm mt-ladda-btn ladda-button btn-circle inactiveBtn" id="inactiveBtn" onclick="inactiveAPlan(' + dataList[ii].AsmPlanId + ')" value="INACTIVE" /></td>';

                        body += '</tr>';

                        $("#tblForSelectedPro tbody").append(body);

                    }
                   // $("#tblForSelectedPro").dataTable().fnDestroy();

                    //$('.tblForSelectedPro').DataTable({
                    //    "scrollX": true,
                    //    "scrollY": true,
                    //    "paging": true,

                    //});
                    //var tdtblSam2 = $('.tblForSelectedPro').DataTable({
                    //    //"columnDefs": [{
                    //    //    "searchable": false,
                    //    //    "orderable": true,
                    //    //    "targets": 6
                    //    //}],
                    //    "lengthMenu": [[3, 5, 10, 20, 30, 50, -1], [3, 5, 10, 20, 30, 50, "All"]],
                    //    "scrollY": true,
                    //    "scrollX": true,
                    //  //  "scrollCollapse": true,
                    //    "autoWidth": false,

                    //    //fixedColumns: {
                    //    //    leftColumns: 7

                    //    //},
                    //    "order": [[2, 'desc']]
                    //});
                    //tdtblSam2.on('order.dt search.dt', function () {
                    //    tdtblSam2.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    //        cell.innerHTML = i + 1;
                    //    });
                    //}).draw();
                    
                    //   }).fnDestroy();
                }

            });
            //all selected project history

        }

    });
    
    $(document).ready(function () {
        $("#tblForSelectedPro tbody.tBodyForGraph").empty();
        //$('.tblForSelectedPro')({
        //    "scrollX": true,
        //    "scrollY": true,
        //    "paging": true,

        //});
      
        //    var tdtblSam2 = $('#tblForSelectedPro').DataTable({
        //        "columnDefs": [{
        //            "searchable": false,
        //            "orderable": true,
        //            "targets": 6
        //        }],
        //        "lengthMenu": [[3, 5, 10, 20, 30, 50, -1], [3, 5, 10, 20, 30, 50, "All"]],
        //        "scrollY": true,
        //        "scrollX": true,
        //        "scrollCollapse": true,
        //        "autoWidth": false,

        //        fixedColumns: {
        //            leftColumns: 7

        //        },
        //        "order": [[2, 'desc']]
        //    });
        //tdtblSam2.on('order.dt search.dt', function () {
        //    tdtblSam2.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
        //        cell.innerHTML = i + 1;
        //    });
        //}).draw();
    });
    //var tableToExcel = (function () {
    //    var uri = 'data:application/vnd.ms-excel;base64,'
    //    , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>'
    //    , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
    //    , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }
    //    return function (table, name, filename) {
    //        if (!table.nodeType) table = document.getElementById(table)
    //        var ctx = { worksheet: name || 'Worksheet', table: table.innerHTML }

    //        document.getElementById("dlink").href = uri + base64(format(template, ctx));
    //        document.getElementById("dlink").download = filename;
    //        document.getElementById("dlink").click();

    //    }
    //})()

    //proBatteryPlanTable
    //function fnExcelReport() {
    //    var tab_text = "<table border='2px'><tr bgcolor='#87AFC6'>";
    //    var textRange; var j = 0;
    //    var tab = document.getElementById('divScrollId'); // id of table

    //    for (j = 0 ; j < tab.rows.length ; j++) {
    //        tab_text = tab_text + tab.rows[j].innerHTML + "</tr>";
    //        //tab_text=tab_text+"</tr>";
    //    }

    //    tab_text = tab_text + "</table>";
    //    tab_text = tab_text.replace(/<A[^>]*>|<\/A>/g, "");//remove if u want links in your table
    //    tab_text = tab_text.replace(/<img[^>]*>/gi, ""); // remove if u want images in your table
    //    tab_text = tab_text.replace(/<input[^>]*>|<\/input>/gi, ""); // reomves input params

    //    var ua = window.navigator.userAgent;
    //    var msie = ua.indexOf("MSIE ");

    //    if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./))      // If Internet Explorer
    //    {
    //        txtArea1.document.open("txt/html", "replace");
    //        txtArea1.document.write(tab_text);
    //        txtArea1.document.close();
    //        txtArea1.focus();
    //        sa = txtArea1.document.execCommand("SaveAs", true, "Say Thanks to Sumit.xls");
    //    }
    //    else                 //other browser not tested on IE 11
    //        sa = window.open('data:application/vnd.ms-excel,' + encodeURIComponent(tab_text));

    //    return (sa);
    //}

    $("#btnExport").click(function (e) {
        var file = new Blob([$('.divScrollId').html()], { type: "application/vnd.ms-excel" });
        var url = URL.createObjectURL(file);
        var a = $("<a />", {
            href: url,
            download: "CKD.xls"
        }).appendTo("body").get(0).click();
        e.preventDefault();
    });

</script>
@*<script src="~/assets/global/scripts/datatable.js" type="text/javascript"></script>
<script src="~/assets/global/plugins/datatables/datatables.min.js" type="text/javascript"></script>
<script src="~/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js" type="text/javascript"></script>
<script src="~/assets/pages/scripts/table-datatables-rowreorder.min.js" type="text/javascript"></script>*@
