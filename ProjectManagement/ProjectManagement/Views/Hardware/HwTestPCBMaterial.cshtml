@using System.Web.Mvc.Html
@model ProjectManagement.ViewModels.Hardware.VmHardwareDetailTest




<style>
    div.scrollmenu {
        background-color: #778899;
        overflow: auto;
        white-space: nowrap;
    }

        div.scrollmenu a {
            display: inline-block;
            color: white;
            text-align: center;
            padding: 14px;
            text-decoration: none;
        }

            div.scrollmenu a:hover {
                background-color: #777;
            }
</style>

<link href="~/Content/fileinput.css" rel="stylesheet" />

<input type="hidden" id="hdnHwQcAssignId" value="@ViewBag.HwQcAssignId">

@using (Html.BeginForm("HwTestPCBMaterial", "Hardware", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.HwTestPcbModel.HwQcAssignId, new { @Value = @ViewBag.HwQcAssignId })
    @Html.HiddenFor(model => model.HwTestPcbModel.HwQcInchargeAssignId, new { @Value = @ViewBag.HwQcInchargeAssignId })
    @Html.HiddenFor(model => model.HwTestPcbModel.Added, new { @Value = User.Identity.Name })
    @Html.HiddenFor(model => model.HwTestPcbModel.AddedDate, new { @Value = DateTime.Now })
    @Html.HiddenFor(model => model.HwTestCustomModel.HwTestPcbId, new { @id = "hwTestPcbId", @Value = @ViewBag.HwTestCustomModel.HwTestPcbId })
    @Html.HiddenFor(model => model.HwTestPcbModel.QcDocUploadPath)
    <div class="page-head">
        <div class="page-title">
            <h1>
                Welcome! @ViewBag.UserInfo.UserFullName
                @*<small>only projects which passed QC</small>*@
            </h1>
        </div>
        <div class="action">
            @if (ViewBag.FgFlag == 1)
            {
                @Html.HiddenFor(model=>model.HwQcAssignCustomMasterModel.Flag,new{@Value=ViewBag.FgFlag})
                <a class="btn green btn-outline btn-circle btn-sm pull-right jquery-word-export" onclick="location.href='@Url.Action("HwFgTestNavigation", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'">
                    <i class="fa fa-arrow-circle-o-right"></i>
                    Go to Nav Page
                </a>
            }
            else
            {
                <a class="btn green btn-outline btn-circle btn-sm pull-right jquery-word-export" onclick="location.href='@Url.Action("HwTestNavigation", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'">
                    <i class="fa fa-arrow-circle-o-right"></i>
                    Go to Nav Page
                </a>
            }
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="scrollmenu">
                <a onclick="location.href='@Url.Action("HwTestPCBMaterial", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'+'&flag='+'@ViewBag.FgFlag'">PCB</a>
                <a onclick="location.href='@Url.Action("HwTestPcbAComponentInfo", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'">PCBA</a>
                <a onclick="location.href='@Url.Action("HwTestCameraInfo", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'+'&flag='+'@ViewBag.FgFlag'">Camera</a>
                <a onclick="location.href='@Url.Action("HwTestTpLcdInfo", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'+'&flag='+'@ViewBag.FgFlag'">TP+LCD</a>
                <a onclick="location.href='@Url.Action("HwTestSoundInfo", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'+'&flag='+'@ViewBag.FgFlag'">Sound</a>
                <a onclick="location.href='@Url.Action("HwTestFPCandSIMSlotInfo", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'+'&flag='+'@ViewBag.FgFlag'">FPC & SimSlot</a>
                <a onclick="location.href='@Url.Action("HwTestBatteryInfo", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'+'&flag='+'@ViewBag.FgFlag'">Battery</a>
                <a onclick="location.href='@Url.Action("HwTestChargerInfo", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'+'&flag='+'@ViewBag.FgFlag'">Charger</a>
                <a onclick="location.href='@Url.Action("HwTestUsbCableInfo", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'+'&flag='+'@ViewBag.FgFlag'">USB</a>
                <a onclick="location.href='@Url.Action("HwTestEarphoneInterfaceInfo", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'">Earphone</a>
                <a onclick="location.href='@Url.Action("HwTestChargingInfo", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'+'&flag='+'@ViewBag.FgFlag'">Charging</a>
                <a onclick="location.href='@Url.Action("HwTestHousingInfo", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'+'&flag='+'@ViewBag.FgFlag'">Housing</a>
                <a onclick="location.href='@Url.Action("HwTestCrossMatchInfo", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'+'&flag='+'@ViewBag.FgFlag'">Cross Match</a>
                <a onclick="location.href='@Url.Action("HwTestOverall", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'+'&flag='+'@ViewBag.FgFlag'">Overall</a>
                @if (ViewBag.FgFlag == 1)
                {
                    <a onclick="location.href='@Url.Action("HwFgBatteryTest", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'+'&flag='+'@ViewBag.FgFlag'">Battery Cycle Test</a>
                    <a onclick="location.href='@Url.Action("HwFgChargerTest", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'+'&flag='+'@ViewBag.FgFlag'">Charger Test</a>
                    <a onclick="location.href='@Url.Action("HwFgUsbCableTest", "Hardware")?hwQcAssignId='+$('#hdnHwQcAssignId').val()+'&hwqcinchargeassignId='+'@ViewBag.HwQcInchargeAssignId'+'&projectName='+'@Html.DisplayFor(model=>model.ProjectMasterModel.ProjectName)'+'&flag='+'@ViewBag.FgFlag'">USB Cable Test</a>
                }
            </div>
        </div>
    </div>

    <div class="portlet box green">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-plug"></i>Hardware Test : @Html.DisplayFor(model => model.ProjectMasterModel.ProjectName, new { @class = "control-label" })
            </div>
            <div class="tools">
                <a class="collapse" href="javascript:;" data-original-title="" title=""> </a>

                <a class="reload" href="javascript:;" data-original-title="" title=""> </a>
                <a class="fullscreen" href="#" data-original-title="" title=""> </a>

            </div>
        </div>
        <div class="portlet-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-body">
                        <h4 class="bold">PCB Material Info</h4>
                        <hr />
                        @Html.ValidationSummary(true)
                        @*@Html.HiddenFor(model => model.HwTestPcbId)*@

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.HwTestMstr_HwTestMstrId, "HwTestMstr_HwTestMstrId", new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("HwTestMstr_HwTestMstrId", String.Empty)
                                    @Html.ValidationMessageFor(model => model.HwTestMstr_HwTestMstrId)
                                </div>
                            </div>*@
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.HwTestPcbModel.Thickness, new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(model => model.HwTestPcbModel.Thickness, new { @class = "form-control" })
                                        <span class="text-danger">@Html.ValidationMessageFor(model => model.HwTestPcbModel.Thickness)</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.HwTestPcbModel.Materials, new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(model => model.HwTestPcbModel.Materials, new { @class = "form-control" })
                                        <span class="text-danger">@Html.ValidationMessageFor(model => model.HwTestPcbModel.Materials)</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.HwTestPcbModel.Recommendation, new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.HwTestPcbModel.Recommendation, new { @class = "form-control", @rows = 3 })
                                        @Html.ValidationMessageFor(model => model.HwTestPcbModel.Recommendation)
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.HwTestPcbModel.Comment, new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.HwTestPcbModel.Comment, new { @class = "form-control", @rows = 3 })
                                        @Html.ValidationMessageFor(model => model.HwTestPcbModel.Comment)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="control-label col-md-2">File Upload</label>
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(model => model.HwTestPcbModel.HwQcDocUpload, new { type = "file", @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2"></div>
                                <div class="col-md-10">
                                    <div class="file-preview-thumbnails">
                                        <div class="container-fluid">
                                            <div class="file-preview-frame file-preview-initial" id="preview-1475130072371-init_0" data-fileindex="init_0" data-template="image">
                                                <div class="">



                                                    @if (@Model.HwTestPcbModel == null || @Model.HwTestPcbModel.QcDocUploadPath == null || @Model.HwTestPcbModel.QcDocUploadPath == "../Content/UploadImage/")
                                                    {

                                                        <img src="~/assets/layouts/layout4/img/no-image.png" class=" file-preview-image img-responsive" title="" alt="" style="width: 330px; height: 160px;" />

                                                    }

                                                    else if (@Model.HwTestPcbModel.ImageExtension == ".jpg" || @Model.HwTestPcbModel.ImageExtension == ".png" || @Model.HwTestPcbModel.ImageExtension == ".jpeg")
                                                    {

                                                        <img src="@Model.HwTestPcbModel.QcDocUploadPath" class=" file-preview-image img-responsive" title="" alt="" style="width:auto;height:160px;" />

                                                    }
                                                    else if (@Model.HwTestPcbModel.ImageExtension == ".pdf")
                                                    {

                                                        <embed class="file-preview-image img-responsive" id="filePath" src="@Model.HwTestPcbModel.QcDocUploadPath" width="auto" height="400px" type="application/pdf" />

                                                    }



                                                </div>
                                                <div class="file-thumbnail-footer">

                                                    <div class="file-actions">
                                                        <div class="file-footer-buttons">

                                                            <button type="button" class="btn btn-xs btn-default btnFilePreview" title="View Details" id="btnFilePreviewBootImage"><i class="glyphicon glyphicon-search "></i></button>
                                                        </div>

                                                        <div class="clearfix"></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        @if (@ViewBag.HwTestCustomModel.HwTestPcbId == null)
                                        {
                                            <input type="submit" value="Save" class="btn btn-primary" id="btnsave" />
                                        }
                                        else
                                        {
                                            <input type="submit" value="Update" class="btn btn-primary" id="btnupdate" />
                                        }

                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>




}

<!--Modal Start-->

<div class="modal fade" id="filePreviewModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Preview</h4>
                <h4 class="modal-title" id="btnModalDataChangeLabel" style="display:none">Modal title</h4>
            </div>
            <div class="modal-body" id="modelBody">
                @*<embed src="@Model.IndividualProjectViewModel.PmBootImageAnimationModel.ImageUpload1" style="width:500px; height:375px;" frameborder="0"></embed>*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>



<!--Modal End-->



<script>
    $(function () {
        //var msg = $('#hdnSuccess').val();
        var msg = ('@(TempData["message"])');
        if (msg !== "") {
            alertify.notify(msg, 'success', 5, function () { console.log("dismiss"); });
        }
    });

    //==============================================================================================================
    $('[class*="btnFilePreview"]').on('click', function () {

        var btnId = $(this).attr('id');
        var modalData = "";
        console.log(btnId);
        $('#filePreviewModal').modal();
        if (btnId == "btnFilePreviewBootImage") {
            modalData += '<embed src="@ViewBag.src" style="width:500px; height:375px;" frameborder="0"></embed>';
            document.getElementById("modelBody").innerHTML = modalData;
        }
    });
</script>
